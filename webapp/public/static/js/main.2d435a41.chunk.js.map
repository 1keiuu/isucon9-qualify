{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","components/LoadingComponent.tsx","components/BasePageComponent.tsx","actions/errorAction.ts","errors/ResponseError.ts","errors/AppResponseError.ts","errors/NotFoundError.ts","actions/fetchItemPageAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","reducers/index.ts","pages/ItemBuyPage.tsx","pages/TransactionPage.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/UserPage.tsx","pages/UserSettingPage.tsx","pages/BuyComplete.tsx","pages/ItemListPage.tsx","pages/ItemPage.tsx","containers/ItemPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/pageReducuer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","appClient","baseUrl","defaultHeaders","fetch","concat","method","headers","params","requestOption","mode","assign","Content-Type","credentials","body","JSON","stringify","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","response","status","Error","json","newAuthState","userId","address","payload","push","top","catch","err","newErros","message","connect","formError","useStyles","makeStyles","progress","LoadingComponent","Fragment","CircularProgress","themeInstance","createMuiTheme","background","default","BasePageComponent","MuiThemeProvider","Container","maxWidth","isLoading","components_LoadingComponent","children","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","ResponseError","_Error","res","inherits","createClass","wrapNativeSuper","AppResponseError","_ResponseError","apply","arguments","NotFoundError","fetchItemPageStartAction","fetchItemPageSuccessAction","fetchItemPageFailAction","length","undefined","errorType","errorCode","NotFoundPage","InternalServerErrorPage","withBaseComponent","WrappedComponent","BasePageComponent_BasePageComponent","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","_onChangeName","_onChangeDescription","_onChangePrice","sellItem","input","validator","isNumeric","no_symbols","Number","components_ItemImageUploadComponent","multiline","rows","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","get","ok","csrf_token","itemId","SellFormContainer","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","_this$props","errors","cardError","appError","buyError","itemImage","thumbnailUrl","TextField_default","helperText","height","textAlign","paymentClient","PaymentResponseError","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","item_id","token","buyComplete","getResponse","buyFormError","history","viewingItem","ItemBuyFormContainer","ItemComponent","imageUrl","title","Card","getPath","GridListTileBar","subtitle","grid","ItemListComponent","items","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","GridListTile","ItemComponent_ItemComponent","return","GridList","cols","fab","position","bottom","right","sell","Fab_default","Edit","fontSize","itemList","mockItems","createdAt","mockUser","user","wrap","charAt","Divider","ItemListComponent_ItemListComponent","SellingButtonContainer","root","flexWrap","justifyContent","overflow","ItemPage","match","load","sm","descSection","divider","link","sellerId","AppBar","appBar","buyButton","PageComponentWithError","compose","withProps","branch","renderComponent","marginBottom","textDecoration","page","seller_id","fetchItemPageAction","itemEdit","buy","transaction","transactionId","userSetting","AppRoute","react_router","exact","ItemListPage","SignInPage","SignUpPage","SellPage","ItemPageContainer","ItemEditPage","ItemBuyPage","BuyCompletePage","TransactionPage","UserPage","UserSettingPage","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","getState","action","group","info","groupEnd","authStatus","objectSpread","initialState","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","render","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2d435a41.chunk.js","sourcesContent":["import React from 'react';\nimport {FormHelperText} from \"@material-ui/core\";\n\ninterface ErrorMessageComponentProps {\n    id: string,\n    error: string,\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({ id, error}) => {\n    return (\n        <FormHelperText\n            key={error}\n            id={id}\n            error={true}\n        >\n            {error}\n        </FormHelperText>\n    );\n};\n\nexport { ErrorMessageComponent }","import React from 'react';\n\nimport {Avatar, Typography, TextField, Button, Grid, createStyles, WithStyles} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n    onSubmit: (accountName: string, password: string) => void\n    error?: string,\n}\n\ninterface SignInFormComponentState {\n    accountName: string,\n    password: string,\n}\n\nclass SignInPageFormComponent extends React.Component<SignInFormComponentProps, SignInFormComponentState> {\n    constructor(props: SignInFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { accountName, password } = this.state;\n        this.props.onSubmit(accountName, password);\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { accountName, password } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    ログインページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"accountName\"\n                        label=\"ユーザ名\"\n                        name=\"accountName\"\n                        autoFocus\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"signInButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"signInButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onSubmit}\n                        className={classes.submit}\n                    >\n                        ログイン\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n    paymentUrl: 'http://localhost:5555',\n}","import config from '../config';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n    private baseUrl: string = config.apiUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'same-origin',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            requestOption.body = JSON.stringify(params);\n        }\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new AppClient();","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {routes} from \"../routes/Route\";\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postLoginAction(accountName: string, password: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/login', {\n            account_name: accountName,\n            password: password,\n        })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body) => {\n                dispatch(loginSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(loginFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface LoginSuccessAction {\n    type: typeof LOGIN_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function loginSuccessAction(newAuthState: AuthStatusState): LoginSuccessAction {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface LoginFailAction {\n    type: typeof LOGIN_FAIL,\n    payload: FormErrorState,\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n    return {\n        type: LOGIN_FAIL,\n        payload: newErros,\n    };\n}\n","import SignInPageFormComponent from \"../components/SignInFormComponent\";\nimport { connect } from 'react-redux';\nimport { postLoginAction } from \"../actions/authenticationActions\";\n\nconst mapStateToProps = (state: any) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSubmit: (accountName: string, password: string) => {\n        dispatch(postLoginAction(accountName, password));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPageFormComponent)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n        margin: theme.spacing(2),\n    },\n}));\n\nconst LoadingComponent: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CircularProgress className={classes.progress}/>\n        </React.Fragment>\n    );\n};\n\nexport default LoadingComponent;\n","import React, {ReactNode} from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport LoadingComponent from \"./LoadingComponent\";\n\nconst themeInstance = createMuiTheme({\n    palette: {\n        background: {\n            default: 'white'\n        },\n    },\n});\n\nexport type Props = {\n    children: ReactNode\n    isLoading: boolean\n}\n\nclass BasePageComponent extends React.Component<Props> {\n    render() {\n        return (\n            <MuiThemeProvider theme={themeInstance}>\n                <Container maxWidth=\"lg\">\n                    {\n                        this.props.isLoading ? (\n                            <LoadingComponent/>\n                        ) : (this.props.children)\n                    }\n                </Container>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport { BasePageComponent }","import {Action} from \"redux\";\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR>{}\n\nexport function notFoundError(): NotFoundErrorAction {\n    return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction extends Action<typeof INTERNAL_SERVER_ERROR>{}\n\nexport function internalServerError(): InternalServerErrorAction {\n    return { type: INTERNAL_SERVER_ERROR };\n}\n","export class ResponseError extends Error {\n    private readonly res: Response;\n\n    constructor(message: string, response: Response) {\n        super(message);\n        this.res = response;\n    }\n\n    getResponse(): Response {\n        return this.res;\n    }\n}","import {ResponseError} from \"./ResponseError\";\n\nexport class AppResponseError extends ResponseError {}","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport {Action, AnyAction} from \"redux\";\nimport {GetItemRes} from \"../types/appApiTypes\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {ItemData} from \"../dataObjects/item\";\nimport {NotFoundError} from \"../errors/NotFoundError\";\n\nexport const FETCH_ITEM_PAGE_START = 'FETCH_ITEM_PAGE_START';\nexport const FETCH_ITEM_PAGE_SUCCESS = 'FETCH_ITEM_PAGE_SUCCESS';\nexport const FETCH_ITEM_PAGE_FAIL = 'FETCH_ITEM_PAGE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>\n\nexport function fetchItemPageAction(itemId: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        dispatch(fetchItemPageStartAction());\n        AppClient.get(`/items/${itemId}.json`)\n            .then((response: Response) => {\n                console.log(response);\n                if (!response.ok) {\n                    if (response.status === 404) {\n                        throw new NotFoundError('Item not found');\n                    }\n\n                    throw new AppResponseError('Request for getting item data was failed', response);\n                }\n\n                return response.json();\n            })\n            .then((body: GetItemRes) => {\n                dispatch(fetchItemPageSuccessAction({\n                    id: body.id,\n                    status: body.status,\n                    sellerId: body.seller_id,\n                    name: body.name,\n                    price: body.price,\n                    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n                    description: body.description,\n                    createdAt: '2019-07-20 12:00:00', // TODO\n                }));\n            })\n            .catch((err: Error) => {\n                dispatch(fetchItemPageFailAction());\n            });\n    };\n}\n\nexport interface FetchItemPageStartAction extends Action<typeof FETCH_ITEM_PAGE_START> {}\n\nconst fetchItemPageStartAction = (): FetchItemPageStartAction => {\n    return {\n        type: FETCH_ITEM_PAGE_START,\n    };\n};\n\nexport interface FetchItemPageSuccessAction extends Action<typeof FETCH_ITEM_PAGE_SUCCESS > {\n    payload: {\n        item: ItemData,\n    },\n}\n\nconst fetchItemPageSuccessAction = (item: ItemData): FetchItemPageSuccessAction => {\n    return {\n        type: FETCH_ITEM_PAGE_SUCCESS ,\n        payload: {\n            item\n        },\n    };\n};\n\nexport interface FetchItemPageFailAction extends Action<typeof FETCH_ITEM_PAGE_FAIL > {}\n\nconst fetchItemPageFailAction = (): FetchItemPageFailAction => {\n    return {\n        type: FETCH_ITEM_PAGE_FAIL ,\n    };\n};\n\n","import {\n    INTERNAL_SERVER_ERROR,\n    InternalServerErrorAction,\n    NOT_FOUND_ERROR,\n    NotFoundErrorAction\n} from \"../actions/errorAction\";\nimport {FETCH_ITEM_PAGE_FAIL, FetchItemPageFailAction} from \"../actions/fetchItemPageAction\";\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType = typeof NoError | typeof NotFoundError | typeof InternalServerError;\n\nexport interface ErrorState {\n    errorType: ErrorType,\n    errorCode?: number,\n}\n\nconst initialState: ErrorState = {\n    errorType: NoError,\n};\n\ntype errorActions = NotFoundErrorAction | InternalServerErrorAction | FetchItemPageFailAction;\n\nconst error = (state: ErrorState = initialState, action: errorActions): ErrorState => {\n    switch (action.type) {\n        case NOT_FOUND_ERROR:\n            return { errorType: NotFoundError, errorCode: 404 };\n        case INTERNAL_SERVER_ERROR:\n        case FETCH_ITEM_PAGE_FAIL:\n            return { errorType: InternalServerError, errorCode: 500 };\n        default:\n            return { errorType: NoError };\n    }\n};\n\nexport default error;","import React from 'react';\n\nconst NotFoundPage: React.FC = () => (\n    <div>404 Not Found</div>\n);\n\nexport default NotFoundPage;","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n    <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;","import React from 'react';\nimport {BasePageComponent} from \"../components/BasePageComponent\";\nimport {ErrorType, InternalServerError, NotFoundError} from \"../reducers/errorReducer\";\nimport {branch, renderComponent, withProps, compose} from 'recompose';\nimport NotFoundPage from \"../pages/error/NotFoundPage\";\nimport InternalServerErrorPage from \"../pages/error/InternalServerErrorPage\";\n\n/**\n * @deprecated\n */\nexport const withBaseComponent = (WrappedComponent: React.ComponentType<any>): React.FC<any> => {\n    return () => (\n        <BasePageComponent isLoading={true}>\n            <WrappedComponent />\n        </BasePageComponent>\n    );\n};\n\nexport interface ErrorProps {\n    errorType: ErrorType,\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n    compose<Props, Props>(\n        withProps((props: Props) => ({\n            errorType: props.errorType,\n        })),\n        branch<BaseProps>(\n            (props: BaseProps) => props.errorType === NotFoundError,\n            renderComponent(NotFoundPage)\n        ),\n        branch<BaseProps>(\n            (props: BaseProps) => props.errorType === InternalServerError,\n            renderComponent(InternalServerErrorPage)\n        )\n    );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from \"../containers/SignInFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignInPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignInFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SignInPage);","import React from 'react';\nimport {Avatar, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {RegisterReq} from \"../types/appApiTypes\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n    register: (params: RegisterReq) => void\n    error: string,\n}\n\ninterface SignUpFormComponentState {\n    accountName: string,\n    address: string,\n    password: string,\n}\n\nclass SignUpFormComponent extends React.Component<SignUpFormComponentProps, SignUpFormComponentState> {\n    constructor(props: SignUpFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            address: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangeAddress = this._onChangeAddress.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.register({\n            account_name: this.state.accountName,\n            address: this.state.address,\n            password: this.state.password,\n        });\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { accountName, address, password } = this.state;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    新規登録\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"ユーザ名\"\n                        name=\"name\"\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"address\"\n                        label=\"住所\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this._onChangeAddress}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"signUpButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"signUpButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        新規登録\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.login.path}>すでにアカウントをお持ちの方はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {RegisterReq, RegisterRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/register', payload)\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: RegisterRes) => {\n                dispatch(registerSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(registerFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface RegisterSuccessAction {\n    type: typeof REGISTER_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function registerSuccessAction(newAuthState: AuthStatusState): RegisterSuccessAction {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface RegisterFailAction {\n    type: typeof REGISTER_FAIL,\n    payload: FormErrorState,\n}\n\nexport function registerFailAction(newErros: FormErrorState): RegisterFailAction {\n    return {\n        type: REGISTER_FAIL,\n        payload: newErros,\n    };\n}\n","import SignUpPageFormComponent from \"../components/SignUpFormComponent\";\nimport { connect } from 'react-redux';\nimport {postRegisterAction} from \"../actions/registerAction\";\nimport {RegisterReq} from \"../types/appApiTypes\";\n\nconst mapStateToProps = (state: any) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    register: (params: RegisterReq) => {\n        dispatch(postRegisterAction(params));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPageFormComponent)","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SignUpFormContainer from \"../containers/SignUpFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignUpPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignUpFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SignUpPage);","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport { Camera } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    upload: {\n        display: 'none',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n}\n\ninterface ItemImageUploadComponentState {\n    file?: File,\n    imagePreviewUrl: string,\n}\n\nclass ItemImageUploadComponent extends React.Component<ItemImageUploadComponentProps, ItemImageUploadComponentState> {\n    constructor(props: ItemImageUploadComponentProps) {\n        super(props);\n\n        this.state = {\n            imagePreviewUrl: ''\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (e.target.files === null) {\n            return;\n        }\n\n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if (typeof reader.result !== 'string') {\n                throw new Error();\n            }\n\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { imagePreviewUrl } = this.state;\n        let imagePreview = null;\n        console.log(imagePreviewUrl);\n\n        if (imagePreviewUrl) {\n            imagePreview = (<img alt=\"プレビュー\" src={imagePreviewUrl} />);\n        } else {\n            imagePreview = (\n                <Paper>\n                    <Avatar className={classes.avatar}>\n                        <Camera />\n                    </Avatar>\n                    <Typography>商品画像</Typography>\n                </Paper>\n            )\n        }\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={8}>\n                    {imagePreview}\n                </Grid>\n                <Grid item xs={4}>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.upload}\n                        id=\"outlined-button-file\"\n                        type=\"file\"\n                        onChange={this._handleImageChange}\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                            Upload\n                        </Button>\n                    </label>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\n\nimport {Typography, TextField, Button, createStyles, Theme, WithStyles} from '@material-ui/core';\nimport ItemImageUploadComponent from \"../components/ItemImageUploadComponent\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n    sellItem: (name: string, description: string, price: number) => void\n    error?: string,\n}\n\ninterface SellFormComponentState {\n    name: string,\n    description: string,\n    price: number,\n}\n\nclass SellFormComponent extends React.Component<SellFormComponentProps, SellFormComponentState> {\n    constructor(props: SellFormComponentProps) {\n        super(props);\n\n        this.state = {\n            name: '',\n            description: '',\n            price: 0,\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeDescription = this._onChangeDescription.bind(this);\n        this._onChangePrice = this._onChangePrice.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { name, description, price } = this.state;\n        this.props.sellItem(name, description, price);\n    }\n\n    _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n        const input = e.target.value;\n\n        // Only allow number\n        if (!validator.isNumeric(input, { no_symbols: true })) {\n            e.preventDefault();\n            return;\n        }\n\n        this.setState({\n            price: Number(input),\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { name, description, price } = this.state;\n\n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h5\">\n                    出品ページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <ItemImageUploadComponent/>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"商品名\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this._onChangeName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"商品説明\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this._onChangeDescription}\n                        multiline\n                        rows={5}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"値段\"\n                        name=\"price\"\n                        value={price}\n                        onChange={this._onChangePrice}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"sellButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"sellButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        出品する\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SellFormComponent)\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {SellReq, SellRes, SettingsRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function listItemAction(name: string, description: string, price: number): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.get('/settings')\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('CSRF tokenの取得に失敗しました');\n                }\n                return response.json();\n            })\n            .then((body: SettingsRes) => {\n                const payload: SellReq = {\n                    name, description, price,\n                    csrf_token: body.csrf_token,\n                };\n                return AppClient.post('/sell', payload);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('HTTP status not 200');\n                }\n                return response.json();\n            })\n            .then((body: SellRes) => {\n                dispatch(sellingSuccessAction(body.id));\n                dispatch(push(routes.top.path)); // TODO\n            })\n            .catch((err: Error) => {\n                dispatch(sellingFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface SellingSuccessAction {\n    type: typeof SELLING_ITEM_SUCCESS,\n    payload: {\n        itemId: number,\n    },\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n    return {\n        type: SELLING_ITEM_SUCCESS,\n        payload: { itemId },\n    };\n}\n\nexport interface SellingFailAction {\n    type: typeof SELLING_ITEM_FAIL,\n    payload: FormErrorState,\n}\n\nexport function sellingFailAction(newErros: FormErrorState): SellingFailAction {\n    return {\n        type: SELLING_ITEM_FAIL,\n        payload: newErros,\n    };\n}\n","import {connect} from \"react-redux\";\nimport SellFormComponent from \"../components/SellFormComponent\";\nimport {listItemAction} from \"../actions/sellingItemAction\";\n\nconst mapStateToProps = (state: any) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    sellItem: (name: string, description: string, price: number) => {\n        dispatch(listItemAction(name, description, price));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellFormComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from \"../containers/SellFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SellPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SellFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SellPage);\n","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst ItemEditPage: React.FC = () => (\n    <div>Item Edit Page</div>\n);\n\nexport default withBaseComponent(ItemEditPage);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport {BuyFormErrorState} from \"../reducers/formErrorReducer\";\nimport {ErrorMessageComponent} from './ErrorMessageComponent';\nimport {createStyles, StyleRules, Theme, WithStyles} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n        textAlign: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3,0, 1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 1),\n    },\n});\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n    item: ItemData,\n    onBuyAction: (itemId: number, cardNumber: string) => void,\n    errors: BuyFormErrorState,\n}\n\ninterface ItemBuyFormState {\n    cardNumber: string,\n}\n\nclass ItemBuyFormComponent extends React.Component<ItemBuyFormProps, ItemBuyFormState> {\n    constructor(props: ItemBuyFormProps) {\n        super(props);\n\n        this.state = {\n            cardNumber: '',\n        };\n\n        this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n        this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    }\n\n    _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n        const cardNumber = e.target.value;\n\n        if (cardNumber.length > 8) {\n            return;\n        }\n\n        if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n            return;\n        }\n\n        this.setState({\n            cardNumber: cardNumber.toUpperCase(),\n        });\n    }\n\n    _onClickBuyButton(e: React.MouseEvent) {\n        const { item: { id } } = this.props;\n        const { cardNumber } = this.state;\n        this.props.onBuyAction(id, cardNumber);\n    }\n\n    render() {\n        const { item, errors, classes } = this.props;\n        const cardError = errors.cardError;\n        const appError = errors.buyError;\n\n        return (\n            <React.Fragment>\n                <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl}/>\n                <Typography variant=\"h4\">{item.name}</Typography>\n                <Typography variant=\"h5\">{`¥${item.price}`}</Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"cardNumber\"\n                        label=\"カード番号\"\n                        name=\"cardNumber\"\n                        helperText=\"16進数大文字で入力してください\"\n                        error={!!cardError}\n                        value={this.state.cardNumber}\n                        onChange={this._onChangeCardNumber}\n                        autoFocus\n                    />\n                    {\n                        cardError &&\n                        <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n                    }\n                    <Button\n                        id=\"buyButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onClickBuyButton}\n                        className={classes.submit}\n                    >\n                        購入\n                    </Button>\n                    {\n                        appError &&\n                        <ErrorMessageComponent id=\"buyButton\" error={appError}/>\n                    }\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n    private baseUrl: string = config.paymentUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'cors',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            requestOption.body = JSON.stringify(params);\n        }\n\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new PaymentClient();","import {ResponseError} from \"./ResponseError\";\n\nexport class PaymentResponseError extends ResponseError {}","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {BuyReq} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\nimport {CardReq, CardRes} from \"../types/paymentApiTypes\";\nimport {PaymentResponseError} from \"../errors/PaymentResponseError\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {ResponseError} from \"../errors/ResponseError\";\n\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function buyItemAction(itemId: number, cardNumber: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        PaymentClient.post('/card', {\n            card_number: cardNumber,\n            shop_id: 'TODO',\n        } as CardReq)\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new PaymentResponseError(\n                        'request to /card of payment service was failed', response\n                    );\n                }\n\n                return response.json();\n            })\n            .then((body: CardRes) => {\n                return AppClient.post('/buy', {\n                    item_id: itemId,\n                    token: body.token,\n                } as BuyReq);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new AppResponseError(\n                        'request to /buy of app was failed', response\n                    );\n                }\n\n                return response.json();\n            })\n            .then((body: {}) => {\n                dispatch(buySuccessAction());\n                dispatch(push(routes.buyComplete.path));\n            })\n            .catch((err: Error) => {\n                if (err instanceof ResponseError) {\n                    return err.getResponse().json();\n                }\n\n                dispatch(buyFailAction(err.message));\n            })\n            .then((body) => {\n                dispatch(usingCardFailAction(body.error)); // TODO cardエラーかappエラーか区別する\n            });\n    };\n}\n\nexport interface BuySuccessAction {\n    type: typeof BUY_SUCCESS,\n}\n\nexport function buySuccessAction(): BuySuccessAction {\n    return {\n        type: BUY_SUCCESS,\n    };\n}\n\nexport interface UsingCardFailAction {\n    type: typeof USING_CARD_FAIL,\n    payload: FormErrorState,\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction{\n    return {\n        type: USING_CARD_FAIL,\n        payload: {\n            error: undefined,\n            buyFormError: {\n                cardError: error,\n            },\n        },\n    };\n}\nexport interface BuyFailAction {\n    type: typeof BUY_FAIL,\n    payload: FormErrorState,\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n    return {\n        type: BUY_FAIL,\n        payload: {\n            error: undefined,\n            buyFormError: {\n                buyError: error,\n            },\n        },\n    };\n}\n","import {connect} from \"react-redux\";\nimport ItemBuyFormComponent from \"../components/ItemBuyFormComponent\";\nimport {buyItemAction} from \"../actions/buyAction\";\n\nconst mapStateToProps = (state: any) => ({\n    item: state.viewingItem.item,\n    errors: state.formError.buyFormError,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onBuyAction: (itemId: number, cardNumber: string) => {\n        dispatch(buyItemAction(itemId, cardNumber))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemBuyFormComponent);\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) => combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    error,\n    page,\n});\n","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\nimport ItemBuyFormContainer from \"../containers/ItemBuyFormContainer\";\n\nconst ItemBuyPage: React.FC = () => {\n    return (\n        <React.Fragment>\n            <ItemBuyFormContainer />\n        </React.Fragment>\n    );\n};\n\nexport default withBaseComponent(ItemBuyPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst TransactionPage: React.FC = () => (\n    <div>Transaction Page</div>\n);\n\nexport default withBaseComponent(TransactionPage);","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link as RouteLink } from 'react-router-dom'\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {routes} from \"../routes/Route\";\n\nconst useStyles = makeStyles(theme => ({\n    itemImage: {\n        height: '100%',\n    },\n}));\n\ninterface ItemComponentProps {\n    itemId: number\n    imageUrl: string\n    title: string\n    price: number\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n    itemId, imageUrl, title, price\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <RouteLink to={routes.item.getPath(itemId)}>\n                <img className={classes.itemImage} src={imageUrl} alt={title}/>\n            </RouteLink>\n            <GridListTileBar\n                title={title}\n                subtitle={`¥${price}`}\n            />\n        </Card>\n    );\n};\n\nexport { ItemComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        width: '300px',\n        height: '300px',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    const itemComponents = [];\n\n    for (const item of items) {\n        itemComponents.push(\n            <GridListTile className={classes.grid} key={item.id}>\n                <ItemComponent itemId={item.id} imageUrl={item.thumbnailUrl} title={item.name} price={item.price}/>\n            </GridListTile>\n        )\n    }\n\n    return (\n        <GridList cols={3}>\n            {itemComponents}\n        </GridList>\n    );\n};\n\nexport { ItemListComponent }","import React from 'react';\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Edit} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n        position: 'fixed',\n        top: 'auto',\n        bottom: '30px',\n        right: '30px',\n        width: '100px',\n        height: '100px',\n    },\n}));\n\ninterface SellingButtonComponentProps {\n    onClick: (e: React.MouseEvent) => void\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n        <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            onClick={onClick}\n        >\n            <Edit fontSize=\"large\" />\n        </Fab>\n    );\n};\n\nexport { SellingButonComponent }","import { push } from 'connected-react-router';\nimport {SellingButonComponent} from \"../components/SellingButtonComponent\";\nimport {connect} from \"react-redux\";\nimport {routes} from \"../routes/Route\";\nimport * as React from \"react\";\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onClick: (e: React.MouseEvent) => {\n        e.preventDefault();\n        dispatch(push(routes.sell.path));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellingButonComponent);","import React from 'react';\nimport { ItemListComponent } from \"../components/ItemListComponent\";\nimport { ItemData } from \"../dataObjects/item\";\nimport { UserData } from \"../dataObjects/user\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    avatar: {\n        margin: theme.spacing(3),\n        width: '100px',\n        height: '100px',\n    },\n    itemList: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\ninterface UserPageProps {\n    items: ItemData[]\n    user: UserData\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n};\n\nconst UserPage: React.FC/*<UserPageProps>*/ = (/*{ items, user }*/) => {\n    const classes = useStyles();\n    const user = mockUser;\n    const items = mockItems;\n\n    return (\n        <div>\n            <p>User Page</p>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={2}\n            >\n                <Grid item>\n                    <Avatar className={classes.avatar}>{user.accountName.charAt(0)}</Avatar>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h3\">{user.accountName}</Typography>\n                </Grid>\n            </Grid>\n            <Divider variant=\"middle\" />\n            <div className={classes.itemList}>\n                <ItemListComponent items={items}/>\n            </div>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(UserPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst UserSettingPage: React.FC = () => (\n    <div>User setting Page</div>\n);\n\nexport default withBaseComponent(UserSettingPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst BuyCompletePage: React.FC = () => (\n    <div>Item buying Page</div>\n);\n\nexport default withBaseComponent(BuyCompletePage);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(1),\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst ItemListPage: React.FC/*<ItemListPageProps>*/ = (/*{ items }: ItemListPageProps*/) => {\n    const classes = useStyles();\n    const items = mockItems;\n\n    return (\n        <div className={classes.root}>\n            <ItemListComponent items={items}/>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(ItemListPage);","import React from 'react';\nimport { ItemData } from \"../dataObjects/item\";\nimport {createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link as RouteLink, RouteComponentProps} from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {routes} from \"../routes/Route\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorProps, PageComponentWithError} from \"../hoc/withBaseComponent\";\nimport LoadingComponent from \"../components/LoadingComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    title: {\n        margin: theme.spacing(3),\n    },\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n    },\n    avatar: {\n        width: '50px',\n        height: '50px',\n    },\n    divider: {\n        margin: theme.spacing(1),\n    },\n    descSection: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    buyButton: {\n        margin: theme.spacing(1),\n    }\n});\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n    item: ItemData\n    load: (itemId: string) => void\n    isLoading: boolean\n}\n\ntype Props = ItemPageProps & RouteComponentProps<{ item_id: string }> & ErrorProps\n\nclass ItemPage extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n\n        console.log(this.props);\n        console.log(`load will be executed ${this.props.match.params.item_id}`);\n        this.props.load(this.props.match.params.item_id);\n    }\n\n    render() {\n        const { classes, item, isLoading } = this.props;\n\n        return (\n            <React.Fragment>\n                {\n                    isLoading ? (\n                        <LoadingComponent/>\n                    ) : (\n                        <React.Fragment>\n                            Item Page\n                            <Typography className={classes.title} variant=\"h3\">{item.name}</Typography>\n                            <Grid container spacing={2}>\n                                <Grid item>\n                                    <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl}/>\n                                </Grid>\n                                <Grid item xs={12} sm container>\n                                    <Grid item xs container direction=\"column\" spacing={2}>\n                                        <Grid item xs>\n                                            <div className={classes.descSection}>\n                                                <Typography variant=\"h4\">商品説明</Typography>\n                                                <Divider className={classes.divider} variant=\"middle\"/>\n                                                <Typography variant=\"body1\">{item.description}</Typography>\n                                            </div>\n\n                                            <div className={classes.descSection}>\n                                                <Typography variant=\"h4\">出品者</Typography>\n                                                <Divider className={classes.divider} variant=\"middle\"/>\n                                                <Grid\n                                                    container\n                                                    direction=\"row\"\n                                                    justify=\"center\"\n                                                    alignItems=\"center\"\n                                                    wrap=\"nowrap\"\n                                                    spacing={2}\n                                                >\n                                                    <Grid item>\n                                                        <RouteLink className={classes.link}\n                                                                   to={routes.user.getPath(item.sellerId)}>\n                                                            <Avatar className={classes.avatar}>\"T\"</Avatar>\n                                                        </RouteLink>\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <Typography variant=\"body1\">\"TODO\"</Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    direction=\"row\"\n                                    alignItems=\"center\"\n                                >\n                                    <Grid item>\n                                        <Typography variant=\"h5\">¥{item.price}</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" className={classes.buyButton}>購入</Button>\n                                    </Grid>\n                                </Grid>\n                            </AppBar>\n                        </React.Fragment>\n                    )\n                }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n\n","import {connect} from \"react-redux\";\nimport ItemPage from \"../pages/ItemPage\";\nimport {fetchItemPageAction} from \"../actions/fetchItemPageAction\";\nimport {AppState} from \"../index\";\n\nconst mapStateToProps = (state: AppState) => ({\n    errorType: state.error.errorType,\n    isLoading: state.page.isLoading,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    load: (itemId: string) => {\n        dispatch(fetchItemPageAction(itemId))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemPage);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SignInPage from \"../pages/SignInPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport SellPage from \"../pages/SellPage\";\nimport ItemEditPage from \"../pages/ItemEditPage\";\nimport ItemBuyPage from \"../pages/ItemBuyPage\";\nimport TransactionPage from \"../pages/TransactionPage\";\nimport UserPage from \"../pages/UserPage\";\nimport UserSettingPage from \"../pages/UserSettingPage\";\nimport BuyCompletePage from \"../pages/BuyComplete\";\nimport ItemListPage from \"../pages/ItemListPage\";\nimport ItemPageContainer from \"../containers/ItemPageContainer\";\n\ninterface route {\n    [name: string]: {\n        path: string,\n        getPath: (...params: any) => string, // TODO: optionalにしたい\n    }\n}\n\nexport const routes: route = {\n    top: {\n        path: '/',\n        getPath: () => '/',\n    },\n    login: {\n        path: '/login',\n        getPath: () => '/login',\n    },\n    register: {\n        path: '/register',\n        getPath: () => 'register',\n    },\n    sell: {\n        path: '/sell',\n        getPath: () => '/sell',\n    },\n    item: {\n        path: '/items/:item_id',\n        getPath: (itemId: number) => `/items/${itemId}`,\n    },\n    itemEdit: {\n        path: '/items/:item_id/edit',\n        getPath: (itemId: number) => `/items/${itemId}/edit`\n    },\n    buy: {\n        path: '/items/:item_id/buy',\n        getPath: (itemId: number) => `/items${itemId}/buy`,\n    },\n    buyComplete: {\n        path: '/buy/complete',\n        getPath: () => '/buy/complete',\n    },\n    transaction: {\n        path: '/transactions/:transaction_id',\n        getPath: (transactionId: number) => `/transactions/${transactionId}`,\n    },\n    user: {\n        path: '/users/:user_id',\n        getPath: (userId: number) => `/users/${userId}`,\n    },\n    userSetting: {\n        path: '/users/setting',\n        getPath: () => '/users/setting',\n    },\n};\n\nexport const AppRoute: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path={routes.top.path}         component={ItemListPage} />\n            <Route exact path={routes.login.path}       component={SignInPage} />\n            <Route exact path={routes.register.path}    component={SignUpPage}/>\n            <Route exact path={routes.sell.path}        component={SellPage} />\n            <Route exact path={routes.item.path}        component={ItemPageContainer} />\n            <Route exact path={routes.itemEdit.path}    component={ItemEditPage} />\n            <Route exact path={routes.buy.path}         component={ItemBuyPage} />\n            <Route exact path={routes.buyComplete.path} component={BuyCompletePage} />\n            <Route exact path={routes.transaction.path} component={TransactionPage} />\n            <Route exact path={routes.user.path}        component={UserPage} />\n            <Route exact path={routes.userSetting.path} component={UserSettingPage} />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport {AppRoute} from \"./routes/Route\";\n\nconst routes: Array<{\n    path: string,\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        pageName: 'Top page'\n    },\n    {\n        path: '/login',\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/register',\n        pageName: 'Sign up page',\n    },\n    {\n        path: '/items/:item_id',\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/items/:item_id/buy',\n        pageName: 'Item buy page',\n    },\n    {\n        path: '/buy/complete',\n        pageName: 'Buying complete page',\n    },\n    {\n        path: '/sell',\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        pageName: 'User page',\n    },\n    {\n        path: '/users/:user_id/setting',\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => any[] = () => {\n    const routeComponents: React.ReactNode[] = []; // TODO\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li key={route.pageName}>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC = () => {\n    return (\n        <React.Fragment>\n            <div>\n                <ul>\n                    {getLinks()}\n                </ul>\n            </div>\n            <hr />\n            <AppRoute/>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import logger from './logger';\nimport {Middleware} from \"redux\";\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;","import {AnyAction, Dispatch, Middleware, MiddlewareAPI} from \"redux\";\nimport {AppState} from \"../index\";\n\nconst logger: Middleware =\n    <S extends AppState>({ getState }: MiddlewareAPI<Dispatch, S>) =>\n        (next: Dispatch<AnyAction>) =>\n            (action: any): any => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    const result = next(action);\n    console.log('next state', getState());\n    console.groupEnd();\n    return result;\n};\n\nexport default logger;","import {LOGIN_SUCCESS} from \"../actions/authenticationActions\";\nimport {REGISTER_SUCCESS} from \"../actions/registerAction\";\nimport {AnyAction} from \"redux\";\n\n\nexport interface AuthStatusState {\n    userId?: number\n    accountName?: string\n    address?: string,\n}\n\nconst authStatus = (state: AuthStatusState = {}, action: AnyAction): AuthStatusState => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default authStatus;","import {LOGIN_FAIL} from \"../actions/authenticationActions\";\nimport { AnyAction } from \"redux\";\nimport {REGISTER_FAIL} from \"../actions/registerAction\";\nimport {SELLING_ITEM_FAIL} from \"../actions/sellingItemAction\";\n\nexport interface FormErrorState {\n    error?: string,\n    buyFormError?: BuyFormErrorState,\n}\n\nexport interface BuyFormErrorState {\n    cardError?: string, // Error from payment service\n    buyError?: string,  // Error from app\n}\n\nconst initialState: FormErrorState = {\n    error: undefined,\n    buyFormError: {},\n};\n\nconst formError = (state: FormErrorState = initialState, action: AnyAction): FormErrorState => {\n    switch (action.type) {\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case SELLING_ITEM_FAIL: {\n            return {\n                ...action.payload,\n            }\n        }\n        default:\n            return initialState;\n    }\n};\n\nexport default formError;","import { AnyAction } from \"redux\";\nimport {ItemData} from \"../dataObjects/item\";\nimport {FETCH_ITEM_PAGE_SUCCESS} from \"../actions/fetchItemPageAction\";\n\nexport interface ViewingItemState {\n    item?: ItemData\n}\n\nconst initialState: ViewingItemState = {\n};\n\nconst viewingItem = (state: ViewingItemState = initialState, action: AnyAction): ViewingItemState => {\n    switch (action.type) {\n        case FETCH_ITEM_PAGE_SUCCESS:\n            return {...state};\n        default:\n            return initialState;\n    }\n};\n\nexport default viewingItem;","import {AnyAction} from \"redux\";\nimport {FETCH_ITEM_PAGE_FAIL, FETCH_ITEM_PAGE_START, FETCH_ITEM_PAGE_SUCCESS} from \"../actions/fetchItemPageAction\";\n\nexport interface PageState {\n    isLoading: boolean\n}\n\nconst initialState: PageState = {\n    isLoading: true,\n};\n\nconst page = (state: PageState = initialState, action: AnyAction): PageState => {\n    switch (action.type) {\n        case FETCH_ITEM_PAGE_START:\n            return { isLoading: true };\n        case FETCH_ITEM_PAGE_SUCCESS:\n        case FETCH_ITEM_PAGE_FAIL:\n            return { isLoading: false };\n        default:\n            return {...state};\n    }\n};\n\nexport default page;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { getStore } from \"./configureStore\";\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","import {applyMiddleware, createStore, Reducer, Store} from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n    return createStore(\n        reducer,\n        composeWithDevTools(\n            applyMiddleware(\n                thunk,\n                routerMiddleware(history),\n                ...middlewares,\n            ),\n        ),\n    );\n};\n"],"sourceRoot":""}