{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","components/LoadingComponent.tsx","components/Header.tsx","containers/HeaderContainer.tsx","components/SnackBar.tsx","containers/SnackBarContainer.tsx","actions/snackBarAction.ts","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","httpClients/paymentClient.ts","actions/settingsAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","components/ItemFooterComponent.tsx","pages/ItemPage.tsx","actions/postBumpAction.ts","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","components/Transaction/SellerComponent.tsx","actions/postShippedDoneAction.ts","actions/postShippedAction.ts","containers/SellerTransactionContainer.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","components/Transaction/BuyerComponent.tsx","actions/postCompleteAction.ts","containers/BuyerTransactionContainer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabelComponent.tsx","components/TransactionComponent.tsx","components/TransactionListComponent.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","pages/UserSettingPage.tsx","containers/UserSettingPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","actions/postItemEditAction.ts","pages/ItemEditPage.tsx","reducers/index.ts","containers/ItemEditPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","middlewares/checkLocationChange.ts","actions/locationChangeAction.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/snackBarReducer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","append","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","asyncToGenerator","regenerator_default","mark","_callee","errRes","wrap","_context","prev","next","status","sent","abrupt","stop","_x","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","isLoggedIn","authStatus","ownUserId","goToTopPage","timeline","goToUserPage","user","getPath","goToSettingPage","userSetting","_React$useState","open","_React$useState2","slicedToArray","toggleDrawer","event","objectSpread","react","Drawer","onClose","List","ListItem","button","ListItemText","primary","AppBar","Toolbar","IconButton","edge","Menu_default","noWrap","close","padding","snackBar","available","reason","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","aria-label","Close_default","themeInstance","createMuiTheme","background","default","BasePageComponent","MuiThemeProvider","Container","maxWidth","HeaderContainer","loading","components_LoadingComponent","children","SnackBarContainer","paddingTop","page","isLoading","alreadyLoaded","checked","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","numSellItems","num_sell_items","newErrors","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","onImageChange","readAsDataURL","imagePreview","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","SellFormComponent","description","price","selectedCategoryId","_onImageChange","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","image","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","categories","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","map","category","categoryName","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","FormData","postFormData","itemId","filter","parentId","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemAction","Promise","resolve","fetchItemStartAction","get","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","image_url","parent_id","category_name","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","newError","paymentClient","baseURL","fetchSettings","fetchSettingStartAction","fetchSettingsSuccessAction","csrfToken","PaymentClient","setBaseURL","payment_service_url","fetchItemPageFailAction","settings","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","isMyPage","userDataRes","userData","transactions","transactionRes","_errRes","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPageData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","item_id","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","LoadingButtonComponent","_onClick","buttonName","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","card_number","shop_id","token","buyComplete","getResponse","usingCardFailAction","buyFailAction","buyFormError","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","appBar","buyButton","ItemFooterComponent","buttons","buttonText","ItemPage","load","match","_onClickItemEditButton","_onClickBumpButton","_onClickTransaction","onClickBuy","onClickItemEdit","onClickBump","onClickTransaction","viewer","title","sm","descSection","Divider","divider","categoryTimeline","link","charAt","components_ItemFooterComponent","marginBottom","textDecoration","POST_BUMP_START","POST_BUMP_SUCCESS","POST_BUMP_FAIL","postBumpAction","isItemLoading","buy","itemEdit","transaction","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","GridListTile","ItemComponent_ItemComponent","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","root","SellingButtonContainer","lastItem","loadMoreItems","ItemListComponent_ItemListComponent","flexWrap","justifyContent","overflow","isTimelineLoading","Initial","postShipped","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","SellerComponent","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","snackBarMessage","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","postComplete","BuyerComponent","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","TransactionPage","TransactionComponent","auth","error_NotFoundPage","error_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","normalLabel","light","soldOutLabel","grey","A100","tradingLabel","TransactionLabel","itemStatus","_getLabelByStatus","getLabelByStatus","_getLabelByStatus2","labelName","card","CardMedia_default","CardContent_default","TransactionLabelComponent_TransactionLabel","TransactionListComponent","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionListComponent_TransactionListComponent","_this$props3","Tabs_default","Tab_default","list","hidden","_getItemList","_getTransactionsList","tab","text","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","UserSettingPage","rest","objectWithoutProperties","react_router","render","textarea","img","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","category_id","categoryIdIsValid","BuyCompletePage","POST_ITEM_EDIT_START","POST_ITEM_EDIT_SUCCESS","POST_ITEM_EDIT_FAIL","postItemEditAction","itemPrice","reqParams","item_price","itemEditFormError","history","ItemEditPage","_onClickEdit","onClickEdit","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemEditPageContainer","BuyCompleteContainer","ItemPageContainer","TransactionPageContainer","UserSettingPageContainer","UserPageContainer","App","Route_AppRoute","middleware","getState","console","group","info","log","groupEnd","store","LOCATION_CHANGE","router","location","pathname","initialState","userPayload","pathChangeState","createBrowserHistory","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d5b9f8f8.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n    requestOption.body = JSON.stringify(params);\n\n    return await fetch(path, requestOption);\n  }\n\n  async postFormData(path: string, body: FormData): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      // MEMO: The reason why we should not set Content-Type header by ourselves\n      // https://stackoverflow.com/questions/39280438/fetch-missing-boundary-in-multipart-form-data-post\n      headers: this.defaultHeaders,\n      credentials: 'same-origin',\n    };\n\n    body.append('csrf_token', await this.getCsrfToken());\n    requestOption.body = body;\n\n    return await fetch(path, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { ErrorRes, LoginRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport type AuthActions =\n  | LoginSuccessAction\n  | LoginFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AuthActions>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AuthActions>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import * as React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AppBar } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  //\n}));\n\ninterface Props {\n  isLoggedIn: boolean;\n  ownUserId: number;\n  goToTopPage: () => void;\n  goToUserPage: (userId: number) => void;\n  goToSettingPage: () => void;\n}\n\nconst Header: React.FC<Props> = ({\n  isLoggedIn,\n  ownUserId,\n  goToTopPage,\n  goToUserPage,\n  goToSettingPage,\n}) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n  });\n\n  const onClickTop = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToTopPage();\n  };\n\n  const onClickMyPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToUserPage(ownUserId);\n  };\n\n  const onClickMySettingPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToSettingPage();\n  };\n\n  const toggleDrawer = (open: boolean) => (event: React.MouseEvent) => {\n    event.preventDefault();\n    setState({ ...state, open });\n  };\n\n  return (\n    <React.Fragment>\n      {isLoggedIn && (\n        <Drawer open={state.open} onClose={toggleDrawer(false)}>\n          <List>\n            <ListItem button onClick={onClickTop}>\n              <ListItemText primary=\"新着商品\" />\n            </ListItem>\n            <ListItem button onClick={onClickMyPage}>\n              <ListItemText primary=\"マイページ\" />\n            </ListItem>\n            <ListItem button onClick={onClickMySettingPage}>\n              <ListItemText primary=\"設定\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      )}\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          {isLoggedIn && (\n            <IconButton\n              color=\"inherit\"\n              onClick={toggleDrawer(true)}\n              edge=\"start\"\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography variant=\"h6\" noWrap>\n            ヘッダー\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport { Header };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { Header } from '../components/Header';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  ownUserId: state.authStatus.userId || 0,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  goToTopPage: () => {\n    dispatch(push(routes.timeline.path));\n  },\n  goToUserPage: (userId: number) => {\n    dispatch(push(routes.user.getPath(userId)));\n  },\n  goToSettingPage: () => {\n    dispatch(push(routes.userSetting.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import * as React from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\ntype Props = {\n  open: boolean;\n  message?: string;\n  handleClose: (event: React.MouseEvent) => void;\n};\n\nconst SnackBar: React.FC<Props> = ({ open, message, handleClose }) => {\n  const classes = useStyles();\n\n  const handleOnClose = (event: React.SyntheticEvent, reason: string) => {\n    return handleClose(event as React.MouseEvent);\n  };\n\n  return (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleOnClose}\n        message={<span>{message}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </React.Fragment>\n  );\n};\n\nexport { SnackBar };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { closeSnackBarAction } from '../actions/snackBarAction';\nimport { SnackBar } from '../components/SnackBar';\n\nconst mapStateToProps = (state: AppState) => ({\n  open: state.snackBar.available,\n  message: state.snackBar.reason,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  handleClose(event: React.MouseEvent) {\n    dispatch(closeSnackBarAction());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SnackBar);\n","import { Action } from 'redux';\n\nexport const SNACK_BAR_CLOSE = 'SNACK_BAR_CLOSE';\n\nexport type SnackBarActions = SnackBarClose;\n\nexport interface SnackBarClose extends Action<typeof SNACK_BAR_CLOSE> {}\n\nexport const closeSnackBarAction = (): SnackBarClose => ({\n  type: SNACK_BAR_CLOSE,\n});\n","import React, { PropsWithChildren } from 'react';\n\nimport {\n  Container,\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\nimport HeaderContainer from '../containers/HeaderContainer';\nimport SnackBarContainer from '../containers/SnackBarContainer';\nimport { StyleRules } from '@material-ui/core/styles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(7),\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n}\n\nexport type Props = PropsWithChildren<BaseProps>;\n\nclass BasePageComponent extends React.Component<Props> {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"md\" className={classes.container}>\n          <HeaderContainer />\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n          <SnackBarContainer />\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(BasePageComponent);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport BasePageComponent from '../components/BasePageComponent';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { ErrorRes, RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type RegisterActions =\n  | RegisterSuccessAction\n  | RegisterFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, RegisterActions>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, RegisterActions>) => {\n    AppClient.post('/register', payload)\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n            numSellItems: body.num_sell_items,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction extends Action<typeof REGISTER_SUCCESS> {\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n  numSellItems: number;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction extends Action<typeof REGISTER_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErrors: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErrors,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n  onImageChange: (image: Blob) => void;\n}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n\n      this.props.onImageChange(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  image?: Blob;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onImageChange = this._onImageChange.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId, image } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    if (image === undefined) {\n      this.setState({\n        categoryError: '画像をアップロードしてください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId, image);\n  }\n\n  _onImageChange(image: Blob) {\n    this.setState({\n      image,\n    });\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent onImageChange={this._onImageChange} />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { ErrorRes, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\nexport type SellingItemActions =\n  | SellingSuccessAction\n  | SellingFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SellingItemActions>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n  image: Blob,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SellingItemActions>) => {\n    const body = new FormData();\n    body.append('name', name);\n    body.append('description', description);\n    body.append('price', price.toString());\n    body.append('category_id', categoryId.toString());\n    body.append('image', image);\n    AppClient.postFormData('/sell', body)\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n        return await response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.top.path)); // TODO\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction\n  extends Action<typeof SELLING_ITEM_SUCCESS> {\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction extends Action<typeof SELLING_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId, image));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport type ErrorActions = NotFoundErrorAction | InternalServerErrorAction;\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\nexport type FetchItemActions =\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchItemActions>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchItemActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchItemStartAction());\n      })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl: body.image_url,\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemFailAction = (newError: FormErrorState): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    payload: newError,\n  };\n};\n","/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseURL?: string;\n  private defaultHeaders: HeadersInit = {};\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseURL}${path}`, requestOption);\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n}\n\nexport default new PaymentClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport PaymentClient from '../httpClients/paymentClient';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\nexport type SettingsActions =\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SettingsActions>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SettingsActions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n\n        // MEMO: ここでやるのがいいかわからん\n        PaymentClient.setBaseURL(body.payment_service_url);\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemPageFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemPageFailAction = (\n  newError: FormErrorState,\n): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n  payload: newError,\n});\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TransactionItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\nexport type FetchTransactionActions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchTransactionActions\n>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTransactionActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTransactionsStartAction());\n      })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Transactions not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTransactionsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTransactionsFailAction = (\n  newErrors: FormErrorState,\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    payload: newErrors,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  UserItemsReq,\n  UserItemsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\nexport type FetchUserItemsActions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserItemsActions\n>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserItemsActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserItemsStartAction());\n      })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('UserItems not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserItemsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserItemsFailAction = (\n  newError: FormErrorState,\n): FetchUserItemsFailAction => {\n  return {\n    type: FETCH_USER_ITEMS_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type FetchUserPageDataActions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserPageDataActions\n>;\n\nasync function fetchUserPageData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  if (!userDataRes.ok) {\n    const errRes: ErrorRes = await userDataRes.json();\n    throw new AppResponseError(errRes.error, userDataRes);\n  }\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    if (!transactionRes.ok) {\n      const errRes: ErrorRes = await userDataRes.json();\n      throw new AppResponseError(errRes.error, transactionRes);\n    }\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserPageDataActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserPageDataStartAction());\n      })\n      .then(() => {\n        return fetchUserPageData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl: item.image_url,\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserPageDataFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserPageDataFailAction = (\n  newError: FormErrorState,\n): FetchUserPageDataFailAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\nexport type FetchTimelineActions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchTimelineActions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTimelineActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTimelineStartAction());\n      })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTimelineFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTimelineFailAction = (\n  newErrors: FormErrorState,\n): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    payload: newErrors,\n  };\n};\n","import { INTERNAL_SERVER_ERROR, NOT_FOUND_ERROR } from '../actions/errorAction';\nimport { FETCH_ITEM_FAIL } from '../actions/fetchItemAction';\nimport { FETCH_SETTINGS_FAIL } from '../actions/settingsAction';\nimport { FETCH_TRANSACTIONS_FAIL } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_ITEMS_FAIL } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_FAIL } from '../actions/fetchUserPageDataAction';\nimport { FETCH_TIMELINE_FAIL } from '../actions/fetchTimelineAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\nconst error = (\n  state: ErrorState = initialState,\n  action: ActionTypes,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => <div>404 Not Found</div>;\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n  <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport InternalServerErrorPage from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    button: {\n      margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button\n          className={classes.button}\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(LoadingButtonComponent);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport LoadingButton from './LoadingButtonComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const {\n      item: { id },\n    } = this.props;\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors.cardError;\n    const appError = errors.buyError;\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { BuyReq, ErrorRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\nimport { AppState } from '../index';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\nexport type BuyActions =\n  | BuyStartAction\n  | BuySuccessAction\n  | BuyFailAction\n  | UsingCardFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, BuyActions>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, BuyActions>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch(async (err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            const errRes: ErrorRes = await res.json();\n\n            if (errRes) {\n              return dispatch(action(errRes.error));\n            }\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\n\nconst mapStateToProps = (state: any) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemBuyPage: React.FC = () => {\n  return (\n    <BasePageContainer>\n      <ItemBuyFormContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default ItemBuyPage;\n","import { AppBar } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  buttons: {\n    onClick: (e: React.MouseEvent) => void;\n    buttonText: string;\n    disabled: boolean;\n  }[];\n};\n\nconst ItemFooterComponent: React.FC<Props> = ({ price, buttons }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        {buttons.map(button => {\n          return (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                className={classes.buyButton}\n                onClick={button.onClick}\n                disabled={button.disabled}\n              >\n                {button.buttonText}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default ItemFooterComponent;\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport ItemFooterComponent from '../components/ItemFooterComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickBump: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    this._onClickItemEditButton = this._onClickItemEditButton.bind(this);\n    this._onClickBumpButton = this._onClickBumpButton.bind(this);\n    this._onClickTransaction = this._onClickTransaction.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickBumpButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBump(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let buttons: {\n      onClick: (e: React.MouseEvent) => void;\n      buttonText: string;\n      disabled: boolean;\n    }[] = [\n      {\n        onClick: this._onClickBuyButton,\n        buttonText: '購入',\n        disabled: false,\n      },\n    ];\n\n    // 自分の商品で出品中なら編集画面へ遷移 / Bumpボタンを表示\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      buttons = [\n        {\n          onClick: this._onClickBumpButton,\n          buttonText: 'Bump',\n          disabled: false,\n        },\n        {\n          onClick: this._onClickItemEditButton,\n          buttonText: '商品編集',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 出品者 or 購入者で取引中か売り切れなら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      (item.status === 'trading' || item.status === 'sold_out')\n    ) {\n      buttons = [\n        {\n          onClick: this._onClickTransaction,\n          buttonText: '取引画面',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      buttons = [\n        {\n          onClick(e: React.MouseEvent) {},\n          buttonText: '売り切れ',\n          disabled: true,\n        },\n      ];\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography className={classes.title} variant=\"h3\">\n          {item.name}\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            <img\n              className={classes.itemImage}\n              alt={item.name}\n              src={item.thumbnailUrl}\n            />\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">商品説明</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">{item.description}</Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">カテゴリ</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">\n                    <Link\n                      to={routes.categoryTimeline.getPath(\n                        item.category.parentId,\n                      )}\n                    >\n                      {item.category.parentCategoryName}\n                    </Link>{' '}\n                    > {item.category.categoryName}\n                  </Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">出品者</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    wrap=\"nowrap\"\n                    spacing={2}\n                  >\n                    <Grid item>\n                      <RouteLink\n                        className={classes.link}\n                        to={routes.user.getPath(item.sellerId)}\n                      >\n                        <Avatar className={classes.avatar}>\n                          {item.seller.accountName.charAt(0)}\n                        </Avatar>\n                      </RouteLink>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography variant=\"body1\">\n                        {item.seller.accountName}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <ItemFooterComponent price={item.price} buttons={buttons} />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, BumpReq, BumpRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const POST_BUMP_START = 'POST_BUMP_START';\nexport const POST_BUMP_SUCCESS = 'POST_BUMP_SUCCESS';\nexport const POST_BUMP_FAIL = 'POST_BUMP_FAIL';\n\nexport type PostBumpActions =\n  | PostBumpStartAction\n  | PostBumpSuccessAction\n  | PostBumpFailAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostBumpActions>;\n\nexport function postBumpAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostBumpActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postBumpStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/bump', { item_id: itemId } as BumpReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: BumpRes) => {\n        dispatch(postBumpSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postBumpFailAction({\n            error: err.message, // TODO\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostBumpStartAction extends Action<typeof POST_BUMP_START> {}\n\nexport function postBumpStartAction(): PostBumpStartAction {\n  return {\n    type: POST_BUMP_START,\n  };\n}\n\nexport interface PostBumpSuccessAction\n  extends Action<typeof POST_BUMP_SUCCESS> {}\n\nexport function postBumpSuccessAction(): PostBumpSuccessAction {\n  return {\n    type: POST_BUMP_SUCCESS,\n  };\n}\n\nexport interface PostBumpFailAction extends Action<typeof POST_BUMP_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postBumpFailAction(\n  newErrors: FormErrorState,\n): PostBumpFailAction {\n  return {\n    type: POST_BUMP_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { postBumpAction } from '../actions/postBumpAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickBump: (itemId: number) => {\n    dispatch(postBumpAction(itemId));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\n\nconst useStyles = makeStyles(theme => ({\n  itemImage: {\n    height: '100%',\n  },\n}));\n\ninterface ItemComponentProps {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n  itemId,\n  imageUrl,\n  title,\n  price,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <RouteLink to={routes.item.getPath(itemId)}>\n        <img className={classes.itemImage} src={imageUrl} alt={title} />\n      </RouteLink>\n      <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n    </Card>\n  );\n};\n\nexport { ItemComponent };\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '300px',\n    height: '300px',\n  },\n}));\n\ninterface ItemListPageProps {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = function({\n  items,\n  hasNext,\n  loadMore,\n}: ItemListPageProps) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <ItemComponent\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={3}>{itemComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemListComponent };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"secondary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemListComponent\n            items={items}\n            loadMore={loadMoreItems}\n            hasNext={hasNext}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">発送予約の手続きをしてください</Typography>\n      <Button onClick={onClick}>発送予約</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">購入者の発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">\n        配達員にこちらのQRコードを見せて発送した後、下記の発送完了を押してください\n      </Typography>\n      <img src={qrCodeUrl} alt=\"QRコード\" />\n      <Button onClick={onClick}>発送完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Seller/Initial';\nimport WaitShipping from './Seller/WaitShipping';\nimport WaitDone from './Seller/WaitDone';\nimport Done from './Seller/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShipped: (itemId: number) => void;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst SellerComponent: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShipped,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport default SellerComponent;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\n\nexport type PostShippedDoneActions =\n  | PostShippedDoneStartAction\n  | PostShippedDoneSuccessAction\n  | PostShippedDoneFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  PostShippedDoneActions\n>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedDoneActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship_done', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedDoneFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_DONE_FAIL> {}\n\nexport function postShippedDoneFailAction(\n  error: string,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipReq, ShipRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\nexport type PostShippedActions =\n  | PostShippedStartAction\n  | PostShippedSuccessAction\n  | PostShippedFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostShippedActions>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_FAIL> {}\n\nexport function postShippedFailAction(error: string): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport SellerComponent from '../components/Transaction/SellerComponent';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { postShippedAction } from '../actions/postShippedAction';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellerComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が発送予約をするまでお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">出品者からの発送をお待ちください</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、受取完了ボタンを押してください\n      </Typography>\n      <Button onClick={onClick}>受取完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Buyer/Initial';\nimport WaitShipping from './Buyer/WaitShipping';\nimport WaitDone from './Buyer/WaitDone';\nimport Done from './Buyer/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst BuyerComponent: React.FC<Props> = ({\n  itemId,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport default BuyerComponent;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { CompleteReq, CompleteRes, ErrorRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\nexport type PostCompleteActions =\n  | PostCompleteStartAction\n  | PostCompleteSuccessAction\n  | PostCompleteFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostCompleteActions>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostCompleteActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postCompleteFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends SnackBarAction<typeof POST_COMPLETE_FAIL> {}\n\nexport function postCompleteFailAction(error: string): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport BuyerComponent from '../components/Transaction/BuyerComponent';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyerComponent);\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport NotFoundPage from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { routes } from '../routes/Route';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n  });\n\ninterface TransactionProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n}\n\ntype Props = TransactionProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n      classes,\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        // TODO: pass error message\n        <InternalServerErrorPage />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {TransactionComponent}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.descSection} variant=\"h4\">\n              取引情報\n            </Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n          </Grid>\n          <Grid item xs={3}>\n            <RouteLink to={routes.item.getPath(item.id)}>\n              <img\n                className={classes.itemImage}\n                alt={item.name}\n                src={item.thumbnailUrl}\n              />\n            </RouteLink>\n          </Grid>\n          <Grid item xs={9} container>\n            <Grid item>\n              <Typography variant=\"h5\">{item.name}</Typography>\n              <Typography variant=\"h6\">{item.price}ｲｽｺｲﾝ</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(TransactionPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport { ItemStatus } from '../dataObjects/item';\n\nconst useStyles = makeStyles(theme => ({\n  normalLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.secondary.light,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  soldOutLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.grey.A100,\n  },\n  tradingLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\ntype Props = {\n  itemStatus: ItemStatus;\n};\n\nfunction getLabelByStatus(\n  status: ItemStatus,\n): [string, 'normalLabel' | 'soldOutLabel' | 'tradingLabel'] {\n  switch (status) {\n    case 'on_sale':\n      return ['出品中', 'normalLabel'];\n    case 'trading':\n      return ['取引中', 'tradingLabel'];\n    case 'sold_out':\n      return ['売却済', 'soldOutLabel'];\n    case 'stop':\n      return ['出品停止中', 'normalLabel'];\n    case 'cancel':\n      return ['キャンセル', 'normalLabel'];\n  }\n}\n\nconst TransactionLabel: React.FC<Props> = ({ itemStatus }) => {\n  const classes = useStyles();\n  const [labelName, classKey] = getLabelByStatus(itemStatus);\n  const className = classes[classKey];\n\n  return <Paper className={className}>{labelName}</Paper>;\n};\n\nexport { TransactionLabel };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\nimport { TransactionItem } from '../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from './TransactionLabelComponent';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: 'flex',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={routes.transaction.getPath(item.id)}>\n        <Card>\n          <CardMedia image={item.thumbnailUrl} title={item.name} />\n          <CardContent>\n            <Typography>{item.name}</Typography>\n            <TransactionLabel itemStatus={item.status} />\n          </CardContent>\n        </Card>\n      </RouteLink>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from './TransactionComponent';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionListComponent: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1}>{transactionsComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionListComponent };\n","import React, { ReactElement } from 'react';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionListComponent } from '../components/TransactionListComponent';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n  private readonly isMyPage: boolean;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    this.isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, this.isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemListComponent\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionListComponent\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { loading, user, classes } = this.props;\n    const { tabValue } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <Tabs value={tabValue} onChange={this._handleChange}>\n          <Tab label=\"出品商品\" id=\"tab--item-list\" />\n          {this.isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n        </Tabs>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {this.isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Grid } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Divider from '@material-ui/core/Divider';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport SellingButtonComponent from '../containers/SellingButtonContainer';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  divider: {\n    margin: theme.spacing(1),\n  },\n  descSection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = {\n  id?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n};\n\nconst UserSettingPage: React.FC<Props> = ({\n  id,\n  accountName,\n  address,\n  numSellItems,\n}) => {\n  const classes = useStyles();\n\n  if (\n    id === undefined ||\n    accountName === undefined ||\n    address === undefined ||\n    numSellItems === undefined\n  ) {\n    return <InternalServerErrorPage />;\n  }\n\n  return (\n    <BasePageContainer>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item xs={3}>\n          <Avatar className={classes.avatar}>{accountName.charAt(0)}</Avatar>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography variant=\"h3\">{accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">住所</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{address}</Typography>\n          </div>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">出品数</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{numSellItems}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <SellingButtonComponent />\n    </BasePageContainer>\n  );\n};\n\nexport default UserSettingPage;\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  id: state.authStatus.userId,\n  accountName: state.authStatus.accountName,\n  address: state.authStatus.address,\n  numSellItems: state.authStatus.numSellItems,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserSettingPage);\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">ついにリリース！</Typography>\n          <Typography variant=\"h6\">\n            椅子限定C2CのECサービス カードで簡単決済。\n          </Typography>\n          <Typography variant=\"h6\">\n            もちろんセキュリティも万全。 お互いの住所を知らなくても配送可能。\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  categoryIdIsValid: boolean;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      categoryIdIsValid,\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      items,\n      categoryId,\n      categoryName,\n      loadMore,\n      hasNext,\n    } = this.props;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{categoryName}の新着商品</Typography>\n          <ItemListComponent\n            items={items}\n            hasNext={hasNext}\n            loadMore={loadMoreItems}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, ItemEditReq, ItemEditRes } from '../types/appApiTypes';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const POST_ITEM_EDIT_START = 'POST_ITEM_EDIT_START';\nexport const POST_ITEM_EDIT_SUCCESS = 'POST_ITEM_EDIT_SUCCESS';\nexport const POST_ITEM_EDIT_FAIL = 'POST_ITEM_EDIT_FAIL';\n\nexport type PostItemEditActions =\n  | PostItemEditStartAction\n  | PostItemEditSuccessAction\n  | PostItemEditFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostItemEditActions>;\n\nexport function postItemEditAction(\n  itemId: number,\n  itemPrice?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostItemEditActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postItemEditStartAction());\n      })\n      .then(() => {\n        const reqParams = {\n          item_id: itemId,\n        } as ItemEditReq;\n\n        if (itemPrice) {\n          reqParams.item_price = itemPrice;\n        }\n        return AppClient.post('/items/edit', reqParams);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ItemEditRes) => {\n        dispatch(postItemEditSuccessAction());\n      })\n      .then(() => {\n        dispatch(push(routes.item.getPath(itemId)));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postItemEditFailAction({\n            itemEditFormError: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostItemEditStartAction\n  extends Action<typeof POST_ITEM_EDIT_START> {}\n\nexport function postItemEditStartAction(): PostItemEditStartAction {\n  return {\n    type: POST_ITEM_EDIT_START,\n  };\n}\n\nexport interface PostItemEditSuccessAction\n  extends Action<typeof POST_ITEM_EDIT_SUCCESS> {}\n\nexport function postItemEditSuccessAction(): PostItemEditSuccessAction {\n  return {\n    type: POST_ITEM_EDIT_SUCCESS,\n  };\n}\n\nexport interface PostItemEditFailAction\n  extends Action<typeof POST_ITEM_EDIT_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postItemEditFailAction(\n  newErrors: FormErrorState,\n): PostItemEditFailAction {\n  return {\n    type: POST_ITEM_EDIT_FAIL,\n    payload: newErrors,\n  };\n}\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport {\n  Button,\n  createStyles,\n  TextField,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { ItemData } from '../dataObjects/item';\nimport { RouteComponentProps } from 'react-router';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorMessageComponent } from '../components/ErrorMessageComponent';\nimport validator from 'validator';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (itemId: number) => void;\n  item?: ItemData;\n  formError?: string;\n  onClickEdit: (itemId: number, price: number) => void;\n}\n\ntype Props = BaseProps & RouteComponentProps<{ item_id: string }> & ErrorProps;\n\ninterface State {\n  price: number;\n}\n\nclass ItemEditPage extends React.Component<Props, State> {\n  private readonly itemId: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.itemId = Number(this.props.match.params.item_id);\n    this.props.load(this.itemId);\n\n    const { item } = this.props;\n\n    this.state = {\n      price: item ? item.price : 0,\n    };\n\n    this._onClickEdit = this._onClickEdit.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onClickEdit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickEdit(this.itemId, this.state.price);\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { loading, item, formError, classes } = this.props;\n    const { price } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    if (!item) {\n      return <InternalServerErrorPage />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography component=\"h1\" variant=\"h5\">\n          商品編集ページ\n        </Typography>\n        <Typography component=\"h2\">{item.name}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {formError && (\n            <ErrorMessageComponent id=\"sellButton\" error={formError} />\n          )}\n          <Button\n            id=\"editButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onClickEdit}\n          >\n            編集する\n          </Button>\n          <RouteLink to={routes.item.getPath(item.id)}>\n            商品ページへ戻る\n          </RouteLink>\n        </form>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemEditPage));\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport snackBar from './snackBarReducer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    snackBar,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { postItemEditAction } from '../actions/postItemEditAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport ItemEditPage from '../pages/ItemEditPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n  formError: state.formError.itemEditFormError,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickEdit: (itemId: number, price: number) => {\n    dispatch(postItemEditAction(itemId, price));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemEditPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemBuyPage from '../pages/ItemBuyPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport UserSettingPageContainer from '../containers/UserSettingPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\nimport ItemEditPageContainer from '../containers/ItemEditPageContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute\n        exact\n        path={routes.itemEdit.path}\n        component={ItemEditPageContainer}\n      />\n      <AuthRoute exact path={routes.buy.path} component={ItemBuyPage} />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />{' '}\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport checkLocationChange from './checkLocationChange';\nimport { Middleware } from 'redux';\n\nconst middleware: Middleware[] = [logger, checkLocationChange];\n\nexport default middleware;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<ActionTypes>) => (\n  action: ActionTypes,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { pathNameChangeAction } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\n// react-routerのページ遷移発火時、pathnameが変わった場合は独自のactionを発火する\nconst checkLocationChange: Middleware = <S extends AppState>(\n  store: MiddlewareAPI<Dispatch, S>,\n) => (next: Dispatch<ActionTypes>) => (action: ActionTypes): any => {\n  const { getState, dispatch } = store;\n  if (action.type !== LOCATION_CHANGE) {\n    return next(action);\n  }\n\n  const { router } = getState();\n  const currentPath = router.location.pathname;\n  const nextPath = action.payload.location.pathname;\n\n  if (currentPath === nextPath) {\n    return next(action);\n  }\n\n  dispatch(pathNameChangeAction());\n  return next(action);\n};\n\nexport default checkLocationChange;\n","import { Action } from 'redux';\n\nexport const PATH_NAME_CHANGE = 'PATH_NAME_CHANGE';\n\nexport type LocationChangeActions = PathNameChangeAction;\n\nexport interface PathNameChangeAction extends Action<typeof PATH_NAME_CHANGE> {}\n\nexport const pathNameChangeAction = (): PathNameChangeAction => ({\n  type: PATH_NAME_CHANGE,\n});\n","import { LOGIN_SUCCESS } from '../actions/authenticationActions';\nimport { REGISTER_SUCCESS } from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: ActionTypes,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n            numSellItems: number;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n          numSellItems: user.numSellItems,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\nimport { POST_ITEM_EDIT_FAIL } from '../actions/postItemEditAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n  itemEditFormError?: string;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n  itemEditFormError: undefined,\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: ActionTypes,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    case POST_ITEM_EDIT_FAIL:\n      return {\n        ...state,\n        itemEditFormError: action.payload.itemEditFormError,\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { ItemData } from '../dataObjects/item';\nimport { FETCH_ITEM_SUCCESS } from '../actions/fetchItemAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: ActionTypes,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { UserData } from '../dataObjects/user';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: ActionTypes,\n): ViewingUserState => {\n  switch (action.type) {\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_SUCCESS,\n} from '../actions/fetchTimelineAction';\nimport {\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst pathChangeState: PageState = {\n  isLoading: false, // Settings取得時しかtrueにならない\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (\n  state: PageState = initialState,\n  action: ActionTypes,\n): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case PATH_NAME_CHANGE:\n      return pathChangeState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { ActionTypes } from '../actions/actionTypes';\nimport { POST_SHIPPED_FAIL } from '../actions/postShippedAction';\nimport { POST_SHIPPED_DONE_FAIL } from '../actions/postShippedDoneAction';\nimport { POST_COMPLETE_FAIL } from '../actions/postCompleteAction';\nimport { SNACK_BAR_CLOSE } from '../actions/snackBarAction';\n\nexport interface SnackBarState {\n  reason: string;\n  available: boolean;\n}\n\nconst initialState: SnackBarState = {\n  reason: '',\n  available: false,\n};\n\nconst snackBar = (\n  state: SnackBarState = initialState,\n  action: ActionTypes,\n): SnackBarState => {\n  switch (action.type) {\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_COMPLETE_FAIL:\n      return {\n        reason: action.snackBarMessage,\n        available: true,\n      };\n    case SNACK_BAR_CLOSE:\n      return {\n        reason: '',\n        available: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default snackBar;\n","import {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: ActionTypes,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { CategorySimple } from '../dataObjects/category';\nimport { FETCH_SETTINGS_SUCCESS } from '../actions/settingsAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: ActionTypes,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_TIMELINE_SUCCESS } from '../actions/fetchTimelineAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: ActionTypes,\n): TimelineState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import { TransactionItem } from '../dataObjects/item';\nimport { FETCH_TRANSACTIONS_SUCCESS } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: ActionTypes,\n): TransactionsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_USER_ITEMS_SUCCESS } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: ActionTypes,\n): UserItemsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middleware from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middleware),\n    ),\n  );\n};\n"],"sourceRoot":""}