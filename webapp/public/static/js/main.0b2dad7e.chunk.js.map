{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","actions/settingsAction.ts","components/LoadingComponent.tsx","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","actions/postShippedAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","pages/UserSettingPage.tsx","pages/BuyComplete.tsx","components/ItemFooterComponent.tsx","pages/ItemPage.tsx","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","actions/fetchTimelineAction.ts","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","components/Transaction/SellerComponent.tsx","actions/postShippedDoneAction.ts","containers/SellerTransactionContainer.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","components/Transaction/BuyerComponent.tsx","actions/postCompleteAction.ts","containers/BuyerTransactionContainer.tsx","reducers/index.ts","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","mocks.ts","pages/UserPage.tsx","containers/UserPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/pageReducuer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","baseUrl","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","status","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","fetchSettingStartAction","fetchSettingsSuccessAction","settings","fetchItemPageFailAction","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","themeInstance","createMuiTheme","background","default","BasePageComponent","alreadyLoaded","load","MuiThemeProvider","Container","maxWidth","loading","components_LoadingComponent","children","page","isLoading","authStatus","checked","Promise","resolve","get","user","numSellItems","num_sell_items","csrfToken","categories","map","category","parentId","parent_id","categoryName","category_name","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","selectedCategoryId","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","category_id","itemId","newErrors","filter","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemAction","fetchItemStartAction","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","item_id","length","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","ItemEditPage","LoadingButtonComponent","_onClick","buttonName","react","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","paymentClient","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","token","buyComplete","action","getResponse","usingCardFailAction","buyFailAction","buyFormError","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","UserSettingPage","BuyCompletePage","appBar","buyButton","ItemFooterComponent","buttonText","AppBar","ItemPage","match","onClickBuy","title","sm","descSection","Divider","divider","categoryTimeline","getPath","wrap","link","charAt","components_ItemFooterComponent","marginBottom","textDecoration","isItemLoading","buy","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","items","hasNext","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","GridListTile","ItemComponent_ItemComponent","return","lastItem","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","root","ItemListComponent_ItemListComponent","SellingButtonContainer","flexWrap","justifyContent","overflow","fetchTimelineAction","fetchTimelineStartAction","fetchTimelineSuccessAction","has_next","root_category_id","root_category_name","fetchTimelineFailAction","timeline","isTimelineLoading","Initial","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","SellerComponent","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","postShipped","postComplete","BuyerComponent","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","history","TransactionPage","TransactionComponent","auth","error_NotFoundPage","error_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","mockUser","mockItems","itemList","UserPage","isLoggedIn","rest","objectWithoutProperties","react_router","render","textarea","img","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","categoryIdIsValid","itemEdit","transaction","userSetting","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemPageContainer","TransactionPageContainer","UserPageContainer","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","getState","group","info","groupEnd","initialState","objectSpread","userPayload","LOCATION_CHANGE","location","pathname","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0b2dad7e.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n  apiUrl: 'http://localhost:8000', // TODO fix\n  paymentUrl: 'http://localhost:5555',\n};\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import config from '../config';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private baseUrl: string = config.apiUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${this.baseUrl}${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { LoginRes } from '../types/appApiTypes';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'Request for getting settings data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchItemPageFailAction());\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {}\n\nconst fetchItemPageFailAction = (): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { PropsWithChildren } from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\n\nconst themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: 'white',\n    },\n  },\n});\n\nexport type Props = PropsWithChildren<{\n  load: () => void;\n  alreadyLoaded: boolean;\n  loading: boolean;\n}>;\n\nclass BasePageComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    if (!this.props.alreadyLoaded) {\n      this.props.load();\n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\">\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport { BasePageComponent };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { BasePageComponent } from '../components/BasePageComponent';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from '../reducers/authStatusReducer';\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/register', payload)\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction {\n  type: typeof REGISTER_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction {\n  type: typeof REGISTER_FAIL;\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErros: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErros,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction, State } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<State, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n    console.log(imagePreviewUrl);\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId);\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { SellReq, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    const payload: SellReq = {\n      name,\n      description,\n      price,\n      category_id: categoryId,\n    };\n    AppClient.post('/sell', payload)\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new Error('HTTP status not 200');\n        }\n        return response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.top.path)); // TODO\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction {\n  type: typeof SELLING_ITEM_SUCCESS;\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction {\n  type: typeof SELLING_ITEM_FAIL;\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchItemStartAction());\n    })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl:\n              'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchItemFailAction());\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {}\n\nconst fetchItemFailAction = (): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ShipReq, ShipRes } from '../types/appApiTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends Action<typeof POST_SHIPPED_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedFailAction(\n  newErros: FormErrorState,\n): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    payload: newErros,\n  };\n}\n","import {\n  INTERNAL_SERVER_ERROR,\n  InternalServerErrorAction,\n  NOT_FOUND_ERROR,\n  NotFoundErrorAction,\n} from '../actions/errorAction';\nimport {\n  FETCH_ITEM_FAIL,\n  FetchItemFailAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FetchSettingsFailAction,\n} from '../actions/settingsAction';\nimport {\n  POST_SHIPPED_FAIL,\n  PostShippedFailAction,\n} from '../actions/postShippedAction';\nimport { PostShippedDoneFailAction } from '../actions/postShippedDoneAction';\nimport { PostCompleteFailAction } from '../actions/postCompleteAction';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\ntype errorActions =\n  | NotFoundErrorAction\n  | InternalServerErrorAction\n  | FetchItemFailAction\n  | FetchSettingsFailAction\n  | PostShippedFailAction\n  | PostShippedDoneFailAction\n  | PostCompleteFailAction;\n\nconst error = (\n  state: ErrorState = initialState,\n  action: errorActions,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_SETTINGS_FAIL:\n    case POST_SHIPPED_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => <div>404 Not Found</div>;\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n  <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport InternalServerErrorPage from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemEditPage: React.FC = () => (\n  <BasePageContainer>\n    <div>Item Edit Page</div>\n  </BasePageContainer>\n);\n\nexport default ItemEditPage;\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    button: {\n      margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button\n          className={classes.button}\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(LoadingButtonComponent);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport LoadingButton from './LoadingButtonComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const {\n      item: { id },\n    } = this.props;\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors.cardError;\n    const appError = errors.buyError;\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseUrl: string = config.paymentUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string): Promise<Response> {\n    return await fetch(`${this.baseUrl}${path}`, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n}\n\nexport default new PaymentClient();\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { Action, AnyAction } from 'redux';\nimport { BuyReq } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch((err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            return res.json().then((body: any) => {\n              if (body && body.error) {\n                dispatch(action(body.error));\n                return;\n              }\n\n              dispatch(action(err.message));\n            });\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\n\nconst mapStateToProps = (state: any) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemBuyPage: React.FC = () => {\n  return (\n    <BasePageContainer>\n      <ItemBuyFormContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default ItemBuyPage;\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst UserSettingPage: React.FC = () => (\n  <BasePageContainer>User setting Page</BasePageContainer>\n);\n\nexport default UserSettingPage;\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst BuyCompletePage: React.FC = () => (\n  <BasePageContainer>\n    <div>Item buying Page</div>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import {AppBar} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number,\n  onClick: (e: React.MouseEvent) => void\n  buttonText: string,\n}\n\nconst ItemFooterComponent: React.FC<Props> = ({ price, onClick, buttonText }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            className={classes.buyButton}\n            onClick={onClick}\n          >\n            {buttonText}\n          </Button>\n        </Grid>\n      </Grid>\n    </AppBar>\n  )\n};\n\nexport default ItemFooterComponent","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport ItemFooterComponent from \"../components/ItemFooterComponent\";\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading } = this.props;\n\n    return (\n      <BasePageContainer>\n        {loading ? (\n          <LoadingComponent />\n        ) : (\n          <React.Fragment>\n            Item Page\n            <Typography className={classes.title} variant=\"h3\">\n              {item.name}\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item>\n                <img\n                  className={classes.itemImage}\n                  alt={item.name}\n                  src={item.thumbnailUrl}\n                />\n              </Grid>\n              <Grid item xs={12} sm container>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <div className={classes.descSection}>\n                      <Typography variant=\"h4\">商品説明</Typography>\n                      <Divider className={classes.divider} variant=\"middle\" />\n                      <Typography variant=\"body1\">\n                        {item.description}\n                      </Typography>\n                    </div>\n\n                    <div className={classes.descSection}>\n                      <Typography variant=\"h4\">カテゴリ</Typography>\n                      <Divider className={classes.divider} variant=\"middle\" />\n                      <Typography variant=\"body1\">\n                        <Link\n                          to={routes.categoryTimeline.getPath(\n                            item.category.parentId,\n                          )}\n                        >\n                          {item.category.parentCategoryName}\n                        </Link>{' '}\n                        > {item.category.categoryName}\n                      </Typography>\n                    </div>\n\n                    <div className={classes.descSection}>\n                      <Typography variant=\"h4\">出品者</Typography>\n                      <Divider className={classes.divider} variant=\"middle\" />\n                      <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        wrap=\"nowrap\"\n                        spacing={2}\n                      >\n                        <Grid item>\n                          <RouteLink\n                            className={classes.link}\n                            to={routes.user.getPath(item.sellerId)}\n                          >\n                            <Avatar className={classes.avatar}>\n                              {item.seller.accountName.charAt(0)}\n                            </Avatar>\n                          </RouteLink>\n                        </Grid>\n                        <Grid item xs>\n                          <Typography variant=\"body1\">\n                            {item.seller.accountName}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <ItemFooterComponent\n              price={item.price}\n              onClick={this._onClickBuyButton}\n              buttonText={'購入'}\n            />\n          </React.Fragment>\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\n\nconst useStyles = makeStyles(theme => ({\n  itemImage: {\n    height: '100%',\n  },\n}));\n\ninterface ItemComponentProps {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n  itemId,\n  imageUrl,\n  title,\n  price,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <RouteLink to={routes.item.getPath(itemId)}>\n        <img className={classes.itemImage} src={imageUrl} alt={title} />\n      </RouteLink>\n      <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n    </Card>\n  );\n};\n\nexport { ItemComponent };\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '300px',\n    height: '300px',\n  },\n}));\n\ninterface ItemListPageProps {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number | undefined,\n    page: number,\n  ) => void;\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = function({\n  items,\n  hasNext,\n  categoryId,\n  loadMore,\n}: ItemListPageProps) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <ItemComponent\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n        />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      )}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={3}>{itemComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemListComponent };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"secondary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items } = this.props;\n\n    const Content: React.FC<{}> = () =>\n      items.length === 0 ? (\n        <div className={classes.root}>\n          <Typography variant=\"h5\">出品されている商品はありません</Typography>\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <ItemListComponent {...this.props} />\n          <SellingButtonContainer />\n        </div>\n      );\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\ntype Actions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchTimelineStartAction());\n    })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting timeline item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl:\n                'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchTimelineFailAction());\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {}\n\nconst fetchTimelineFailAction = (): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n  };\n};\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">\n        購入者が発送予約をするまでお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">購入者の発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">\n        配達員にこちらのQRコードを見せて発送した後、下記の発送完了を押してください\n      </Typography>\n      <img src={qrCodeUrl} alt=\"QRコード\" />\n      <Button onClick={onClick}>発送完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Seller/Initial';\nimport WaitShipping from './Seller/WaitShipping';\nimport WaitDone from './Seller/WaitDone';\nimport Done from './Seller/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst SellerComponent: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport default SellerComponent;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedDoneFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends Action<typeof POST_SHIPPED_DONE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedDoneFailAction(\n  newErros: FormErrorState,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    payload: newErros,\n  };\n}\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport SellerComponent from '../components/Transaction/SellerComponent';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellerComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">発送予約の手続きをしてください</Typography>\n      <Button onClick={onClick}>発送予約</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">出品者からの発送をお待ちください</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、受取完了ボタンを押してください\n      </Typography>\n      <Button onClick={onClick}>受取完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Buyer/Initial';\nimport WaitShipping from './Buyer/WaitShipping';\nimport WaitDone from './Buyer/WaitDone';\nimport Done from './Buyer/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst BuyerComponent: React.FC<Props> = ({\n  itemId,\n  postShipped,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport default BuyerComponent;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { CompleteReq, CompleteRes } from '../types/appApiTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postCompleteFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends Action<typeof POST_COMPLETE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postCompleteFailAction(\n  newErros: FormErrorState,\n): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    payload: newErros,\n  };\n}\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport BuyerComponent from '../components/Transaction/BuyerComponent';\nimport { postShippedAction } from '../actions/postShippedAction';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyerComponent);\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    error,\n    page,\n    buyPage,\n    categories,\n    timeline,\n  });\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport NotFoundPage from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\n\ntype Props = {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n} & RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        // TODO: pass error message\n        <InternalServerErrorPage />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage />;\n    }\n\n    return <BasePageContainer>{TransactionComponent}</BasePageContainer>;\n  }\n}\n\nexport default PageComponentWithError<Props>()(TransactionPage);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import { ItemData } from './dataObjects/item';\nimport { UserData } from './dataObjects/user';\n\nexport const mockUser: UserData = {\n  id: 1235,\n  accountName: 'Kirin',\n  address: 'Tokyo',\n  numSellItems: 0,\n};\n\nexport const mockItems: ItemData[] = [\n  {\n    id: 1,\n    status: 'on_sale',\n    sellerId: 1111,\n    seller: {\n      id: 1111,\n      accountName: 'sota1235',\n      address: '',\n      numSellItems: 1,\n    },\n    buyerId: 2222,\n    name: 'いす',\n    price: 10000,\n    description: 'いすです',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    category: {\n      id: 1,\n      categoryName: 'カテゴリ1',\n      parentId: 2,\n      parentCategoryName: '親カテゴリ',\n    },\n    createdAt: 10000,\n  },\n  {\n    id: 2,\n    status: 'on_sale',\n    sellerId: 1111,\n    seller: {\n      id: 1111,\n      accountName: 'sota1235',\n      address: '',\n      numSellItems: 1,\n    },\n    buyerId: 2222,\n    name: 'いす',\n    price: 10000,\n    description: 'いすです',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    category: {\n      id: 1,\n      categoryName: 'カテゴリ1',\n      parentId: 2,\n      parentCategoryName: '親カテゴリ',\n    },\n    createdAt: 10000,\n  },\n  {\n    id: 3,\n    status: 'on_sale',\n    sellerId: 1111,\n    seller: {\n      id: 1111,\n      accountName: 'sota1235',\n      address: '',\n      numSellItems: 1,\n    },\n    buyerId: 2222,\n    name: 'いす',\n    price: 10000,\n    description: 'いすです',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    category: {\n      id: 1,\n      categoryName: 'カテゴリ1',\n      parentId: 2,\n      parentCategoryName: '親カテゴリ',\n    },\n    createdAt: 10000,\n  },\n  {\n    id: 4,\n    status: 'on_sale',\n    sellerId: 1111,\n    seller: {\n      id: 1111,\n      accountName: 'sota1235',\n      address: '',\n      numSellItems: 1,\n    },\n    buyerId: 2222,\n    name: 'いす',\n    price: 10000,\n    description: 'いすです',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    category: {\n      id: 1,\n      categoryName: 'カテゴリ1',\n      parentId: 2,\n      parentCategoryName: '親カテゴリ',\n    },\n    createdAt: 10000,\n  },\n];\n","import React from 'react';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport { ItemData } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  itemList: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\ntype Props = {\n  items: ItemData[];\n  user: UserData;\n} & ErrorProps;\n\nconst UserPage: React.FC<Props> = ({ items, user }) => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <p>User Page</p>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item>\n          <Avatar className={classes.avatar}>\n            {user.accountName.charAt(0)}\n          </Avatar>\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"h3\">{user.accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <div className={classes.itemList}>\n        <ItemListComponent\n          items={items}\n          hasNext={false /* TODO */}\n          loadMore={(page: number) => {} /* TODO */}\n        />\n      </div>\n      <SellingButtonContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(UserPage);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { mockItems, mockUser } from '../mocks';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  items: mockItems, // TODO\n  user: mockUser,\n  errorType: state.error.errorType,\n  loading: false, // TODO state.page.isLoading,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\n\ntype Props = {\n  isLoggedIn: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\n\ntype Props = {\n  isLoggedIn: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">ついにリリース！</Typography>\n          <Typography variant=\"h6\">\n            椅子限定C2CのECサービス カードで簡単決済。\n          </Typography>\n          <Typography variant=\"h6\">\n            もちろんセキュリティも万全。 お互いの住所を知らなくても配送可能。\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (page: number) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  categoryIdIsValid: boolean;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      categoryIdIsValid,\n    };\n  }\n\n  render() {\n    const { classes, loading, items, categoryName } = this.props;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () =>\n      items.length === 0 ? (\n        <div className={classes.root}>\n          <Typography variant=\"h5\">出品されている商品はありません</Typography>\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{categoryName}の新着商品</Typography>\n          <ItemListComponent {...this.props} />\n          <SellingButtonContainer />\n        </div>\n      );\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemEditPage from '../pages/ItemEditPage';\nimport ItemBuyPage from '../pages/ItemBuyPage';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />\n      <AuthRoute exact path={routes.itemEdit.path} component={ItemEditPage} />\n      <AuthRoute exact path={routes.buy.path} component={ItemBuyPage} />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompletePage}\n      />\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst routes: Array<{\n  path: string;\n  pageName: string;\n}> = [\n  {\n    path: '/',\n    pageName: 'Top page',\n  },\n  {\n    path: '/login',\n    pageName: 'Sign in page',\n  },\n  {\n    path: '/register',\n    pageName: 'Sign up page',\n  },\n  {\n    path: '/timeline',\n    pageName: 'Timeline page',\n  },\n  {\n    path: '/items/:item_id',\n    pageName: 'Item page',\n  },\n  {\n    path: '/items/:item_id/edit',\n    pageName: 'Item edit page',\n  },\n  {\n    path: '/items/:item_id/buy',\n    pageName: 'Item buy page',\n  },\n  {\n    path: '/buy/complete',\n    pageName: 'Buying complete page',\n  },\n  {\n    path: '/sell',\n    pageName: 'Sell page',\n  },\n  {\n    path: '/transactions/:transaction_id',\n    pageName: 'Transaction page',\n  },\n  {\n    path: '/users/:user_id',\n    pageName: 'User page',\n  },\n  {\n    path: '/users/setting',\n    pageName: 'User setting page',\n  },\n];\n\nconst getLinks: () => React.ReactNode[] = () => {\n  const routeComponents: React.ReactNode[] = [];\n\n  for (const route of routes) {\n    routeComponents.push(\n      <li key={route.pageName}>\n        <Link to={route.path}>{route.pageName}</Link>\n      </li>,\n    );\n  }\n\n  return routeComponents;\n};\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <div>\n      <ul>{getLinks()}</ul>\n    </div>\n    <hr />\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport { Middleware } from 'redux';\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;\n","import { AnyAction, Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<AnyAction>) => (\n  action: any,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import {\n  LOGIN_SUCCESS,\n  LoginSuccessAction,\n} from '../actions/authenticationActions';\nimport {\n  REGISTER_SUCCESS,\n  RegisterSuccessAction,\n} from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\ntype Actions =\n  | LoginSuccessAction\n  | RegisterSuccessAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: Actions,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { AnyAction } from 'redux';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: AnyAction,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { AnyAction } from 'redux';\nimport { ItemData } from '../dataObjects/item';\nimport {\n  FETCH_ITEM_SUCCESS,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\ntype actions = AnyAction | FetchItemSuccessAction;\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: actions,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { AnyAction } from 'redux';\nimport {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n  FetchItemFailAction,\n  FetchItemStartAction,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsStartAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_START,\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineFailAction,\n  FetchTimelineStartAction,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\ntype Actions =\n  | LocationChangeAction\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction\n  | AnyAction;\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n};\n\nconst page = (state: PageState = initialState, action: Actions): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_START:\n      return { ...state, isTimelineLoading: true };\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    case LOCATION_CHANGE:\n      const {\n        payload: {\n          location: { pathname },\n        },\n      } = action as LocationChangeAction; // TODO なんでasつけないと動かないん？\n\n      switch (pathname) {\n        case routes.timeline.path:\n          // TODO カテゴリ新着のチェックもここに入る\n          return { ...state, isTimelineLoading: true };\n        default:\n          return { ...state };\n      }\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { AnyAction } from 'redux';\nimport {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: AnyAction,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { AnyAction } from 'redux';\nimport { CategorySimple } from '../dataObjects/category';\nimport {\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\ntype Actions = FetchSettingsSuccessAction | AnyAction;\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: Actions,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions = FetchTimelineSuccessAction | AnyAction;\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: Actions,\n): TimelineState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したらリセットする\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middlewares),\n    ),\n  );\n};\n"],"sourceRoot":""}