{"version":3,"sources":["components/SignInFormComponent.tsx","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","theme.ts","components/LoadingComponent.tsx","components/Header/Header.tsx","containers/HeaderContainer.tsx","components/SnackBar/SnackBar.tsx","containers/SnackBarContainer.tsx","actions/snackBarAction.ts","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/ErrorMessageComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","errors/InternalServerError.ts","actionHelper/responseChecker.ts","actionHelper/ajaxErrorHandler.ts","actions/fetchItemAction.ts","httpClients/paymentClient.ts","actions/settingsAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage/NotFoundPage.tsx","containers/NotFoundContainer.tsx","pages/error/InternalServerErrorPage/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","components/ItemFooter/ItemFooter.tsx","components/ItemImage/ItemImage.tsx","pages/ItemPage.tsx","actions/postBumpAction.ts","containers/ItemPageContainer.tsx","components/Item/Item.tsx","components/ItemList/ItemList.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","actions/postShippedDoneAction.ts","actions/postShippedAction.ts","containers/SellerTransactionContainer.tsx","components/TransactionSeller/TransactionSeller.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","actions/postCompleteAction.ts","containers/BuyerTransactionContainer.tsx","components/TransactionBuyer/TransactionBuyer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabel/TransactionLabel.tsx","components/TransactionComponent/TransactionComponent.tsx","components/TransactionList/TransactionList.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","pages/UserSettingPage.tsx","containers/UserSettingPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","actions/postItemEditAction.ts","pages/ItemEditPage.tsx","containers/ItemEditPageContainer.tsx","components/LoadingButton/LoadingButton.tsx","components/ItemBuyFormComponent.tsx","errors/PaymentResponseError.ts","config.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","containers/ItemBuyPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","middlewares/checkLocationChange.ts","actions/locationChangeAction.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/snackBarReducer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","reducers/index.ts","index.tsx","configureStore.ts"],"names":["SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","react_default","a","createElement","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","id","label","name","autoFocus","onChange","type","autoComplete","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","ResponseError","_Error","message","response","res","inherits","createClass","key","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","csrfCheckRequired","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","append","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","errRes","wrap","_context","prev","next","status","sent","error","abrupt","stop","_x","newAuthState","userId","address","payload","push","top","catch","err","snackBarMessage","connect","themeInstance","createMuiTheme","background","default","primary","contrastText","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","MuiThemeProvider","CircularProgress","size","appBar","text","fontWeight","typography","fontWeightBold","textAlign","cursor","list","nested","paddingLeft","isLoggedIn","authStatus","ownUserId","categories","filter","category","parentId","goToTopPage","timeline","goToUserPage","user","getPath","goToSettingPage","userSetting","goToCategoryItemList","categoryId","categoryTimeline","onClickTitle","_React$useState","open","categoryExpanded","_React$useState2","slicedToArray","toggleDrawer","event","_objectSpread","react","Drawer","onClose","List","ListItem","button","ListItemIcon","NewReleases_default","ListItemText","Weekend_default","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","map","EventSeat_default","categoryName","Person_default","Settings_default","AppBar","Toolbar","IconButton","edge","Menu_default","close","padding","icon","fontSize","marginRight","success","snackBar","available","reason","handleClose","Icon","CheckCircleIcon","ErrorIcon","getIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","action","aria-label","Close_default","BasePageComponent","Container","maxWidth","HeaderContainer","loading","components_LoadingComponent","children","SnackBarContainer","paddingTop","page","isLoading","alreadyLoaded","checked","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","numSellItems","num_sell_items","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","onImageChange","readAsDataURL","imagePreview","alt","src","Paper_default","imagePreviewSpace","Avatar_default","Camera","Typography_default","imagePreviewText","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","CloudUpload_default","justifyContent","height","maxHeight","marginLeft","ErrorMessageComponent","FormHelperText","SellFormComponent","description","price","selectedCategoryId","_onImageChange","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","image","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","Fragment","title","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","ErrorMessageComponent_ErrorMessageComponent","marginBottom","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","FormData","postFormData","itemId","newErrors","formError","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","InternalServerError","checkAppResponse","_checkAppResponse","ajaxErrorHandler","actionCreate","internalServerError","fetchItemAction","Promise","resolve","fetchItemStartAction","get","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","image_url","parent_id","category_name","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","paymentClient","baseURL","fetchSettings","fetchSettingStartAction","fetchSettingsSuccessAction","csrfToken","PaymentClient","setBaseURL","payment_service_url","fetchSettingsFailAction","settings","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","isMyPage","userDataRes","userData","transactions","transactionRes","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPageData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","fetchUserPageDataAction_objectSpread","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","item_id","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","errorMessage","img","link","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","NotFoundContainer","SellFormContainer","buyButton","ItemFooter","buttons","disabled","buttonText","ItemImage","imageUrl","isSoldOut","card","itemImage","soldOut","zIndex","borderStyle","borderWidth","borderColor","soldOutText","transform","getUserStyles","Card","ItemPage","load","match","_onClickBuyButton","_onClickItemEditButton","_onClickBumpButton","_onClickTransaction","onClickBuy","onClickItemEdit","onClickBump","onClickTransaction","viewer","root","ItemImage_ItemImage","sm","descSection","Divider","divider","charAt","ItemFooter_ItemFooter","textDecoration","POST_BUMP_START","POST_BUMP_SUCCESS","POST_BUMP_FAIL","postBumpAction","isItemLoading","viewingItem","buy","itemEdit","transaction","Item","GridListTile","GridListTileBar","subtitle","gridList","flexWrap","grid","ItemList","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","Item_Item","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cellHeight","cols","fab","sell","Fab_default","Edit","ItemListPage","SellingButtonContainer","lastItem","loadMoreItems","ItemList_ItemList","overflow","isTimelineLoading","Initial","postShipped","qrCode","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","postComplete","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","TransactionPage","TransactionComponent","auth","NotFoundPage_NotFoundPage","InternalServerErrorPage_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","normalLabel","soldOutLabel","grey","A100","tradingLabel","TransactionLabel","itemStatus","_getLabelByStatus","getLabelByStatus","_getLabelByStatus2","labelName","cardContent","detail","itemTitle","paddingRight","paddingBottom","CardMedia_default","CardContent_default","noWrap","TransactionLabel_TransactionLabel","tile","TransactionList","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","currentPageUserId","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionList_TransactionList","_this$props3","Tabs_default","Tab_default","hidden","_getItemList","_getTransactionsList","nextProps","prevState","nextLoading","nextPageUserId","nextIsMyPage","UserPage_objectSpread","tab","light","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","UserSettingPage","rest","objectWithoutProperties","react_router","render","textarea","checklist","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","category_id","categoryIdIsValid","currentCategoryId","nextCategoryId","CategoryItemListPage_objectSpread","BuyCompletePage","POST_ITEM_EDIT_START","POST_ITEM_EDIT_SUCCESS","POST_ITEM_EDIT_FAIL","postItemEditAction","itemPrice","reqParams","item_price","itemEditFormError","ItemEditPage","_onClickEdit","onClickEdit","BaseLoadingButton","_onClick","buttonName","LoadingButton","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","TextField_default","helperText","PaymentResponseError","shopID","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","card_number","shop_id","token","buyComplete","getResponse","usingCardFailAction","buyFailAction","buyFormError","buyPage","ItemBuyPage","ItemBuyFormContainer","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemEditPageContainer","ItemBuyPageContainer","BuyCompleteContainer","ItemPageContainer","TransactionPageContainer","UserSettingPageContainer","UserPageContainer","App","Route_AppRoute","middleware","getState","console","group","info","log","groupEnd","store","LOCATION_CHANGE","router","location","pathname","initialState","authStatusReducer_objectSpread","userPayload","formErrorReducer_objectSpread","viewingItemReducer_objectSpread","viewingUserReducer_objectSpread","pathChangeState","pageReducuer_objectSpread","snackBarReducer_objectSpread","buyPageReducer_objectSpread","categoriesReducer_objectSpread","timelineReducer_objectSpread","transactionsReducer_objectSpread","history","userItemsReducer_objectSpread","createBrowserHistory","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.672ff9d8.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(\n    path: string,\n    params: any = {},\n    csrfCheckRequired: boolean = true,\n  ): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (csrfCheckRequired) {\n      params.csrf_token = await this.getCsrfToken();\n    }\n\n    requestOption.body = JSON.stringify(params);\n\n    return await fetch(path, requestOption);\n  }\n\n  async postFormData(path: string, body: FormData): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      // MEMO: The reason why we should not set Content-Type header by ourselves\n      // https://stackoverflow.com/questions/39280438/fetch-missing-boundary-in-multipart-form-data-post\n      headers: this.defaultHeaders,\n      credentials: 'same-origin',\n    };\n\n    body.append('csrf_token', await this.getCsrfToken());\n    requestOption.body = body;\n\n    return await fetch(path, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { ErrorRes, LoginRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { SnackBarAction } from './actionTypes';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport type AuthActions =\n  | LoginSuccessAction\n  | LoginFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AuthActions>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AuthActions>) => {\n    AppClient.post(\n      '/login',\n      {\n        account_name: accountName,\n        password: password,\n      },\n      false,\n    )\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(loginFailAction(err.message));\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction extends SnackBarAction<typeof LOGIN_FAIL> {}\n\nexport function loginFailAction(error: string): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    snackBarMessage: error,\n    variant: 'error',\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import { createMuiTheme } from '@material-ui/core';\n\nconst PRIMARY = '#f44436';\nconst SECONDARY = '#4fc3f7';\nconst SECONDARY_CONTRAST = '#fff';\n\nexport const themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: '#fff',\n    },\n    primary: {\n      main: PRIMARY,\n    },\n    secondary: {\n      main: SECONDARY,\n      contrastText: SECONDARY_CONTRAST,\n    },\n  },\n});\n","import React from 'react';\nimport { makeStyles, MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { themeInstance } from '../theme';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  // MEMO: Wrap component by MuiThemeProvider again to ignore this bug. https://github.com/mui-org/material-ui/issues/14044\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <CircularProgress\n        color=\"primary\"\n        size={80}\n        className={classes.progress}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default LoadingComponent;\n","import * as React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AppBar, MuiThemeProvider, Theme } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport Collapse from '@material-ui/core/Collapse';\nimport { CategorySimple } from '../../dataObjects/category';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport EventSeatIcon from '@material-ui/icons/EventSeat';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PersonIcon from '@material-ui/icons/Person';\nimport WeekendIcon from '@material-ui/icons/Weekend';\nimport { themeInstance } from '../../theme';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.primary.contrastText,\n  },\n  text: {\n    fontWeight: theme.typography.fontWeightBold,\n    textAlign: 'center',\n    width: '100%', // センタリング\n    cursor: 'pointer',\n  },\n  list: {\n    width: '270px',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\ninterface Props {\n  isLoggedIn: boolean;\n  ownUserId: number;\n  categories: CategorySimple[];\n  goToTopPage: () => void;\n  goToUserPage: (userId: number) => void;\n  goToSettingPage: () => void;\n  goToCategoryItemList: (categoryId: number) => void;\n  onClickTitle: (isLoggedIn: boolean) => void;\n}\n\nconst Header: React.FC<Props> = ({\n  isLoggedIn,\n  ownUserId,\n  categories,\n  goToTopPage,\n  goToUserPage,\n  goToSettingPage,\n  goToCategoryItemList,\n  onClickTitle,\n}) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    categoryExpanded: false,\n  });\n\n  const { open, categoryExpanded } = state;\n\n  const onClickNewItems = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToTopPage();\n  };\n\n  const onExpandCategory = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setState({ ...state, categoryExpanded: !state.categoryExpanded });\n  };\n\n  const onClickCategory = (categoryId: number) => (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToCategoryItemList(categoryId);\n  };\n\n  const onClickMyPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToUserPage(ownUserId);\n  };\n\n  const onClickMySettingPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToSettingPage();\n  };\n\n  const toggleDrawer = (open: boolean) => (event: React.MouseEvent) => {\n    event.preventDefault();\n    setState({ ...state, open });\n  };\n\n  const onClickTitleText = (e: React.MouseEvent) => {\n    e.preventDefault();\n    onClickTitle(isLoggedIn);\n  };\n\n  // MEMO: Wrap component by MuiThemeProvider again to ignore this bug. https://github.com/mui-org/material-ui/issues/14044\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      {isLoggedIn && (\n        <Drawer open={open} onClose={toggleDrawer(false)}>\n          <List className={classes.list}>\n            <ListItem button onClick={onClickNewItems}>\n              <ListItemIcon>\n                <NewReleasesIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"新着商品\" />\n            </ListItem>\n            <ListItem button onClick={onExpandCategory}>\n              <ListItemIcon>\n                <WeekendIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"カテゴリ新着商品\" />\n              {categoryExpanded ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={categoryExpanded} timeout=\"auto\" unmountOnExit>\n              <List disablePadding>\n                {categories.map((category: CategorySimple) => (\n                  <ListItem\n                    button\n                    onClick={onClickCategory(category.id)}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <EventSeatIcon color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText primary={category.categoryName} />\n                  </ListItem>\n                ))}\n              </List>\n            </Collapse>\n            <ListItem button onClick={onClickMyPage}>\n              <ListItemIcon>\n                <PersonIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"マイページ\" />\n            </ListItem>\n            <ListItem button onClick={onClickMySettingPage}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"設定\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      )}\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n          {isLoggedIn && (\n            <IconButton\n              color=\"inherit\"\n              onClick={toggleDrawer(true)}\n              edge=\"start\"\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography className={classes.text} variant=\"h5\">\n            ISUCARI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </MuiThemeProvider>\n  );\n};\n\nexport { Header };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { Header } from '../components/Header';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  ownUserId: state.authStatus.userId || 0,\n  // Note: Showing only parent category\n  categories: state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId === 0,\n  ),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  goToTopPage: () => {\n    dispatch(push(routes.timeline.path));\n  },\n  goToUserPage: (userId: number) => {\n    dispatch(push(routes.user.getPath(userId)));\n  },\n  goToSettingPage: () => {\n    dispatch(push(routes.userSetting.path));\n  },\n  goToCategoryItemList: (categoryId: number) => {\n    dispatch(push(routes.categoryTimeline.getPath(categoryId)));\n  },\n  onClickTitle: (isLoggedIn: boolean) => {\n    if (isLoggedIn) {\n      dispatch(push(routes.timeline.path));\n      return;\n    }\n    dispatch(push(routes.top.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import * as React from 'react';\nimport { Snackbar, Theme } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  text: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  close: {\n    padding: theme.spacing(0.5),\n  },\n  icon: {\n    fontSize: 20,\n    marginRight: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n  error: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nexport type SnackBarVariant = 'success' | 'error';\n\ntype Props = {\n  open: boolean;\n  variant: SnackBarVariant;\n  message?: string;\n  handleClose: (event: React.MouseEvent) => void;\n};\n\nconst getIcon = (\n  variant: SnackBarVariant,\n): typeof CheckCircleIcon | typeof ErrorIcon => {\n  switch (variant) {\n    case 'success':\n      return CheckCircleIcon;\n    case 'error':\n      return ErrorIcon;\n    default:\n      return CheckCircleIcon;\n  }\n};\n\nconst SnackBar: React.FC<Props> = ({ open, variant, message, handleClose }) => {\n  const classes = useStyles();\n\n  const handleOnClose = (event: React.SyntheticEvent, reason: string) => {\n    return handleClose(event as React.MouseEvent);\n  };\n  const Icon = getIcon(variant);\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={handleOnClose}\n    >\n      <SnackbarContent\n        className={classes[variant]}\n        message={\n          <span className={classes.text}>\n            <Icon className={classes.icon} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nexport { SnackBar };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { closeSnackBarAction } from '../actions/snackBarAction';\nimport { SnackBar } from '../components/SnackBar';\nimport * as React from 'react';\n\nconst mapStateToProps = (state: AppState) => ({\n  open: state.snackBar.available,\n  message: state.snackBar.reason,\n  variant: state.snackBar.variant,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  handleClose(event: React.MouseEvent) {\n    dispatch(closeSnackBarAction());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SnackBar);\n","import { Action } from 'redux';\n\nexport const SNACK_BAR_CLOSE = 'SNACK_BAR_CLOSE';\n\nexport type SnackBarActions = SnackBarClose;\n\nexport interface SnackBarClose extends Action<typeof SNACK_BAR_CLOSE> {}\n\nexport const closeSnackBarAction = (): SnackBarClose => ({\n  type: SNACK_BAR_CLOSE,\n});\n","import React, { PropsWithChildren } from 'react';\nimport {\n  Container,\n  MuiThemeProvider,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\nimport HeaderContainer from '../containers/HeaderContainer';\nimport SnackBarContainer from '../containers/SnackBarContainer';\nimport { StyleRules } from '@material-ui/core/styles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { themeInstance } from '../theme';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(12),\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n}\n\nexport type Props = PropsWithChildren<BaseProps>;\n\nclass BasePageComponent extends React.Component<Props> {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"md\" className={classes.container}>\n          <HeaderContainer />\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n          <SnackBarContainer />\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(BasePageComponent);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport BasePageComponent from '../components/BasePageComponent';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { ErrorRes, RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type RegisterActions =\n  | RegisterSuccessAction\n  | RegisterFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, RegisterActions>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, RegisterActions>) => {\n    AppClient.post('/register', payload, false)\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n            numSellItems: body.num_sell_items,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(registerFailAction(err.message));\n      });\n  };\n}\n\nexport interface RegisterSuccessAction extends Action<typeof REGISTER_SUCCESS> {\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n  numSellItems: number;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction\n  extends SnackBarAction<typeof REGISTER_FAIL> {}\n\nexport function registerFailAction(error: string): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    snackBarMessage: error,\n    variant: 'error',\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    imagePreviewSpace: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '300px',\n    },\n    imagePreviewText: {\n      margin: theme.spacing(2, 0),\n    },\n    imagePreview: {\n      width: 'auto',\n      height: '100%',\n      maxHeight: '300px',\n    },\n    upload: {\n      display: 'none',\n    },\n    icon: {\n      marginLeft: theme.spacing(1),\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onImageChange: (image: Blob) => void;\n}\n\ninterface State {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n\n      this.props.onImageChange(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n\n    if (imagePreviewUrl) {\n      imagePreview = (\n        <img\n          className={classes.imagePreview}\n          alt=\"プレビュー\"\n          src={imagePreviewUrl}\n        />\n      );\n    } else {\n      imagePreview = (\n        <Paper className={classes.imagePreviewSpace}>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography className={classes.imagePreviewText} variant=\"h6\">\n            商品画像\n          </Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              color=\"default\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n              <CloudUpload className={classes.icon} />\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      marginBottom: theme.spacing(2),\n    },\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  image?: Blob;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onImageChange = this._onImageChange.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId, image } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    if (image === undefined) {\n      this.setState({\n        categoryError: '画像をアップロードしてください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId, image);\n  }\n\n  _onImageChange(image: Blob) {\n    this.setState({\n      image,\n    });\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography className={classes.title} component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent onImageChange={this._onImageChange} />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { ErrorRes, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\nexport type SellingItemActions =\n  | SellingSuccessAction\n  | SellingFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SellingItemActions>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n  image: Blob,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SellingItemActions>) => {\n    const body = new FormData();\n    body.append('name', name);\n    body.append('description', description);\n    body.append('price', price.toString());\n    body.append('category_id', categoryId.toString());\n    body.append('image', image);\n    AppClient.postFormData('/sell', body)\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n        return await response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.timeline.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction\n  extends Action<typeof SELLING_ITEM_SUCCESS> {\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction extends Action<typeof SELLING_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId, image));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport type ErrorActions = NotFoundErrorAction | InternalServerErrorAction;\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {\n  message: string;\n}\n\nexport function notFoundError(message: string): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR, message };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {\n  message: string;\n}\n\nexport function internalServerError(\n  message: string,\n): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR, message };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","// will be handled as HTTP 500 Internal Server Error\nexport class InternalServerError extends Error {}\n","import { ErrorRes } from '../types/appApiTypes';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { InternalServerError } from '../errors/InternalServerError';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * checking response from application and throw error if it's necessary\n */\nexport async function checkAppResponse(response: Response) {\n  if (!response.ok) {\n    const errRes: ErrorRes = await response.json();\n\n    if (response.status === 404) {\n      throw new NotFoundError(errRes.error);\n    }\n\n    if (response.status >= 500) {\n      throw new InternalServerError(errRes.error);\n    }\n\n    throw new AppResponseError(errRes.error, response);\n  }\n}\n","import { NotFoundError } from '../errors/NotFoundError';\nimport {\n  internalServerError,\n  InternalServerErrorAction,\n  notFoundError,\n  NotFoundErrorAction\n} from '../actions/errorAction';\nimport { InternalServerError } from '../errors/InternalServerError';\nimport { Action } from 'redux';\n\nexport function ajaxErrorHandler<T extends Action<any>>(\n  err: Error,\n  actionCreate: (message: string) => T,\n): T|NotFoundErrorAction|InternalServerErrorAction{\n  if (err instanceof NotFoundError) {\n    return notFoundError(err.message);\n  }\n\n  if (err instanceof InternalServerError) {\n    return internalServerError(err.message);\n  }\n\n  return actionCreate(err.message);\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { GetItemRes } from '../types/appApiTypes';\nimport { ItemData } from '../dataObjects/item';\nimport { AppState } from '../index';\nimport {\n  ErrorActions,\n} from './errorAction';\nimport { checkAppResponse } from '../actionHelper/responseChecker';\nimport { ajaxErrorHandler } from '../actionHelper/ajaxErrorHandler';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\nexport type FetchItemActions =\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | ErrorActions;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchItemActions>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchItemActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchItemStartAction());\n      })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then(async (response: Response) => {\n        await checkAppResponse(response);\n\n        return await response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl: body.image_url,\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(ajaxErrorHandler<FetchItemActions>(err, fetchItemFailAction));\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  message: string;\n}\n\nconst fetchItemFailAction = (message: string): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    message,\n  };\n};\n","/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseURL?: string;\n  private defaultHeaders: HeadersInit = {};\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseURL}${path}`, requestOption);\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n}\n\nexport default new PaymentClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport PaymentClient from '../httpClients/paymentClient';\nimport {checkAppResponse} from \"../actionHelper/responseChecker\";\nimport {ajaxErrorHandler} from \"../actionHelper/ajaxErrorHandler\";\nimport {ErrorActions} from \"./errorAction\";\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\nexport type SettingsActions =\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction\n  | ErrorActions;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SettingsActions>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SettingsActions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then(async (response: Response) => {\n        await checkAppResponse(response);\n\n        return await response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n\n        // MEMO: ここでやるのがいいかわからん\n        PaymentClient.setBaseURL(body.payment_service_url);\n      })\n      .catch((err: Error) => {\n        dispatch<SettingsActions>(ajaxErrorHandler(err, fetchSettingsFailAction))\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  message: string;\n}\n\nconst fetchSettingsFailAction = (\n  message: string,\n): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL', message,\n});\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { TransactionItem } from '../dataObjects/item';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { AppState } from '../index';\nimport {\n  ErrorActions,\n} from './errorAction';\nimport { ajaxErrorHandler } from '../actionHelper/ajaxErrorHandler';\nimport { checkAppResponse } from '../actionHelper/responseChecker';\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\nexport type FetchTransactionActions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction\n  | ErrorActions;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchTransactionActions\n>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTransactionActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTransactionsStartAction());\n      })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then(async (response: Response) => {\n        await checkAppResponse(response);\n\n        return await response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(ajaxErrorHandler<FetchTransactionActions>(err, fetchTransactionsFailAction));\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  message: string;\n}\n\nconst fetchTransactionsFailAction = (\n  message: string,\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    message,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemSimple,\n  UserItemsReq,\n  UserItemsRes,\n} from '../types/appApiTypes';\nimport { TimelineItem } from '../dataObjects/item';\nimport { AppState } from '../index';\nimport {ErrorActions} from \"./errorAction\";\nimport {checkAppResponse} from \"../actionHelper/responseChecker\";\nimport {ajaxErrorHandler} from \"../actionHelper/ajaxErrorHandler\";\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\nexport type FetchUserItemsActions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction\n  | ErrorActions;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserItemsActions\n>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserItemsActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserItemsStartAction());\n      })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then(async (response: Response) => {\n        await checkAppResponse(response);\n\n        return await response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(ajaxErrorHandler<FetchUserItemsActions>(err, fetchUserItemsFailAction));\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  message: string,\n}\n\nconst fetchUserItemsFailAction = (\n  message: string,\n): FetchUserItemsFailAction => {\n  return {type: FETCH_USER_ITEMS_FAIL, message};\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { AppState } from '../index';\nimport {ErrorActions} from './errorAction';\nimport {checkAppResponse} from \"../actionHelper/responseChecker\";\nimport {ajaxErrorHandler} from \"../actionHelper/ajaxErrorHandler\";\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type FetchUserPageDataActions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction\n  | ErrorActions;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserPageDataActions\n>;\n\nasync function fetchUserPageData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  await checkAppResponse(userDataRes);\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    await checkAppResponse(transactionRes);\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserPageDataActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserPageDataStartAction());\n      })\n      .then(() => {\n        return fetchUserPageData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl: item.image_url,\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch<FetchUserPageDataActions>(ajaxErrorHandler(err, fetchUserPageDataFailAction));\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  message: string;\n}\n\nconst fetchUserPageDataFailAction = (\n  message: string,\n): FetchUserPageDataFailAction => {\n  return {type: FETCH_USER_PAGE_DATA_FAIL,message};\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { TimelineItem } from '../dataObjects/item';\nimport { AppState } from '../index';\nimport { ErrorActions } from './errorAction';\nimport {checkAppResponse} from \"../actionHelper/responseChecker\";\nimport {ajaxErrorHandler} from \"../actionHelper/ajaxErrorHandler\";\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\nexport type FetchTimelineActions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction\n  | ErrorActions;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchTimelineActions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTimelineActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTimelineStartAction());\n      })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then(async (response: Response) => {\n        await checkAppResponse(response);\n\n        return await response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(ajaxErrorHandler<FetchTimelineActions>(err, fetchTimelineFailAction));\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  message: string;\n}\n\nconst fetchTimelineFailAction = (message: string): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    message,\n  };\n};\n","import { INTERNAL_SERVER_ERROR, NOT_FOUND_ERROR } from '../actions/errorAction';\nimport { FETCH_ITEM_FAIL } from '../actions/fetchItemAction';\nimport { FETCH_SETTINGS_FAIL } from '../actions/settingsAction';\nimport { FETCH_TRANSACTIONS_FAIL } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_ITEMS_FAIL } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_FAIL } from '../actions/fetchUserPageDataAction';\nimport { FETCH_TIMELINE_FAIL } from '../actions/fetchTimelineAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n  errorMessage?: string;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\nconst error = (\n  state: ErrorState = initialState,\n  action: ActionTypes,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return {\n        errorType: NotFoundError,\n        errorCode: 404,\n        errorMessage: action.message,\n      };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n      return {\n        errorType: InternalServerError,\n        errorCode: 500,\n        errorMessage: action.message,\n      };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { MuiThemeProvider, Theme } from '@material-ui/core';\nimport { themeInstance } from '../../../theme';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes/Route';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    width: '70%',\n  },\n  message: {\n    paddingTop: theme.spacing(1),\n  },\n  link: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport type Props = {\n  message?: string;\n};\n\nconst NotFoundPage: React.FC<Props> = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <img className={classes.img} src={'/not_found.png'} alt={'not found'} />\n        <Typography variant=\"h3\">404 Not Found</Typography>\n        {message && (\n          <Typography variant=\"h4\" className={classes.message}>\n            {message}\n          </Typography>\n        )}\n        <Link to={routes.top.path}>\n          <Typography variant=\"h6\" className={classes.link}>\n            トップページへ\n          </Typography>\n        </Link>\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport { NotFoundPage };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { NotFoundPage } from '../pages/error/NotFoundPage';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  message: state.error.errorMessage,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NotFoundPage);\n","import React from 'react';\nimport { MuiThemeProvider, Theme } from '@material-ui/core';\nimport { themeInstance } from '../../../theme';\nimport Container from '@material-ui/core/Container';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes/Route';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    width: '70%',\n  },\n  message: {\n    paddingTop: theme.spacing(1),\n  },\n  link: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport type Props = {\n  message?: string;\n};\n\nconst InternalServerErrorPage: React.FC<Props> = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <img\n          className={classes.img}\n          src={'/internal_server_error.png'}\n          alt={'not found'}\n        />\n        <Typography variant=\"h3\">Internal Server Error</Typography>\n        {message && (\n          <Typography variant=\"h4\" className={classes.message}>\n            {message}\n          </Typography>\n        )}\n        <Link to={routes.top.path}>\n          <Typography variant=\"h6\" className={classes.link}>\n            トップページへ\n          </Typography>\n        </Link>\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport { InternalServerErrorPage };\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundContainer from '../containers/NotFoundContainer';\nimport { InternalServerErrorPage } from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundContainer),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import { AppBar, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    padding: theme.spacing(0, 2),\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  buttons: {\n    onClick: (e: React.MouseEvent) => void;\n    buttonText: string;\n    disabled: boolean;\n  }[];\n};\n\nconst ItemFooter: React.FC<Props> = ({ price, buttons }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        <Grid item>\n          <Grid container direction=\"row\">\n            {buttons.map(button => {\n              return (\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.buyButton}\n                    color=\"secondary\"\n                    onClick={button.onClick}\n                    disabled={button.disabled}\n                  >\n                    {button.buttonText}\n                  </Button>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport { ItemFooter };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst getUserStyles = (width: number) =>\n  makeStyles((theme: Theme) => ({\n    card: {\n      width: `${width}px`,\n      position: 'relative',\n    },\n    itemImage: {\n      width: `${width}px`,\n      height: 'auto',\n    },\n    soldOut: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      zIndex: 1,\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n      borderWidth: `0 140px 140px 0`,\n      borderColor: 'transparent #ff0000 transparent transparent;',\n    },\n    soldOutText: {\n      position: 'absolute',\n      top: '35px',\n      right: '1px',\n      fontWeight: theme.typography.fontWeightBold,\n      zIndex: 2,\n      transform: 'rotate(45deg);',\n      color: theme.palette.primary.contrastText,\n    },\n  }));\n\ninterface Props {\n  imageUrl: string;\n  title: string;\n  isSoldOut: boolean;\n  width: number;\n}\n\nconst ItemImage: React.FC<Props> = ({ imageUrl, title, isSoldOut, width }) => {\n  const classes = getUserStyles(width)();\n\n  return (\n    <Card className={classes.card}>\n      {isSoldOut && (\n        <React.Fragment>\n          <div className={classes.soldOut} />\n          <Typography className={classes.soldOutText} variant=\"h6\">\n            SOLD OUT\n          </Typography>\n        </React.Fragment>\n      )}\n      <img className={classes.itemImage} src={imageUrl} alt={title} />\n    </Card>\n  );\n};\n\nexport { ItemImage };\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ItemFooter } from '../components/ItemFooter';\nimport { ItemImage } from '../components/ItemImage';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      marginBottom: theme.spacing(10),\n    },\n    title: {\n      margin: theme.spacing(3),\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickBump: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    this._onClickItemEditButton = this._onClickItemEditButton.bind(this);\n    this._onClickBumpButton = this._onClickBumpButton.bind(this);\n    this._onClickTransaction = this._onClickTransaction.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickBumpButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBump(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let buttons: {\n      onClick: (e: React.MouseEvent) => void;\n      buttonText: string;\n      disabled: boolean;\n    }[] = [\n      {\n        onClick: this._onClickBuyButton,\n        buttonText: '購入',\n        disabled: false,\n      },\n    ];\n\n    // 自分の商品で出品中なら編集画面へ遷移 / Bumpボタンを表示\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      buttons = [\n        {\n          onClick: this._onClickBumpButton,\n          buttonText: 'Bump',\n          disabled: false,\n        },\n        {\n          onClick: this._onClickItemEditButton,\n          buttonText: '商品編集',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 出品者 or 購入者で取引中か売り切れなら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      (item.status === 'trading' || item.status === 'sold_out')\n    ) {\n      buttons = [\n        {\n          onClick: this._onClickTransaction,\n          buttonText: '取引画面',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      buttons = [\n        {\n          onClick(e: React.MouseEvent) {},\n          buttonText: '売り切れ',\n          disabled: true,\n        },\n      ];\n    }\n\n    return (\n      <BasePageContainer>\n        <div className={classes.root}>\n          <Typography className={classes.title} variant=\"h3\">\n            {item.name}\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item>\n              <ItemImage\n                imageUrl={item.thumbnailUrl}\n                title={item.name}\n                isSoldOut={item.status !== 'on_sale'}\n                width={500}\n              />\n            </Grid>\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">商品説明</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Typography variant=\"body1\">{item.description}</Typography>\n                  </div>\n\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">カテゴリ</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Typography variant=\"body1\">\n                      <RouteLink\n                        to={routes.categoryTimeline.getPath(\n                          item.category.parentId,\n                        )}\n                      >\n                        {item.category.parentCategoryName}\n                      </RouteLink>{' '}\n                      > {item.category.categoryName}\n                    </Typography>\n                  </div>\n\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">出品者</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      wrap=\"nowrap\"\n                      spacing={2}\n                    >\n                      <Grid item>\n                        <RouteLink\n                          className={classes.link}\n                          to={routes.user.getPath(item.sellerId)}\n                        >\n                          <Avatar className={classes.avatar}>\n                            {item.seller.accountName.charAt(0)}\n                          </Avatar>\n                        </RouteLink>\n                      </Grid>\n                      <Grid item xs>\n                        <Typography variant=\"body1\">\n                          {item.seller.accountName}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <ItemFooter price={item.price} buttons={buttons} />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, BumpReq, BumpRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_BUMP_START = 'POST_BUMP_START';\nexport const POST_BUMP_SUCCESS = 'POST_BUMP_SUCCESS';\nexport const POST_BUMP_FAIL = 'POST_BUMP_FAIL';\n\nexport type PostBumpActions =\n  | PostBumpStartAction\n  | PostBumpSuccessAction\n  | PostBumpFailAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostBumpActions>;\n\nexport function postBumpAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostBumpActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postBumpStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/bump', { item_id: itemId } as BumpReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: BumpRes) => {\n        dispatch(postBumpSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(postBumpFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostBumpStartAction extends Action<typeof POST_BUMP_START> {}\n\nexport function postBumpStartAction(): PostBumpStartAction {\n  return {\n    type: POST_BUMP_START,\n  };\n}\n\nexport interface PostBumpSuccessAction\n  extends SnackBarAction<typeof POST_BUMP_SUCCESS> {}\n\nexport function postBumpSuccessAction(): PostBumpSuccessAction {\n  return {\n    type: POST_BUMP_SUCCESS,\n    snackBarMessage: 'BUMPに成功しました',\n    variant: 'success',\n  };\n}\n\nexport interface PostBumpFailAction\n  extends SnackBarAction<typeof POST_BUMP_FAIL> {}\n\nexport function postBumpFailAction(error: string): PostBumpFailAction {\n  return {\n    type: POST_BUMP_FAIL,\n    snackBarMessage: error,\n    variant: 'error',\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { postBumpAction } from '../actions/postBumpAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickBump: (itemId: number) => {\n    dispatch(postBumpAction(itemId));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../../routes/Route';\nimport { Theme } from '@material-ui/core';\nimport { ItemStatus } from '../../dataObjects/item';\nimport { ItemImage } from '../ItemImage';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: '300px',\n    position: 'relative',\n  },\n}));\n\ninterface Props {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n  status: ItemStatus;\n}\n\nconst Item: React.FC<Props> = ({ itemId, imageUrl, title, price, status }) => {\n  const classes = useStyles();\n\n  return (\n    <RouteLink to={routes.item.getPath(itemId)}>\n      <Card className={classes.card}>\n        <GridListTile>\n          <ItemImage\n            imageUrl={imageUrl}\n            title={title}\n            isSoldOut={status !== 'on_sale'}\n            width={300}\n          />\n          <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n        </GridListTile>\n      </Card>\n    </RouteLink>\n  );\n};\n\nexport { Item };\n","import React from 'react';\nimport { TimelineItem } from '../../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { Item } from '../Item';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  gridList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n  grid: {\n    height: '100%',\n  },\n}));\n\nexport interface Props {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemList: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <Item\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n          status={item.status}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList className={classes.gridList} cellHeight=\"auto\" cols={3}>\n        {itemComponents}\n      </GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemList };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButtonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"primary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButtonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButtonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButtonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemList } from '../components/ItemList';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemList items={items} loadMore={loadMoreItems} hasNext={hasNext} />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">\n        下記の「集荷予約」を押し、集荷予約の手続きをしてください\n      </Typography>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n      >\n        集荷予約\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  qrCode: {\n    width: '300px',\n    height: '300px',\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">集荷予約が完了しました</Typography>\n        <Typography variant=\"h6\">\n          配達員に下記QRコードをお見せください\n        </Typography>\n        <Typography variant=\"h6\">\n          配達員に商品を渡したら下記の「発送完了」を押してください\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <img className={classes.qrCode} src={qrCodeUrl} alt=\"QRコード\" />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClick}\n        >\n          発送完了\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\nexport type PostShippedDoneActions =\n  | PostShippedDoneStartAction\n  | PostShippedDoneSuccessAction\n  | PostShippedDoneFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  PostShippedDoneActions\n>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedDoneActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship_done', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedDoneFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_DONE_FAIL> {}\n\nexport function postShippedDoneFailAction(\n  error: string,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    snackBarMessage: error,\n    variant: 'error',\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipReq, ShipRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\nexport type PostShippedActions =\n  | PostShippedStartAction\n  | PostShippedSuccessAction\n  | PostShippedFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostShippedActions>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_FAIL> {}\n\nexport function postShippedFailAction(error: string): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    snackBarMessage: error,\n    variant: 'error',\n  };\n}\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { TransactionSeller } from '../components/TransactionSeller';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { postShippedAction } from '../actions/postShippedAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionSeller);\n","import React from 'react';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from '../Transaction/Seller/Initial';\nimport WaitShipping from '../Transaction/Seller/WaitShipping';\nimport WaitDone from '../Transaction/Seller/WaitDone';\nimport Done from '../Transaction/Seller/Done';\n\nexport type Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShipped: (itemId: number) => void;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionSeller: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShipped,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport { TransactionSeller };\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">商品が発送されるまでお待ち下さい</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">商品が発送されるまでお待ち下さい</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、下記の「取引完了」を押してください\n      </Typography>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n      >\n        取引完了\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { CompleteReq, CompleteRes, ErrorRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\nexport type PostCompleteActions =\n  | PostCompleteStartAction\n  | PostCompleteSuccessAction\n  | PostCompleteFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostCompleteActions>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostCompleteActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postCompleteFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends SnackBarAction<typeof POST_COMPLETE_FAIL> {}\n\nexport function postCompleteFailAction(error: string): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    snackBarMessage: error,\n    variant: 'error',\n  };\n}\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { TransactionBuyer } from '../components/TransactionBuyer';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionBuyer);\n","import React from 'react';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from '../Transaction/Buyer/Initial';\nimport WaitShipping from '../Transaction/Buyer/WaitShipping';\nimport WaitDone from '../Transaction/Buyer/WaitDone';\nimport Done from '../Transaction/Buyer/Done';\n\nexport type Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionBuyer: React.FC<Props> = ({\n  itemId,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport { TransactionBuyer };\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { NotFoundPage } from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { routes } from '../routes/Route';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n  });\n\ninterface TransactionProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n}\n\ntype Props = TransactionProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n      classes,\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        <InternalServerErrorPage message=\"取引中の商品ではない、もしくはデータ形式が不正です\" />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage message=\"商品が読み込めませんでした\" />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {TransactionComponent}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.descSection} variant=\"h4\">\n              取引情報\n            </Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n          </Grid>\n          <Grid item xs={3}>\n            <RouteLink to={routes.item.getPath(item.id)}>\n              <img\n                className={classes.itemImage}\n                alt={item.name}\n                src={item.thumbnailUrl}\n              />\n            </RouteLink>\n          </Grid>\n          <Grid item xs={9} container>\n            <Grid item>\n              <Typography variant=\"h5\">{item.name}</Typography>\n              <Typography variant=\"h6\">{item.price}ｲｽｺｲﾝ</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(TransactionPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { ItemStatus } from '../../dataObjects/item';\nimport { Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\nconst baseWidth = '80px';\nconst baseHeight = '25px';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  normalLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  soldOutLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.grey.A100,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  tradingLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n}));\n\ninterface Props {\n  itemStatus: ItemStatus;\n}\n\nconst getLabelByStatus = (\n  status: ItemStatus,\n): [string, 'normalLabel' | 'soldOutLabel' | 'tradingLabel'] => {\n  switch (status) {\n    case 'on_sale':\n      return ['出品中', 'normalLabel'];\n    case 'trading':\n      return ['取引中', 'tradingLabel'];\n    case 'sold_out':\n      return ['売却済', 'soldOutLabel'];\n    case 'stop':\n      return ['出品停止中', 'normalLabel'];\n    case 'cancel':\n      return ['キャンセル', 'normalLabel'];\n  }\n};\n\nconst TransactionLabel: React.FC<Props> = ({ itemStatus }) => {\n  const classes = useStyles();\n  const [labelName, classKey] = getLabelByStatus(itemStatus);\n  const className = classes[classKey];\n\n  return (\n    <div className={classes.container}>\n      <Card className={className}>\n        <Typography variant=\"subtitle2\" component=\"p\">\n          {labelName}\n        </Typography>\n      </Card>\n    </div>\n  );\n};\n\nexport { TransactionLabel };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../../routes/Route';\nimport { TransactionItem } from '../../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from '../TransactionLabel';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    display: 'flex',\n  },\n  cardContent: {\n    display: 'grid',\n  },\n  detail: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemTitle: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(3),\n    paddingBottom: theme.spacing(2),\n  },\n  img: {\n    width: '130px',\n    height: '130px',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n  const link =\n    item.status === 'on_sale'\n      ? routes.item.getPath(item.id)\n      : routes.transaction.getPath(item.id);\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={link}>\n        <CardMedia\n          className={classes.img}\n          image={item.thumbnailUrl}\n          title={item.name}\n        />\n      </RouteLink>\n      <div className={classes.detail}>\n        <CardContent className={classes.cardContent}>\n          <Typography className={classes.itemTitle} noWrap variant=\"subtitle1\">\n            {item.name}\n          </Typography>\n          <TransactionLabel itemStatus={item.status} />\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from '../TransactionComponent';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n  tile: {\n    overflow: 'inherit',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionList: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile\n        className={classes.grid}\n        classes={{ tile: classes.tile }}\n        key={item.id}\n      >\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1} cellHeight=\"auto\" spacing={6}>\n        {transactionsComponents}\n      </GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionList };\n","import React, { ReactElement } from 'react';\nimport { ItemList } from '../components/ItemList';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionList } from '../components/TransactionList';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    numSellItems: {\n      marginTop: theme.spacing(1),\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n  loading: boolean;\n  currentPageUserId: number;\n  isMyPage: boolean;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    const isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n      loading: this.props.loading,\n      currentPageUserId: pageUserId,\n      isMyPage,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const nextLoading = nextProps.loading;\n    const nextPageUserId = Number(nextProps.match.params.user_id);\n    const nextIsMyPage = nextProps.loggedInUserId === nextPageUserId;\n\n    // ページ遷移を確認した場合はデータ取得を行う\n    if (nextPageUserId !== prevState.currentPageUserId) {\n      nextProps.load(nextPageUserId, nextIsMyPage);\n\n      return {\n        ...prevState,\n        loading: true,\n        isMyPage: nextIsMyPage,\n        currentPageUserId: nextPageUserId,\n      };\n    }\n\n    return {\n      ...prevState,\n      loading: nextLoading,\n      currentPageUserId: nextPageUserId,\n      isMyPage: nextIsMyPage,\n    };\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemList\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionList\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { user, classes } = this.props;\n    const { tabValue, loading, isMyPage } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n            <Typography className={classes.numSellItems} variant=\"h6\">\n              出品数 {user.numSellItems}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <Tabs value={tabValue} onChange={this._handleChange}>\n          <Tab label=\"出品商品\" id=\"tab--item-list\" />\n          {isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n        </Tabs>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Grid, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Divider from '@material-ui/core/Divider';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport SellingButtonComponent from '../containers/SellingButtonContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  divider: {\n    margin: theme.spacing(1),\n  },\n  descSection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = {\n  id?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n};\n\nconst UserSettingPage: React.FC<Props> = ({\n  id,\n  accountName,\n  address,\n  numSellItems,\n}) => {\n  const classes = useStyles();\n\n  if (\n    id === undefined ||\n    accountName === undefined ||\n    address === undefined ||\n    numSellItems === undefined\n  ) {\n    return (\n      <InternalServerErrorPage message=\"ユーザ情報が読み込めませんでした\" />\n    );\n  }\n\n  return (\n    <BasePageContainer>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item xs={3}>\n          <Avatar className={classes.avatar}>{accountName.charAt(0)}</Avatar>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography variant=\"h3\">{accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">住所</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{address}</Typography>\n          </div>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">出品数</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{numSellItems}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <SellingButtonComponent />\n    </BasePageContainer>\n  );\n};\n\nexport default UserSettingPage;\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  id: state.authStatus.userId,\n  accountName: state.authStatus.accountName,\n  address: state.authStatus.address,\n  numSellItems: state.authStatus.numSellItems,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserSettingPage);\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button, Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  checklist: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">\n            椅子限定のフリマサイト ついにリリース！\n          </Typography>\n          <div className={classes.checklist}>\n            <Typography variant=\"h6\">✔ 安全なカード決済</Typography>\n            <Typography variant=\"h6\">✔ お互い匿名で安心配送</Typography>\n          </div>\n          <Typography variant=\"h6\">\n            安心安全にあなただけの椅子を手に入れよう！\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemList } from '../components/ItemList';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    title: {\n      paddingBottom: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  loading: boolean;\n  categoryIdIsValid: boolean;\n  currentCategoryId: number;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      loading: this.props.loading,\n      categoryIdIsValid,\n      currentCategoryId: Number(categoryId),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const nextLoading = nextProps.loading;\n    const nextCategoryId = Number(nextProps.match.params.category_id);\n\n    // ページ遷移を確認した場合はデータ取得を行う\n    if (nextCategoryId !== prevState.currentCategoryId) {\n      nextProps.load(nextCategoryId);\n\n      return {\n        ...prevState,\n        loading: true,\n        currentCategoryId: nextCategoryId,\n      };\n    }\n\n    return {\n      ...prevState,\n      loading: nextLoading,\n      currentCategoryId: nextCategoryId,\n    };\n  }\n\n  render() {\n    const { classes, items, categoryName, loadMore, hasNext } = this.props;\n    const { loading, currentCategoryId: categoryId } = this.state;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\" className={classes.title}>\n            「{categoryName}」カテゴリの新着商品一覧\n          </Typography>\n          <ItemList items={items} hasNext={hasNext} loadMore={loadMoreItems} />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage message=\"Category IDは数字のみです\" />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      color=\"primary\"\n      variant=\"contained\"\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, ItemEditReq, ItemEditRes } from '../types/appApiTypes';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const POST_ITEM_EDIT_START = 'POST_ITEM_EDIT_START';\nexport const POST_ITEM_EDIT_SUCCESS = 'POST_ITEM_EDIT_SUCCESS';\nexport const POST_ITEM_EDIT_FAIL = 'POST_ITEM_EDIT_FAIL';\n\nexport type PostItemEditActions =\n  | PostItemEditStartAction\n  | PostItemEditSuccessAction\n  | PostItemEditFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostItemEditActions>;\n\nexport function postItemEditAction(\n  itemId: number,\n  itemPrice?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostItemEditActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postItemEditStartAction());\n      })\n      .then(() => {\n        const reqParams = {\n          item_id: itemId,\n        } as ItemEditReq;\n\n        if (itemPrice) {\n          reqParams.item_price = itemPrice;\n        }\n        return AppClient.post('/items/edit', reqParams);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ItemEditRes) => {\n        dispatch(postItemEditSuccessAction());\n      })\n      .then(() => {\n        dispatch(push(routes.item.getPath(itemId)));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postItemEditFailAction({\n            itemEditFormError: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostItemEditStartAction\n  extends Action<typeof POST_ITEM_EDIT_START> {}\n\nexport function postItemEditStartAction(): PostItemEditStartAction {\n  return {\n    type: POST_ITEM_EDIT_START,\n  };\n}\n\nexport interface PostItemEditSuccessAction\n  extends Action<typeof POST_ITEM_EDIT_SUCCESS> {}\n\nexport function postItemEditSuccessAction(): PostItemEditSuccessAction {\n  return {\n    type: POST_ITEM_EDIT_SUCCESS,\n  };\n}\n\nexport interface PostItemEditFailAction\n  extends Action<typeof POST_ITEM_EDIT_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postItemEditFailAction(\n  newErrors: FormErrorState,\n): PostItemEditFailAction {\n  return {\n    type: POST_ITEM_EDIT_FAIL,\n    payload: newErrors,\n  };\n}\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport {\n  Button,\n  createStyles,\n  TextField,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { ItemData } from '../dataObjects/item';\nimport { RouteComponentProps } from 'react-router';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorMessageComponent } from '../components/ErrorMessageComponent';\nimport validator from 'validator';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (itemId: number) => void;\n  item?: ItemData;\n  formError?: string;\n  onClickEdit: (itemId: number, price: number) => void;\n}\n\ntype Props = BaseProps & RouteComponentProps<{ item_id: string }> & ErrorProps;\n\ninterface State {\n  price: number;\n}\n\nclass ItemEditPage extends React.Component<Props, State> {\n  private readonly itemId: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.itemId = Number(this.props.match.params.item_id);\n    this.props.load(this.itemId);\n\n    const { item } = this.props;\n\n    this.state = {\n      price: item ? item.price : 0,\n    };\n\n    this._onClickEdit = this._onClickEdit.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onClickEdit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickEdit(this.itemId, this.state.price);\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { loading, item, formError, classes } = this.props;\n    const { price } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    if (!item) {\n      return <InternalServerErrorPage message=\"商品が読み込めませんでした\" />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography component=\"h1\" variant=\"h5\">\n          商品編集ページ\n        </Typography>\n        <Typography component=\"h2\">{item.name}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {formError && (\n            <ErrorMessageComponent id=\"sellButton\" error={formError} />\n          )}\n          <Button\n            id=\"editButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onClickEdit}\n          >\n            編集する\n          </Button>\n          <RouteLink to={routes.item.getPath(item.id)}>\n            商品ページへ戻る\n          </RouteLink>\n        </form>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemEditPage));\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { postItemEditAction } from '../actions/postItemEditAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport ItemEditPage from '../pages/ItemEditPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n  formError: state.formError.itemEditFormError,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickEdit: (itemId: number, price: number) => {\n    dispatch(postItemEditAction(itemId, price));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemEditPage);\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      position: 'relative',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass BaseLoadingButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport const LoadingButton = withStyles(styles)(BaseLoadingButton);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { LoadingButton } from './LoadingButton';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item?: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors?: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const { item } = this.props;\n    const id = item ? item.id : 0; // MEMO: この関数がcallされる前にitemの有無は確認されるので0になることはない\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors ? errors.cardError : undefined;\n    const appError = errors ? errors.buyError : undefined;\n\n    if (!item) {\n      return (\n        <React.Fragment>\n          <Typography variant=\"h4\">エラーが発生しました</Typography>\n          <Link to={routes.timeline.path}>トップページへ戻る</Link>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","export const shopID = '11';\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { BuyReq, ErrorRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\nimport { AppState } from '../index';\nimport { shopID } from '../config';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\nexport type BuyActions =\n  | BuyStartAction\n  | BuySuccessAction\n  | BuyFailAction\n  | UsingCardFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, BuyActions>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, BuyActions>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: shopID,\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch(async (err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            const errRes: ErrorRes = await res.json();\n\n            if (errRes) {\n              return dispatch(action(errRes.error));\n            }\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\n\ntype Props = {\n  loading: boolean;\n  load: (itemId: string) => void;\n  item?: ItemData;\n} & RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemBuyPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    const { item } = props;\n    const item_id = props.match.params.item_id;\n\n    // 商品が渡されない or 渡された商品とURLが一致しない場合は商品取得をする\n    if (!item || item.id.toString() !== item_id) {\n      props.load(item_id);\n    }\n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <ItemBuyFormContainer />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<Props>()(ItemBuyPage);\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport ItemBuyPage from '../pages/ItemBuyPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: !state.viewingItem.item, // 商品がstateにない場合はloadingにする\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport UserSettingPageContainer from '../containers/UserSettingPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport { NotFoundPage } from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\nimport ItemEditPageContainer from '../containers/ItemEditPageContainer';\nimport ItemBuyPageContainer from '../containers/ItemBuyPageContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute\n        exact\n        path={routes.itemEdit.path}\n        component={ItemEditPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.buy.path}\n        component={ItemBuyPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />{' '}\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport checkLocationChange from './checkLocationChange';\nimport { Middleware } from 'redux';\n\nconst middleware: Middleware[] = [logger, checkLocationChange];\n\nexport default middleware;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<ActionTypes>) => (\n  action: ActionTypes,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { pathNameChangeAction } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\n// react-routerのページ遷移発火時、pathnameが変わった場合は独自のactionを発火する\nconst checkLocationChange: Middleware = <S extends AppState>(\n  store: MiddlewareAPI<Dispatch, S>,\n) => (next: Dispatch<ActionTypes>) => (action: ActionTypes): any => {\n  const { getState, dispatch } = store;\n  if (action.type !== LOCATION_CHANGE) {\n    return next(action);\n  }\n\n  const { router } = getState();\n  const currentPath = router.location.pathname;\n  const nextPath = action.payload.location.pathname;\n\n  if (currentPath === nextPath) {\n    return next(action);\n  }\n\n  dispatch(pathNameChangeAction());\n  return next(action);\n};\n\nexport default checkLocationChange;\n","import { Action } from 'redux';\n\nexport const PATH_NAME_CHANGE = 'PATH_NAME_CHANGE';\n\nexport type LocationChangeActions = PathNameChangeAction;\n\nexport interface PathNameChangeAction extends Action<typeof PATH_NAME_CHANGE> {}\n\nexport const pathNameChangeAction = (): PathNameChangeAction => ({\n  type: PATH_NAME_CHANGE,\n});\n","import { LOGIN_SUCCESS } from '../actions/authenticationActions';\nimport { REGISTER_SUCCESS } from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: ActionTypes,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n            numSellItems: number;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n          numSellItems: user.numSellItems,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\nimport { POST_ITEM_EDIT_FAIL } from '../actions/postItemEditAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n  itemEditFormError?: string;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n  itemEditFormError: undefined,\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: ActionTypes,\n): FormErrorState => {\n  switch (action.type) {\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    case POST_ITEM_EDIT_FAIL:\n      return {\n        ...state,\n        itemEditFormError: action.payload.itemEditFormError,\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { ItemData } from '../dataObjects/item';\nimport { FETCH_ITEM_SUCCESS } from '../actions/fetchItemAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: ActionTypes,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { UserData } from '../dataObjects/user';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: ActionTypes,\n): ViewingUserState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_SUCCESS,\n} from '../actions/fetchTimelineAction';\nimport {\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst pathChangeState: PageState = {\n  isLoading: false, // Settings取得時しかtrueにならない\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (\n  state: PageState = initialState,\n  action: ActionTypes,\n): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case PATH_NAME_CHANGE:\n      return pathChangeState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { ActionTypes } from '../actions/actionTypes';\nimport { POST_SHIPPED_FAIL } from '../actions/postShippedAction';\nimport { POST_SHIPPED_DONE_FAIL } from '../actions/postShippedDoneAction';\nimport { POST_COMPLETE_FAIL } from '../actions/postCompleteAction';\nimport { SNACK_BAR_CLOSE } from '../actions/snackBarAction';\nimport { POST_BUMP_FAIL, POST_BUMP_SUCCESS } from '../actions/postBumpAction';\nimport { SnackBarVariant } from '../components/SnackBar';\nimport { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\nexport interface SnackBarState {\n  reason: string;\n  available: boolean;\n  variant: SnackBarVariant;\n}\n\nconst initialState: SnackBarState = {\n  reason: '',\n  available: false,\n  variant: 'success',\n};\n\nconst snackBar = (\n  state: SnackBarState = initialState,\n  action: ActionTypes,\n): SnackBarState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_BUMP_SUCCESS:\n    case POST_BUMP_FAIL:\n    case POST_COMPLETE_FAIL:\n      return {\n        reason: action.snackBarMessage,\n        available: true,\n        variant: action.variant,\n      };\n    case SNACK_BAR_CLOSE:\n    case PATH_NAME_CHANGE:\n      return initialState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default snackBar;\n","import {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: ActionTypes,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { CategorySimple } from '../dataObjects/category';\nimport { FETCH_SETTINGS_SUCCESS } from '../actions/settingsAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: ActionTypes,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_TIMELINE_SUCCESS } from '../actions/fetchTimelineAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: ActionTypes,\n): TimelineState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import { TransactionItem } from '../dataObjects/item';\nimport { FETCH_TRANSACTIONS_SUCCESS } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: ActionTypes,\n): TransactionsState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_USER_ITEMS_SUCCESS } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: ActionTypes,\n): UserItemsState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport snackBar from './snackBarReducer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    snackBar,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middleware from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middleware),\n    ),\n  );\n};\n"],"sourceRoot":""}