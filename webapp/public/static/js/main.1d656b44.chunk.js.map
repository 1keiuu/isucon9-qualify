{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","components/LoadingComponent.tsx","components/Header/Header.tsx","containers/HeaderContainer.tsx","components/SnackBar.tsx","containers/SnackBarContainer.tsx","actions/snackBarAction.ts","theme.ts","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","httpClients/paymentClient.ts","actions/settingsAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage/NotFoundPage.tsx","pages/error/InternalServerErrorPage/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","components/ItemFooter/ItemFooter.tsx","pages/ItemPage.tsx","actions/postBumpAction.ts","containers/ItemPageContainer.tsx","components/Item/Item.tsx","components/ItemList/ItemList.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","actions/postShippedDoneAction.ts","actions/postShippedAction.ts","containers/SellerTransactionContainer.tsx","components/TransactionSeller/TransactionSeller.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","actions/postCompleteAction.ts","containers/BuyerTransactionContainer.tsx","components/TransactionBuyer/TransactionBuyer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabel/TransactionLabel.tsx","components/TransactionComponent/TransactionComponent.tsx","components/TransactionListComponent.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","pages/UserSettingPage.tsx","containers/UserSettingPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","actions/postItemEditAction.ts","pages/ItemEditPage.tsx","containers/ItemEditPageContainer.tsx","components/LoadingButton/LoadingButton.tsx","components/ItemBuyFormComponent.tsx","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","containers/ItemBuyPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","middlewares/checkLocationChange.ts","actions/locationChangeAction.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/snackBarReducer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","reducers/index.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","append","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","asyncToGenerator","regenerator_default","mark","_callee","errRes","wrap","_context","prev","next","status","sent","abrupt","stop","_x","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","appBar","primary","contrastText","text","fontWeight","typography","fontWeightBold","textAlign","list","isLoggedIn","authStatus","ownUserId","goToTopPage","timeline","goToUserPage","user","getPath","goToSettingPage","userSetting","_React$useState","open","_React$useState2","slicedToArray","toggleDrawer","event","_objectSpread","react","Drawer","onClose","List","ListItem","button","ListItemText","AppBar","Toolbar","IconButton","edge","Menu_default","noWrap","close","padding","snackBar","available","reason","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","aria-label","Close_default","themeInstance","createMuiTheme","background","default","BasePageComponent","MuiThemeProvider","Container","maxWidth","HeaderContainer","loading","components_LoadingComponent","children","SnackBarContainer","paddingTop","page","isLoading","alreadyLoaded","checked","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","numSellItems","num_sell_items","newErrors","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","onImageChange","readAsDataURL","imagePreview","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","SellFormComponent","description","price","selectedCategoryId","_onImageChange","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","image","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","categories","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","map","category","categoryName","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","FormData","postFormData","itemId","filter","parentId","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","notFoundError","NotFoundError","fetchItemAction","Promise","resolve","fetchItemStartAction","get","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","image_url","parent_id","category_name","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","newError","paymentClient","baseURL","fetchSettings","fetchSettingStartAction","fetchSettingsSuccessAction","csrfToken","PaymentClient","setBaseURL","payment_service_url","fetchItemPageFailAction","settings","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","isMyPage","userDataRes","userData","transactions","transactionRes","_errRes","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPageData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","fetchUserPageDataAction_objectSpread","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","item_id","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","img","link","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","buyButton","ItemFooter","buttons","disabled","buttonText","ItemPage","load","match","_onClickBuyButton","_onClickItemEditButton","_onClickBumpButton","_onClickTransaction","onClickBuy","onClickItemEdit","onClickBump","onClickTransaction","viewer","root","title","itemImage","sm","descSection","Divider","divider","categoryTimeline","charAt","ItemFooter_ItemFooter","marginBottom","height","textDecoration","POST_BUMP_START","POST_BUMP_SUCCESS","POST_BUMP_FAIL","postBumpAction","isItemLoading","viewingItem","buy","itemEdit","transaction","card","soldOut","zIndex","borderStyle","borderWidth","borderColor","soldOutText","transform","Item","imageUrl","Card","GridListTile","GridListTileBar","subtitle","gridList","flexWrap","justifyContent","grid","ItemList","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","Item_Item","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cellHeight","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","SellingButtonContainer","lastItem","loadMoreItems","ItemList_ItemList","overflow","isTimelineLoading","Initial","postShipped","qrCode","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","snackBarMessage","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","postComplete","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","TransactionPage","TransactionComponent","auth","NotFoundPage_NotFoundPage","InternalServerErrorPage_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","normalLabel","soldOutLabel","grey","A100","tradingLabel","TransactionLabel","itemStatus","_getLabelByStatus","getLabelByStatus","_getLabelByStatus2","labelName","detail","itemTitle","paddingLeft","paddingBottom","CardMedia_default","CardContent_default","TransactionLabel_TransactionLabel","TransactionListComponent","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionListComponent_TransactionListComponent","_this$props3","Tabs_default","Tab_default","hidden","_getItemList","_getTransactionsList","tab","light","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","UserSettingPage","rest","objectWithoutProperties","react_router","render","textarea","checklist","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","category_id","categoryIdIsValid","BuyCompletePage","POST_ITEM_EDIT_START","POST_ITEM_EDIT_SUCCESS","POST_ITEM_EDIT_FAIL","postItemEditAction","itemPrice","reqParams","item_price","itemEditFormError","ItemEditPage","_onClickEdit","onClickEdit","BaseLoadingButton","_onClick","buttonName","LoadingButton","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","TextField_default","helperText","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","card_number","shop_id","token","buyComplete","getResponse","usingCardFailAction","buyFailAction","buyFormError","buyPage","ItemBuyPage","ItemBuyFormContainer","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemEditPageContainer","ItemBuyPageContainer","BuyCompleteContainer","ItemPageContainer","TransactionPageContainer","UserSettingPageContainer","UserPageContainer","App","Route_AppRoute","middleware","getState","console","group","info","log","groupEnd","store","LOCATION_CHANGE","router","location","pathname","initialState","authStatusReducer_objectSpread","userPayload","formErrorReducer_objectSpread","viewingItemReducer_objectSpread","viewingUserReducer_objectSpread","pathChangeState","pageReducuer_objectSpread","snackBarReducer_objectSpread","buyPageReducer_objectSpread","categoriesReducer_objectSpread","timelineReducer_objectSpread","transactionsReducer_objectSpread","history","userItemsReducer_objectSpread","createBrowserHistory","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1d656b44.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n    requestOption.body = JSON.stringify(params);\n\n    return await fetch(path, requestOption);\n  }\n\n  async postFormData(path: string, body: FormData): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      // MEMO: The reason why we should not set Content-Type header by ourselves\n      // https://stackoverflow.com/questions/39280438/fetch-missing-boundary-in-multipart-form-data-post\n      headers: this.defaultHeaders,\n      credentials: 'same-origin',\n    };\n\n    body.append('csrf_token', await this.getCsrfToken());\n    requestOption.body = body;\n\n    return await fetch(path, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { ErrorRes, LoginRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport type AuthActions =\n  | LoginSuccessAction\n  | LoginFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AuthActions>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AuthActions>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import * as React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AppBar, Theme } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.primary.contrastText,\n  },\n  text: {\n    fontWeight: theme.typography.fontWeightBold,\n    textAlign: 'center',\n    width: '100%', // センタリング\n  },\n  list: {\n    width: '200px',\n  },\n}));\n\ninterface Props {\n  isLoggedIn: boolean;\n  ownUserId: number;\n  goToTopPage: () => void;\n  goToUserPage: (userId: number) => void;\n  goToSettingPage: () => void;\n}\n\nconst Header: React.FC<Props> = ({\n  isLoggedIn,\n  ownUserId,\n  goToTopPage,\n  goToUserPage,\n  goToSettingPage,\n}) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n  });\n\n  const onClickTop = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToTopPage();\n  };\n\n  const onClickMyPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToUserPage(ownUserId);\n  };\n\n  const onClickMySettingPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToSettingPage();\n  };\n\n  const toggleDrawer = (open: boolean) => (event: React.MouseEvent) => {\n    event.preventDefault();\n    setState({ ...state, open });\n  };\n\n  return (\n    <React.Fragment>\n      {isLoggedIn && (\n        <Drawer open={state.open} onClose={toggleDrawer(false)}>\n          <List className={classes.list}>\n            <ListItem button onClick={onClickTop}>\n              <ListItemText primary=\"新着商品\" />\n            </ListItem>\n            <ListItem button onClick={onClickMyPage}>\n              <ListItemText primary=\"マイページ\" />\n            </ListItem>\n            <ListItem button onClick={onClickMySettingPage}>\n              <ListItemText primary=\"設定\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      )}\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n          {isLoggedIn && (\n            <IconButton\n              color=\"inherit\"\n              onClick={toggleDrawer(true)}\n              edge=\"start\"\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography className={classes.text} variant=\"h5\" noWrap>\n            ISUCARI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport { Header };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { Header } from '../components/Header';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  ownUserId: state.authStatus.userId || 0,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  goToTopPage: () => {\n    dispatch(push(routes.timeline.path));\n  },\n  goToUserPage: (userId: number) => {\n    dispatch(push(routes.user.getPath(userId)));\n  },\n  goToSettingPage: () => {\n    dispatch(push(routes.userSetting.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import * as React from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\ntype Props = {\n  open: boolean;\n  message?: string;\n  handleClose: (event: React.MouseEvent) => void;\n};\n\nconst SnackBar: React.FC<Props> = ({ open, message, handleClose }) => {\n  const classes = useStyles();\n\n  const handleOnClose = (event: React.SyntheticEvent, reason: string) => {\n    return handleClose(event as React.MouseEvent);\n  };\n\n  return (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleOnClose}\n        message={<span>{message}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </React.Fragment>\n  );\n};\n\nexport { SnackBar };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { closeSnackBarAction } from '../actions/snackBarAction';\nimport { SnackBar } from '../components/SnackBar';\n\nconst mapStateToProps = (state: AppState) => ({\n  open: state.snackBar.available,\n  message: state.snackBar.reason,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  handleClose(event: React.MouseEvent) {\n    dispatch(closeSnackBarAction());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SnackBar);\n","import { Action } from 'redux';\n\nexport const SNACK_BAR_CLOSE = 'SNACK_BAR_CLOSE';\n\nexport type SnackBarActions = SnackBarClose;\n\nexport interface SnackBarClose extends Action<typeof SNACK_BAR_CLOSE> {}\n\nexport const closeSnackBarAction = (): SnackBarClose => ({\n  type: SNACK_BAR_CLOSE,\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport const themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: '#fff',\n    },\n    primary: {\n      main: '#f44436',\n    },\n    secondary: {\n      main: '#4fc3f7',\n      contrastText: '#fff',\n    },\n  },\n});\n","import React, { PropsWithChildren } from 'react';\nimport {\n  Container,\n  MuiThemeProvider,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\nimport HeaderContainer from '../containers/HeaderContainer';\nimport SnackBarContainer from '../containers/SnackBarContainer';\nimport { StyleRules } from '@material-ui/core/styles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { themeInstance } from '../theme';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(12),\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n}\n\nexport type Props = PropsWithChildren<BaseProps>;\n\nclass BasePageComponent extends React.Component<Props> {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"md\" className={classes.container}>\n          <HeaderContainer />\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n          <SnackBarContainer />\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(BasePageComponent);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport BasePageComponent from '../components/BasePageComponent';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { ErrorRes, RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type RegisterActions =\n  | RegisterSuccessAction\n  | RegisterFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, RegisterActions>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, RegisterActions>) => {\n    AppClient.post('/register', payload)\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n            numSellItems: body.num_sell_items,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction extends Action<typeof REGISTER_SUCCESS> {\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n  numSellItems: number;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction extends Action<typeof REGISTER_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErrors: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErrors,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n  onImageChange: (image: Blob) => void;\n}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n\n      this.props.onImageChange(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  image?: Blob;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onImageChange = this._onImageChange.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId, image } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    if (image === undefined) {\n      this.setState({\n        categoryError: '画像をアップロードしてください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId, image);\n  }\n\n  _onImageChange(image: Blob) {\n    this.setState({\n      image,\n    });\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent onImageChange={this._onImageChange} />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { ErrorRes, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\nexport type SellingItemActions =\n  | SellingSuccessAction\n  | SellingFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SellingItemActions>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n  image: Blob,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SellingItemActions>) => {\n    const body = new FormData();\n    body.append('name', name);\n    body.append('description', description);\n    body.append('price', price.toString());\n    body.append('category_id', categoryId.toString());\n    body.append('image', image);\n    AppClient.postFormData('/sell', body)\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n        return await response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.timeline.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction\n  extends Action<typeof SELLING_ITEM_SUCCESS> {\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction extends Action<typeof SELLING_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId, image));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport type ErrorActions = NotFoundErrorAction | InternalServerErrorAction;\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\nimport { notFoundError, NotFoundErrorAction } from './errorAction';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\nexport type FetchItemActions =\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | NotFoundErrorAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchItemActions>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchItemActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchItemStartAction());\n      })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl: body.image_url,\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        if (err instanceof NotFoundError) {\n          dispatch(notFoundError());\n          return;\n        }\n\n        dispatch(\n          fetchItemFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemFailAction = (newError: FormErrorState): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    payload: newError,\n  };\n};\n","/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseURL?: string;\n  private defaultHeaders: HeadersInit = {};\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseURL}${path}`, requestOption);\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n}\n\nexport default new PaymentClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport PaymentClient from '../httpClients/paymentClient';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\nexport type SettingsActions =\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SettingsActions>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SettingsActions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n\n        // MEMO: ここでやるのがいいかわからん\n        PaymentClient.setBaseURL(body.payment_service_url);\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemPageFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemPageFailAction = (\n  newError: FormErrorState,\n): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n  payload: newError,\n});\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TransactionItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\nexport type FetchTransactionActions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchTransactionActions\n>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTransactionActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTransactionsStartAction());\n      })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Transactions not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTransactionsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTransactionsFailAction = (\n  newErrors: FormErrorState,\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    payload: newErrors,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  UserItemsReq,\n  UserItemsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\nexport type FetchUserItemsActions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserItemsActions\n>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserItemsActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserItemsStartAction());\n      })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('UserItems not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserItemsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserItemsFailAction = (\n  newError: FormErrorState,\n): FetchUserItemsFailAction => {\n  return {\n    type: FETCH_USER_ITEMS_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { notFoundError, NotFoundErrorAction } from './errorAction';\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type FetchUserPageDataActions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction\n  | NotFoundErrorAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserPageDataActions\n>;\n\nasync function fetchUserPageData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  if (!userDataRes.ok) {\n    const errRes: ErrorRes = await userDataRes.json();\n\n    if (userDataRes.status === 404) {\n      throw new NotFoundError(errRes.error);\n    }\n\n    throw new AppResponseError(errRes.error, userDataRes);\n  }\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    if (!transactionRes.ok) {\n      const errRes: ErrorRes = await userDataRes.json();\n      throw new AppResponseError(errRes.error, transactionRes);\n    }\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserPageDataActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserPageDataStartAction());\n      })\n      .then(() => {\n        return fetchUserPageData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl: item.image_url,\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        if (err instanceof NotFoundError) {\n          dispatch(notFoundError());\n        }\n\n        dispatch(\n          fetchUserPageDataFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserPageDataFailAction = (\n  newError: FormErrorState,\n): FetchUserPageDataFailAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\nexport type FetchTimelineActions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchTimelineActions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTimelineActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTimelineStartAction());\n      })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTimelineFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTimelineFailAction = (\n  newErrors: FormErrorState,\n): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    payload: newErrors,\n  };\n};\n","import { INTERNAL_SERVER_ERROR, NOT_FOUND_ERROR } from '../actions/errorAction';\nimport { FETCH_ITEM_FAIL } from '../actions/fetchItemAction';\nimport { FETCH_SETTINGS_FAIL } from '../actions/settingsAction';\nimport { FETCH_TRANSACTIONS_FAIL } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_ITEMS_FAIL } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_FAIL } from '../actions/fetchUserPageDataAction';\nimport { FETCH_TIMELINE_FAIL } from '../actions/fetchTimelineAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\nconst error = (\n  state: ErrorState = initialState,\n  action: ActionTypes,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { MuiThemeProvider, Theme } from '@material-ui/core';\nimport { themeInstance } from '../../../theme';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes/Route';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    width: '70%',\n  },\n  message: {\n    paddingTop: theme.spacing(1),\n  },\n  link: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport type Props = {\n  message?: string;\n};\n\nconst NotFoundPage: React.FC<Props> = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <img className={classes.img} src={'/not_found.png'} alt={'not found'} />\n        <Typography variant=\"h3\">404 Not Found</Typography>\n        {message && (\n          <Typography variant=\"h4\" className={classes.message}>\n            {message}\n          </Typography>\n        )}\n        <Link to={routes.top.path}>\n          <Typography variant=\"h6\" className={classes.link}>\n            トップページへ\n          </Typography>\n        </Link>\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport { NotFoundPage };\n","import React from 'react';\nimport { MuiThemeProvider, Theme } from '@material-ui/core';\nimport { themeInstance } from '../../../theme';\nimport Container from '@material-ui/core/Container';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes/Route';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    width: '70%',\n  },\n  message: {\n    paddingTop: theme.spacing(1),\n  },\n  link: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport type Props = {\n  message?: string;\n};\n\nconst InternalServerErrorPage: React.FC<Props> = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <img\n          className={classes.img}\n          src={'/internal_server_error.png'}\n          alt={'not found'}\n        />\n        <Typography variant=\"h3\">Internal Server Error</Typography>\n        {message && (\n          <Typography variant=\"h4\" className={classes.message}>\n            {message}\n          </Typography>\n        )}\n        <Link to={routes.top.path}>\n          <Typography variant=\"h6\" className={classes.link}>\n            トップページへ\n          </Typography>\n        </Link>\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport { InternalServerErrorPage };\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport { NotFoundPage } from '../pages/error/NotFoundPage';\nimport { InternalServerErrorPage } from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import { AppBar, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    padding: theme.spacing(0, 2),\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  buttons: {\n    onClick: (e: React.MouseEvent) => void;\n    buttonText: string;\n    disabled: boolean;\n  }[];\n};\n\nconst ItemFooter: React.FC<Props> = ({ price, buttons }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        <Grid item>\n          <Grid container direction=\"row\">\n            {buttons.map(button => {\n              return (\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.buyButton}\n                    color=\"secondary\"\n                    onClick={button.onClick}\n                    disabled={button.disabled}\n                  >\n                    {button.buttonText}\n                  </Button>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport { ItemFooter };\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ItemFooter } from '../components/ItemFooter';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      marginBottom: theme.spacing(10),\n    },\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickBump: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    this._onClickItemEditButton = this._onClickItemEditButton.bind(this);\n    this._onClickBumpButton = this._onClickBumpButton.bind(this);\n    this._onClickTransaction = this._onClickTransaction.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickBumpButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBump(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let buttons: {\n      onClick: (e: React.MouseEvent) => void;\n      buttonText: string;\n      disabled: boolean;\n    }[] = [\n      {\n        onClick: this._onClickBuyButton,\n        buttonText: '購入',\n        disabled: false,\n      },\n    ];\n\n    // 自分の商品で出品中なら編集画面へ遷移 / Bumpボタンを表示\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      buttons = [\n        {\n          onClick: this._onClickBumpButton,\n          buttonText: 'Bump',\n          disabled: false,\n        },\n        {\n          onClick: this._onClickItemEditButton,\n          buttonText: '商品編集',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 出品者 or 購入者で取引中か売り切れなら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      (item.status === 'trading' || item.status === 'sold_out')\n    ) {\n      buttons = [\n        {\n          onClick: this._onClickTransaction,\n          buttonText: '取引画面',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      buttons = [\n        {\n          onClick(e: React.MouseEvent) {},\n          buttonText: '売り切れ',\n          disabled: true,\n        },\n      ];\n    }\n\n    return (\n      <BasePageContainer>\n        <div className={classes.root}>\n          <Typography className={classes.title} variant=\"h3\">\n            {item.name}\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item>\n              <img\n                className={classes.itemImage}\n                alt={item.name}\n                src={item.thumbnailUrl}\n              />\n            </Grid>\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">商品説明</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Typography variant=\"body1\">{item.description}</Typography>\n                  </div>\n\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">カテゴリ</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Typography variant=\"body1\">\n                      <RouteLink\n                        to={routes.categoryTimeline.getPath(\n                          item.category.parentId,\n                        )}\n                      >\n                        {item.category.parentCategoryName}\n                      </RouteLink>{' '}\n                      > {item.category.categoryName}\n                    </Typography>\n                  </div>\n\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">出品者</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      wrap=\"nowrap\"\n                      spacing={2}\n                    >\n                      <Grid item>\n                        <RouteLink\n                          className={classes.link}\n                          to={routes.user.getPath(item.sellerId)}\n                        >\n                          <Avatar className={classes.avatar}>\n                            {item.seller.accountName.charAt(0)}\n                          </Avatar>\n                        </RouteLink>\n                      </Grid>\n                      <Grid item xs>\n                        <Typography variant=\"body1\">\n                          {item.seller.accountName}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <ItemFooter price={item.price} buttons={buttons} />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, BumpReq, BumpRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const POST_BUMP_START = 'POST_BUMP_START';\nexport const POST_BUMP_SUCCESS = 'POST_BUMP_SUCCESS';\nexport const POST_BUMP_FAIL = 'POST_BUMP_FAIL';\n\nexport type PostBumpActions =\n  | PostBumpStartAction\n  | PostBumpSuccessAction\n  | PostBumpFailAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostBumpActions>;\n\nexport function postBumpAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostBumpActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postBumpStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/bump', { item_id: itemId } as BumpReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: BumpRes) => {\n        dispatch(postBumpSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postBumpFailAction({\n            error: err.message, // TODO\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostBumpStartAction extends Action<typeof POST_BUMP_START> {}\n\nexport function postBumpStartAction(): PostBumpStartAction {\n  return {\n    type: POST_BUMP_START,\n  };\n}\n\nexport interface PostBumpSuccessAction\n  extends Action<typeof POST_BUMP_SUCCESS> {}\n\nexport function postBumpSuccessAction(): PostBumpSuccessAction {\n  return {\n    type: POST_BUMP_SUCCESS,\n  };\n}\n\nexport interface PostBumpFailAction extends Action<typeof POST_BUMP_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postBumpFailAction(\n  newErrors: FormErrorState,\n): PostBumpFailAction {\n  return {\n    type: POST_BUMP_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { postBumpAction } from '../actions/postBumpAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickBump: (itemId: number) => {\n    dispatch(postBumpAction(itemId));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../../routes/Route';\nimport { Theme } from '@material-ui/core';\nimport { ItemStatus } from '../../dataObjects/item';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: '300px',\n    position: 'relative',\n  },\n  itemImage: {\n    width: '300px',\n    height: 'auto',\n  },\n  soldOut: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    zIndex: 1,\n    width: 0,\n    height: 0,\n    borderStyle: 'solid',\n    borderWidth: '0 140px 140px 0',\n    borderColor: 'transparent #ff0000 transparent transparent;',\n  },\n  soldOutText: {\n    position: 'absolute',\n    top: '35px',\n    right: '1px',\n    fontWeight: theme.typography.fontWeightBold,\n    zIndex: 2,\n    transform: 'rotate(45deg);',\n    color: theme.palette.primary.contrastText,\n  },\n}));\n\ninterface Props {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n  status: ItemStatus;\n}\n\nconst Item: React.FC<Props> = ({ itemId, imageUrl, title, price, status }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      {status === 'sold_out' && (\n        <React.Fragment>\n          <div className={classes.soldOut} />\n          <Typography className={classes.soldOutText} variant=\"h6\">\n            SOLD OUT\n          </Typography>\n        </React.Fragment>\n      )}\n      <GridListTile>\n        <RouteLink to={routes.item.getPath(itemId)}>\n          <img className={classes.itemImage} src={imageUrl} alt={title} />\n        </RouteLink>\n        <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n      </GridListTile>\n    </Card>\n  );\n};\n\nexport { Item };\n","import React from 'react';\nimport { TimelineItem } from '../../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { Item } from '../Item';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  gridList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n  grid: {\n    height: '100%',\n  },\n}));\n\nexport interface Props {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemList: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <Item\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n          status={item.status}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList className={classes.gridList} cellHeight=\"auto\" cols={3}>\n        {itemComponents}\n      </GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemList };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButtonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"primary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButtonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButtonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButtonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemList } from '../components/ItemList';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemList items={items} loadMore={loadMoreItems} hasNext={hasNext} />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">発送予約の手続きをしてください</Typography>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n      >\n        発送予約\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  qrCode: {\n    width: '300px',\n    height: '300px',\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">購入者の発送予約が完了しました</Typography>\n        <Typography variant=\"h6\">\n          配達員にこちらのQRコードを見せて発送した後、下記の発送完了を押してください\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <img className={classes.qrCode} src={qrCodeUrl} alt=\"QRコード\" />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClick}\n        >\n          発送完了\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\nexport type PostShippedDoneActions =\n  | PostShippedDoneStartAction\n  | PostShippedDoneSuccessAction\n  | PostShippedDoneFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  PostShippedDoneActions\n>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedDoneActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship_done', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedDoneFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_DONE_FAIL> {}\n\nexport function postShippedDoneFailAction(\n  error: string,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipReq, ShipRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\nexport type PostShippedActions =\n  | PostShippedStartAction\n  | PostShippedSuccessAction\n  | PostShippedFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostShippedActions>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_FAIL> {}\n\nexport function postShippedFailAction(error: string): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { TransactionSeller } from '../components/TransactionSeller';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { postShippedAction } from '../actions/postShippedAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionSeller);\n","import React from 'react';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from '../Transaction/Seller/Initial';\nimport WaitShipping from '../Transaction/Seller/WaitShipping';\nimport WaitDone from '../Transaction/Seller/WaitDone';\nimport Done from '../Transaction/Seller/Done';\n\nexport type Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShipped: (itemId: number) => void;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionSeller: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShipped,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport { TransactionSeller };\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が発送予約をするまでお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">出品者からの発送をお待ちください</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、受取完了ボタンを押してください\n      </Typography>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n      >\n        受取完了\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { CompleteReq, CompleteRes, ErrorRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\nexport type PostCompleteActions =\n  | PostCompleteStartAction\n  | PostCompleteSuccessAction\n  | PostCompleteFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostCompleteActions>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostCompleteActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postCompleteFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends SnackBarAction<typeof POST_COMPLETE_FAIL> {}\n\nexport function postCompleteFailAction(error: string): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { TransactionBuyer } from '../components/TransactionBuyer';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionBuyer);\n","import React from 'react';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from '../Transaction/Buyer/Initial';\nimport WaitShipping from '../Transaction/Buyer/WaitShipping';\nimport WaitDone from '../Transaction/Buyer/WaitDone';\nimport Done from '../Transaction/Buyer/Done';\n\nexport type Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionBuyer: React.FC<Props> = ({\n  itemId,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport { TransactionBuyer };\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { NotFoundPage } from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { routes } from '../routes/Route';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n  });\n\ninterface TransactionProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n}\n\ntype Props = TransactionProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n      classes,\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        <InternalServerErrorPage message=\"取引中の商品ではない、もしくはデータ形式が不正です\" />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage message=\"商品が読み込めませんでした\" />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {TransactionComponent}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.descSection} variant=\"h4\">\n              取引情報\n            </Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n          </Grid>\n          <Grid item xs={3}>\n            <RouteLink to={routes.item.getPath(item.id)}>\n              <img\n                className={classes.itemImage}\n                alt={item.name}\n                src={item.thumbnailUrl}\n              />\n            </RouteLink>\n          </Grid>\n          <Grid item xs={9} container>\n            <Grid item>\n              <Typography variant=\"h5\">{item.name}</Typography>\n              <Typography variant=\"h6\">{item.price}ｲｽｺｲﾝ</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(TransactionPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { ItemStatus } from '../../dataObjects/item';\nimport { Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\nconst baseWidth = '80px';\nconst baseHeight = '25px';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  normalLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  soldOutLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.grey.A100,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  tradingLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n}));\n\ninterface Props {\n  itemStatus: ItemStatus;\n}\n\nconst getLabelByStatus = (\n  status: ItemStatus,\n): [string, 'normalLabel' | 'soldOutLabel' | 'tradingLabel'] => {\n  switch (status) {\n    case 'on_sale':\n      return ['出品中', 'normalLabel'];\n    case 'trading':\n      return ['取引中', 'tradingLabel'];\n    case 'sold_out':\n      return ['売却済', 'soldOutLabel'];\n    case 'stop':\n      return ['出品停止中', 'normalLabel'];\n    case 'cancel':\n      return ['キャンセル', 'normalLabel'];\n  }\n};\n\nconst TransactionLabel: React.FC<Props> = ({ itemStatus }) => {\n  const classes = useStyles();\n  const [labelName, classKey] = getLabelByStatus(itemStatus);\n  const className = classes[classKey];\n\n  return (\n    <div className={classes.container}>\n      <Card className={className}>\n        <Typography variant=\"subtitle2\" component=\"p\">\n          {labelName}\n        </Typography>\n      </Card>\n    </div>\n  );\n};\n\nexport { TransactionLabel };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../../routes/Route';\nimport { TransactionItem } from '../../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from '../TransactionLabel';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    display: 'flex',\n  },\n  detail: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemTitle: {\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  img: {\n    width: '100px',\n    height: '100%',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n  const link =\n    item.status === 'on_sale'\n      ? routes.item.getPath(item.id)\n      : routes.transaction.getPath(item.id);\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={link}>\n        <CardMedia\n          className={classes.img}\n          image={item.thumbnailUrl}\n          title={item.name}\n        />\n      </RouteLink>\n      <div className={classes.detail}>\n        <CardContent>\n          <Typography className={classes.itemTitle} variant=\"h6\">\n            {item.name}\n          </Typography>\n          <TransactionLabel itemStatus={item.status} />\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from './TransactionComponent';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionListComponent: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1}>{transactionsComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionListComponent };\n","import React, { ReactElement } from 'react';\nimport { ItemList } from '../components/ItemList';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionListComponent } from '../components/TransactionListComponent';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n  private readonly isMyPage: boolean;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    this.isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, this.isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemList\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionListComponent\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { loading, user, classes } = this.props;\n    const { tabValue } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <Tabs value={tabValue} onChange={this._handleChange}>\n          <Tab label=\"出品商品\" id=\"tab--item-list\" />\n          {this.isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n        </Tabs>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {this.isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Grid, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Divider from '@material-ui/core/Divider';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport SellingButtonComponent from '../containers/SellingButtonContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  divider: {\n    margin: theme.spacing(1),\n  },\n  descSection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = {\n  id?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n};\n\nconst UserSettingPage: React.FC<Props> = ({\n  id,\n  accountName,\n  address,\n  numSellItems,\n}) => {\n  const classes = useStyles();\n\n  if (\n    id === undefined ||\n    accountName === undefined ||\n    address === undefined ||\n    numSellItems === undefined\n  ) {\n    return (\n      <InternalServerErrorPage message=\"ユーザ情報が読み込めませんでした\" />\n    );\n  }\n\n  return (\n    <BasePageContainer>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item xs={3}>\n          <Avatar className={classes.avatar}>{accountName.charAt(0)}</Avatar>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography variant=\"h3\">{accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">住所</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{address}</Typography>\n          </div>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">出品数</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{numSellItems}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <SellingButtonComponent />\n    </BasePageContainer>\n  );\n};\n\nexport default UserSettingPage;\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  id: state.authStatus.userId,\n  accountName: state.authStatus.accountName,\n  address: state.authStatus.address,\n  numSellItems: state.authStatus.numSellItems,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserSettingPage);\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button, Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  checklist: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">\n            椅子限定のフリマサイト ついにリリース！\n          </Typography>\n          <div className={classes.checklist}>\n            <Typography variant=\"h6\">✔ 安全なカード決済</Typography>\n            <Typography variant=\"h6\">✔ お互い匿名で安心配送</Typography>\n          </div>\n          <Typography variant=\"h6\">\n            安心安全にあなただけの椅子を手に入れよう！\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemList } from '../components/ItemList';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  categoryIdIsValid: boolean;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      categoryIdIsValid,\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      items,\n      categoryId,\n      categoryName,\n      loadMore,\n      hasNext,\n    } = this.props;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{categoryName}の新着商品</Typography>\n          <ItemList items={items} hasNext={hasNext} loadMore={loadMoreItems} />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage message=\"Category IDは数字のみです\" />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, ItemEditReq, ItemEditRes } from '../types/appApiTypes';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const POST_ITEM_EDIT_START = 'POST_ITEM_EDIT_START';\nexport const POST_ITEM_EDIT_SUCCESS = 'POST_ITEM_EDIT_SUCCESS';\nexport const POST_ITEM_EDIT_FAIL = 'POST_ITEM_EDIT_FAIL';\n\nexport type PostItemEditActions =\n  | PostItemEditStartAction\n  | PostItemEditSuccessAction\n  | PostItemEditFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostItemEditActions>;\n\nexport function postItemEditAction(\n  itemId: number,\n  itemPrice?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostItemEditActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postItemEditStartAction());\n      })\n      .then(() => {\n        const reqParams = {\n          item_id: itemId,\n        } as ItemEditReq;\n\n        if (itemPrice) {\n          reqParams.item_price = itemPrice;\n        }\n        return AppClient.post('/items/edit', reqParams);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ItemEditRes) => {\n        dispatch(postItemEditSuccessAction());\n      })\n      .then(() => {\n        dispatch(push(routes.item.getPath(itemId)));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postItemEditFailAction({\n            itemEditFormError: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostItemEditStartAction\n  extends Action<typeof POST_ITEM_EDIT_START> {}\n\nexport function postItemEditStartAction(): PostItemEditStartAction {\n  return {\n    type: POST_ITEM_EDIT_START,\n  };\n}\n\nexport interface PostItemEditSuccessAction\n  extends Action<typeof POST_ITEM_EDIT_SUCCESS> {}\n\nexport function postItemEditSuccessAction(): PostItemEditSuccessAction {\n  return {\n    type: POST_ITEM_EDIT_SUCCESS,\n  };\n}\n\nexport interface PostItemEditFailAction\n  extends Action<typeof POST_ITEM_EDIT_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postItemEditFailAction(\n  newErrors: FormErrorState,\n): PostItemEditFailAction {\n  return {\n    type: POST_ITEM_EDIT_FAIL,\n    payload: newErrors,\n  };\n}\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport {\n  Button,\n  createStyles,\n  TextField,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { ItemData } from '../dataObjects/item';\nimport { RouteComponentProps } from 'react-router';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorMessageComponent } from '../components/ErrorMessageComponent';\nimport validator from 'validator';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (itemId: number) => void;\n  item?: ItemData;\n  formError?: string;\n  onClickEdit: (itemId: number, price: number) => void;\n}\n\ntype Props = BaseProps & RouteComponentProps<{ item_id: string }> & ErrorProps;\n\ninterface State {\n  price: number;\n}\n\nclass ItemEditPage extends React.Component<Props, State> {\n  private readonly itemId: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.itemId = Number(this.props.match.params.item_id);\n    this.props.load(this.itemId);\n\n    const { item } = this.props;\n\n    this.state = {\n      price: item ? item.price : 0,\n    };\n\n    this._onClickEdit = this._onClickEdit.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onClickEdit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickEdit(this.itemId, this.state.price);\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { loading, item, formError, classes } = this.props;\n    const { price } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    if (!item) {\n      return <InternalServerErrorPage message=\"商品が読み込めませんでした\" />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography component=\"h1\" variant=\"h5\">\n          商品編集ページ\n        </Typography>\n        <Typography component=\"h2\">{item.name}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {formError && (\n            <ErrorMessageComponent id=\"sellButton\" error={formError} />\n          )}\n          <Button\n            id=\"editButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onClickEdit}\n          >\n            編集する\n          </Button>\n          <RouteLink to={routes.item.getPath(item.id)}>\n            商品ページへ戻る\n          </RouteLink>\n        </form>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemEditPage));\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { postItemEditAction } from '../actions/postItemEditAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport ItemEditPage from '../pages/ItemEditPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n  formError: state.formError.itemEditFormError,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickEdit: (itemId: number, price: number) => {\n    dispatch(postItemEditAction(itemId, price));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemEditPage);\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      position: 'relative',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass BaseLoadingButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport const LoadingButton = withStyles(styles)(BaseLoadingButton);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { LoadingButton } from './LoadingButton';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item?: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors?: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const { item } = this.props;\n    const id = item ? item.id : 0; // MEMO: この関数がcallされる前にitemの有無は確認されるので0になることはない\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors ? errors.cardError : undefined;\n    const appError = errors ? errors.buyError : undefined;\n\n    if (!item) {\n      return (\n        <React.Fragment>\n          <Typography variant=\"h4\">エラーが発生しました</Typography>\n          <Link to={routes.timeline.path}>トップページへ戻る</Link>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { BuyReq, ErrorRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\nimport { AppState } from '../index';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\nexport type BuyActions =\n  | BuyStartAction\n  | BuySuccessAction\n  | BuyFailAction\n  | UsingCardFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, BuyActions>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, BuyActions>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch(async (err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            const errRes: ErrorRes = await res.json();\n\n            if (errRes) {\n              return dispatch(action(errRes.error));\n            }\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\n\ntype Props = {\n  loading: boolean;\n  load: (itemId: string) => void;\n  item?: ItemData;\n} & RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemBuyPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    const { item } = props;\n    const item_id = props.match.params.item_id;\n\n    // 商品が渡されない or 渡された商品とURLが一致しない場合は商品取得をする\n    if (!item || item.id.toString() !== item_id) {\n      props.load(item_id);\n    }\n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <ItemBuyFormContainer />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<Props>()(ItemBuyPage);\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport ItemBuyPage from '../pages/ItemBuyPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: !state.viewingItem.item, // 商品がstateにない場合はloadingにする\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport UserSettingPageContainer from '../containers/UserSettingPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport { NotFoundPage } from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\nimport ItemEditPageContainer from '../containers/ItemEditPageContainer';\nimport ItemBuyPageContainer from '../containers/ItemBuyPageContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute\n        exact\n        path={routes.itemEdit.path}\n        component={ItemEditPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.buy.path}\n        component={ItemBuyPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />{' '}\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport checkLocationChange from './checkLocationChange';\nimport { Middleware } from 'redux';\n\nconst middleware: Middleware[] = [logger, checkLocationChange];\n\nexport default middleware;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<ActionTypes>) => (\n  action: ActionTypes,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { pathNameChangeAction } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\n// react-routerのページ遷移発火時、pathnameが変わった場合は独自のactionを発火する\nconst checkLocationChange: Middleware = <S extends AppState>(\n  store: MiddlewareAPI<Dispatch, S>,\n) => (next: Dispatch<ActionTypes>) => (action: ActionTypes): any => {\n  const { getState, dispatch } = store;\n  if (action.type !== LOCATION_CHANGE) {\n    return next(action);\n  }\n\n  const { router } = getState();\n  const currentPath = router.location.pathname;\n  const nextPath = action.payload.location.pathname;\n\n  if (currentPath === nextPath) {\n    return next(action);\n  }\n\n  dispatch(pathNameChangeAction());\n  return next(action);\n};\n\nexport default checkLocationChange;\n","import { Action } from 'redux';\n\nexport const PATH_NAME_CHANGE = 'PATH_NAME_CHANGE';\n\nexport type LocationChangeActions = PathNameChangeAction;\n\nexport interface PathNameChangeAction extends Action<typeof PATH_NAME_CHANGE> {}\n\nexport const pathNameChangeAction = (): PathNameChangeAction => ({\n  type: PATH_NAME_CHANGE,\n});\n","import { LOGIN_SUCCESS } from '../actions/authenticationActions';\nimport { REGISTER_SUCCESS } from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: ActionTypes,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n            numSellItems: number;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n          numSellItems: user.numSellItems,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\nimport { POST_ITEM_EDIT_FAIL } from '../actions/postItemEditAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n  itemEditFormError?: string;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n  itemEditFormError: undefined,\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: ActionTypes,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    case POST_ITEM_EDIT_FAIL:\n      return {\n        ...state,\n        itemEditFormError: action.payload.itemEditFormError,\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { ItemData } from '../dataObjects/item';\nimport { FETCH_ITEM_SUCCESS } from '../actions/fetchItemAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: ActionTypes,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import {UserData} from '../dataObjects/user';\nimport {FETCH_USER_PAGE_DATA_SUCCESS} from '../actions/fetchUserPageDataAction';\nimport {ActionTypes} from '../actions/actionTypes';\nimport {PATH_NAME_CHANGE} from \"../actions/locationChangeAction\";\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: ActionTypes,\n): ViewingUserState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_SUCCESS, } from '../actions/fetchTimelineAction';\nimport {\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst pathChangeState: PageState = {\n  isLoading: false, // Settings取得時しかtrueにならない\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (\n  state: PageState = initialState,\n  action: ActionTypes,\n): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case PATH_NAME_CHANGE:\n      return pathChangeState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { ActionTypes } from '../actions/actionTypes';\nimport { POST_SHIPPED_FAIL } from '../actions/postShippedAction';\nimport { POST_SHIPPED_DONE_FAIL } from '../actions/postShippedDoneAction';\nimport { POST_COMPLETE_FAIL } from '../actions/postCompleteAction';\nimport { SNACK_BAR_CLOSE } from '../actions/snackBarAction';\n\nexport interface SnackBarState {\n  reason: string;\n  available: boolean;\n}\n\nconst initialState: SnackBarState = {\n  reason: '',\n  available: false,\n};\n\nconst snackBar = (\n  state: SnackBarState = initialState,\n  action: ActionTypes,\n): SnackBarState => {\n  switch (action.type) {\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_COMPLETE_FAIL:\n      return {\n        reason: action.snackBarMessage,\n        available: true,\n      };\n    case SNACK_BAR_CLOSE:\n      return {\n        reason: '',\n        available: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default snackBar;\n","import {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: ActionTypes,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { CategorySimple } from '../dataObjects/category';\nimport { FETCH_SETTINGS_SUCCESS } from '../actions/settingsAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: ActionTypes,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_TIMELINE_SUCCESS } from '../actions/fetchTimelineAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: ActionTypes,\n): TimelineState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import {TransactionItem} from '../dataObjects/item';\nimport {FETCH_TRANSACTIONS_SUCCESS} from '../actions/fetchTransactionsAction';\nimport {FETCH_USER_PAGE_DATA_SUCCESS} from '../actions/fetchUserPageDataAction';\nimport {ActionTypes} from '../actions/actionTypes';\nimport {PATH_NAME_CHANGE} from \"../actions/locationChangeAction\";\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: ActionTypes,\n): TransactionsState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import {TimelineItem} from '../dataObjects/item';\nimport {FETCH_USER_ITEMS_SUCCESS} from '../actions/fetchUserItemsAction';\nimport {FETCH_USER_PAGE_DATA_SUCCESS} from '../actions/fetchUserPageDataAction';\nimport {ActionTypes} from '../actions/actionTypes';\nimport {PATH_NAME_CHANGE} from \"../actions/locationChangeAction\";\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: ActionTypes,\n): UserItemsState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport snackBar from './snackBarReducer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    snackBar,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middleware from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middleware),\n    ),\n  );\n};\n"],"sourceRoot":""}