{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","components/BasePageComponent.tsx","hoc/withBaseComponent.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/ResponseError.ts","errors/PaymentResponseError.ts","errors/AppResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","pages/TransactionPage.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/UserPage.tsx","pages/UserSettingPage.tsx","pages/BuyComplete.tsx","pages/ItemListPage.tsx","components/LoadingComponent.tsx","pages/ItemPage.tsx","actions/fetchItemAction.ts","reducers/index.ts","containers/ItemPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","appClient","baseUrl","defaultHeaders","fetch","concat","method","headers","params","requestOption","mode","assign","Content-Type","credentials","body","JSON","stringify","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","response","status","Error","json","newAuthState","userId","address","payload","push","top","catch","err","newErros","message","connect","formError","themeInstance","createMuiTheme","background","default","BasePageComponent","children","MuiThemeProvider","Container","maxWidth","withBaseComponent","WrappedComponent","BasePageComponent_BasePageComponent","useStyles","makeStyles","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","_onChangeName","_onChangeDescription","_onChangePrice","sellItem","input","validator","isNumeric","no_symbols","Number","Fragment","components_ItemImageUploadComponent","multiline","rows","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","get","ok","csrf_token","itemId","SellFormContainer","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","length","isHexadecimal","toUpperCase","onBuyAction","_this$props","errors","cardError","appError","buyError","itemImage","thumbnailUrl","TextField_default","helperText","height","textAlign","paymentClient","ResponseError","_Error","res","inherits","createClass","wrapNativeSuper","PaymentResponseError","_ResponseError","apply","arguments","AppResponseError","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","item_id","token","buyComplete","getResponse","undefined","buyFormError","viewingItem","ItemBuyFormContainer","ItemComponent","imageUrl","title","Card","getPath","GridListTileBar","subtitle","grid","ItemListComponent","items","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","GridListTile","ItemComponent_ItemComponent","return","GridList","cols","fab","position","bottom","right","sell","Fab_default","Edit","fontSize","itemList","mockItems","createdAt","mockUser","user","wrap","charAt","Divider","ItemListComponent_ItemListComponent","SellingButtonContainer","root","flexWrap","justifyContent","overflow","progress","LoadingComponent","CircularProgress","ItemPage","match","load","isFetchingItem","sm","descSection","divider","link","sellerId","AppBar","appBar","buyButton","marginBottom","textDecoration","history","fetchItemStartAction","fetchItemSuccessAction","fetchItemFailAction","isFetching","seller_id","fetchItemAction","itemEdit","buy","transaction","transactionId","userSetting","AppRoute","react_router","exact","ItemListPage","SignInPage","SignUpPage","SellPage","ItemPageContainer","ItemEditPage","ItemBuyPage","BuyCompletePage","TransactionPage","UserPage","UserSettingPage","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","authStatus","action","objectSpread","initialState","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","render","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b381e018.chunk.js","sourcesContent":["import React from 'react';\nimport {FormHelperText} from \"@material-ui/core\";\n\ninterface ErrorMessageComponentProps {\n    id: string,\n    error: string,\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({ id, error}) => {\n    return (\n        <FormHelperText\n            key={error}\n            id={id}\n            error={true}\n        >\n            {error}\n        </FormHelperText>\n    );\n};\n\nexport { ErrorMessageComponent }","import React from 'react';\n\nimport {Avatar, Typography, TextField, Button, Grid, createStyles, WithStyles} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n    onSubmit: (accountName: string, password: string) => void\n    error?: string,\n}\n\ninterface SignInFormComponentState {\n    accountName: string,\n    password: string,\n}\n\nclass SignInPageFormComponent extends React.Component<SignInFormComponentProps, SignInFormComponentState> {\n    constructor(props: SignInFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { accountName, password } = this.state;\n        this.props.onSubmit(accountName, password);\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { accountName, password } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    ログインページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"accountName\"\n                        label=\"ユーザ名\"\n                        name=\"accountName\"\n                        autoFocus\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"signInButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"signInButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onSubmit}\n                        className={classes.submit}\n                    >\n                        ログイン\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n    paymentUrl: 'http://localhost:5555',\n}","import config from '../config';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n    private baseUrl: string = config.apiUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'same-origin',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            requestOption.body = JSON.stringify(params);\n        }\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new AppClient();","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {routes} from \"../routes/Route\";\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postLoginAction(accountName: string, password: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/login', {\n            account_name: accountName,\n            password: password,\n        })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body) => {\n                dispatch(loginSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(loginFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface LoginSuccessAction {\n    type: typeof LOGIN_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function loginSuccessAction(newAuthState: AuthStatusState): LoginSuccessAction {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface LoginFailAction {\n    type: typeof LOGIN_FAIL,\n    payload: FormErrorState,\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n    return {\n        type: LOGIN_FAIL,\n        payload: newErros,\n    };\n}\n","import SignInPageFormComponent from \"../components/SignInFormComponent\";\nimport { connect } from 'react-redux';\nimport { postLoginAction } from \"../actions/authenticationActions\";\n\nconst mapStateToProps = (state: any) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSubmit: (accountName: string, password: string) => {\n        dispatch(postLoginAction(accountName, password));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPageFormComponent)","import React from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\n\nconst themeInstance = createMuiTheme({\n    palette: {\n        background: {\n            default: 'white'\n        },\n    },\n});\n\nconst BasePageComponent: React.FC = ({children}) => (\n    <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\" children={children} />\n    </MuiThemeProvider>\n);\n\nexport { BasePageComponent }","import React from 'react';\nimport {BasePageComponent} from \"../components/BasePageComponent\";\n\n/**\n * @deprecated\n */\nexport const withBaseComponent = (WrappedComponent: React.ComponentType<any>): React.FC<any> => {\n    return () => (\n        <BasePageComponent>\n            <WrappedComponent />\n        </BasePageComponent>\n    );\n};","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from \"../containers/SignInFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignInPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignInFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SignInPage);","import React from 'react';\nimport {Avatar, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {RegisterReq} from \"../types/appApiTypes\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n    register: (params: RegisterReq) => void\n    error: string,\n}\n\ninterface SignUpFormComponentState {\n    accountName: string,\n    address: string,\n    password: string,\n}\n\nclass SignUpFormComponent extends React.Component<SignUpFormComponentProps, SignUpFormComponentState> {\n    constructor(props: SignUpFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            address: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangeAddress = this._onChangeAddress.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.register({\n            account_name: this.state.accountName,\n            address: this.state.address,\n            password: this.state.password,\n        });\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { accountName, address, password } = this.state;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    新規登録\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"ユーザ名\"\n                        name=\"name\"\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"address\"\n                        label=\"住所\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this._onChangeAddress}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"signUpButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"signUpButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        新規登録\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.login.path}>すでにアカウントをお持ちの方はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {RegisterReq, RegisterRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/register', payload)\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: RegisterRes) => {\n                dispatch(registerSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(registerFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface RegisterSuccessAction {\n    type: typeof REGISTER_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function registerSuccessAction(newAuthState: AuthStatusState): RegisterSuccessAction {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface RegisterFailAction {\n    type: typeof REGISTER_FAIL,\n    payload: FormErrorState,\n}\n\nexport function registerFailAction(newErros: FormErrorState): RegisterFailAction {\n    return {\n        type: REGISTER_FAIL,\n        payload: newErros,\n    };\n}\n","import SignUpPageFormComponent from \"../components/SignUpFormComponent\";\nimport { connect } from 'react-redux';\nimport {postRegisterAction} from \"../actions/registerAction\";\nimport {RegisterReq} from \"../types/appApiTypes\";\n\nconst mapStateToProps = (state: any) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    register: (params: RegisterReq) => {\n        dispatch(postRegisterAction(params));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPageFormComponent)","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SignUpFormContainer from \"../containers/SignUpFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignUpPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignUpFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SignUpPage);","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport { Camera } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    upload: {\n        display: 'none',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n}\n\ninterface ItemImageUploadComponentState {\n    file?: File,\n    imagePreviewUrl: string,\n}\n\nclass ItemImageUploadComponent extends React.Component<ItemImageUploadComponentProps, ItemImageUploadComponentState> {\n    constructor(props: ItemImageUploadComponentProps) {\n        super(props);\n\n        this.state = {\n            imagePreviewUrl: ''\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (e.target.files === null) {\n            return;\n        }\n\n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if (typeof reader.result !== 'string') {\n                throw new Error();\n            }\n\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { imagePreviewUrl } = this.state;\n        let imagePreview = null;\n        console.log(imagePreviewUrl);\n\n        if (imagePreviewUrl) {\n            imagePreview = (<img alt=\"プレビュー\" src={imagePreviewUrl} />);\n        } else {\n            imagePreview = (\n                <Paper>\n                    <Avatar className={classes.avatar}>\n                        <Camera />\n                    </Avatar>\n                    <Typography>商品画像</Typography>\n                </Paper>\n            )\n        }\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={8}>\n                    {imagePreview}\n                </Grid>\n                <Grid item xs={4}>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.upload}\n                        id=\"outlined-button-file\"\n                        type=\"file\"\n                        onChange={this._handleImageChange}\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                            Upload\n                        </Button>\n                    </label>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\n\nimport {Typography, TextField, Button, createStyles, Theme, WithStyles} from '@material-ui/core';\nimport ItemImageUploadComponent from \"../components/ItemImageUploadComponent\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n    sellItem: (name: string, description: string, price: number) => void\n    error?: string,\n}\n\ninterface SellFormComponentState {\n    name: string,\n    description: string,\n    price: number,\n}\n\nclass SellFormComponent extends React.Component<SellFormComponentProps, SellFormComponentState> {\n    constructor(props: SellFormComponentProps) {\n        super(props);\n\n        this.state = {\n            name: '',\n            description: '',\n            price: 0,\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeDescription = this._onChangeDescription.bind(this);\n        this._onChangePrice = this._onChangePrice.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { name, description, price } = this.state;\n        this.props.sellItem(name, description, price);\n    }\n\n    _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n        const input = e.target.value;\n\n        // Only allow number\n        if (!validator.isNumeric(input, { no_symbols: true })) {\n            e.preventDefault();\n            return;\n        }\n\n        this.setState({\n            price: Number(input),\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { name, description, price } = this.state;\n\n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h5\">\n                    出品ページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <ItemImageUploadComponent/>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"商品名\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this._onChangeName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"商品説明\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this._onChangeDescription}\n                        multiline\n                        rows={5}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"値段\"\n                        name=\"price\"\n                        value={price}\n                        onChange={this._onChangePrice}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"sellButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"sellButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        出品する\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SellFormComponent)\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {SellReq, SellRes, SettingsRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function listItemAction(name: string, description: string, price: number): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.get('/settings')\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('CSRF tokenの取得に失敗しました');\n                }\n                return response.json();\n            })\n            .then((body: SettingsRes) => {\n                const payload: SellReq = {\n                    name, description, price,\n                    csrf_token: body.csrf_token,\n                };\n                return AppClient.post('/sell', payload);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('HTTP status not 200');\n                }\n                return response.json();\n            })\n            .then((body: SellRes) => {\n                dispatch(sellingSuccessAction(body.id));\n                dispatch(push(routes.top.path)); // TODO\n            })\n            .catch((err: Error) => {\n                dispatch(sellingFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface SellingSuccessAction {\n    type: typeof SELLING_ITEM_SUCCESS,\n    payload: {\n        itemId: number,\n    },\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n    return {\n        type: SELLING_ITEM_SUCCESS,\n        payload: { itemId },\n    };\n}\n\nexport interface SellingFailAction {\n    type: typeof SELLING_ITEM_FAIL,\n    payload: FormErrorState,\n}\n\nexport function sellingFailAction(newErros: FormErrorState): SellingFailAction {\n    return {\n        type: SELLING_ITEM_FAIL,\n        payload: newErros,\n    };\n}\n","import {connect} from \"react-redux\";\nimport SellFormComponent from \"../components/SellFormComponent\";\nimport {listItemAction} from \"../actions/sellingItemAction\";\n\nconst mapStateToProps = (state: any) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    sellItem: (name: string, description: string, price: number) => {\n        dispatch(listItemAction(name, description, price));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellFormComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from \"../containers/SellFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SellPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SellFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SellPage);\n","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst ItemEditPage: React.FC = () => (\n    <div>Item Edit Page</div>\n);\n\nexport default withBaseComponent(ItemEditPage);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport Button from \"@material-ui/core/Button/Button\";\nimport {BuyFormErrorState} from \"../reducers/formErrorReducer\";\nimport {ErrorMessageComponent} from './ErrorMessageComponent';\nimport {createStyles, StyleRules, Theme, WithStyles} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n        textAlign: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3,0, 1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 1),\n    },\n});\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n    item: ItemData,\n    onBuyAction: (itemId: number, cardNumber: string) => void,\n    errors: BuyFormErrorState,\n}\n\ninterface ItemBuyFormState {\n    cardNumber: string,\n}\n\nclass ItemBuyFormComponent extends React.Component<ItemBuyFormProps, ItemBuyFormState> {\n    constructor(props: ItemBuyFormProps) {\n        super(props);\n\n        this.state = {\n            cardNumber: '',\n        };\n\n        this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n        this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    }\n\n    _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n        const cardNumber = e.target.value;\n\n        if (cardNumber.length > 8) {\n            return;\n        }\n\n        if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n            return;\n        }\n\n        this.setState({\n            cardNumber: cardNumber.toUpperCase(),\n        });\n    }\n\n    _onClickBuyButton(e: React.MouseEvent) {\n        const { item: { id } } = this.props;\n        const { cardNumber } = this.state;\n        this.props.onBuyAction(id, cardNumber);\n    }\n\n    render() {\n        const { item, errors, classes } = this.props;\n        const cardError = errors.cardError;\n        const appError = errors.buyError;\n\n        return (\n            <React.Fragment>\n                <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl}/>\n                <Typography variant=\"h4\">{item.name}</Typography>\n                <Typography variant=\"h5\">{`¥${item.price}`}</Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"cardNumber\"\n                        label=\"カード番号\"\n                        name=\"cardNumber\"\n                        helperText=\"16進数大文字で入力してください\"\n                        error={!!cardError}\n                        value={this.state.cardNumber}\n                        onChange={this._onChangeCardNumber}\n                        autoFocus\n                    />\n                    {\n                        cardError &&\n                        <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n                    }\n                    <Button\n                        id=\"buyButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onClickBuyButton}\n                        className={classes.submit}\n                    >\n                        購入\n                    </Button>\n                    {\n                        appError &&\n                        <ErrorMessageComponent id=\"buyButton\" error={appError}/>\n                    }\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n    private baseUrl: string = config.paymentUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'cors',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            requestOption.body = JSON.stringify(params);\n        }\n\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new PaymentClient();","export class ResponseError extends Error {\n    private readonly res: Response;\n\n    constructor(message: string, response: Response) {\n        super(message);\n        this.res = response;\n    }\n\n    getResponse(): Response {\n        return this.res;\n    }\n}","import {ResponseError} from \"./ResponseError\";\n\nexport class PaymentResponseError extends ResponseError {}","import {ResponseError} from \"./ResponseError\";\n\nexport class AppResponseError extends ResponseError {}","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {BuyReq} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\nimport {CardReq, CardRes} from \"../types/paymentApiTypes\";\nimport {PaymentResponseError} from \"../errors/PaymentResponseError\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {ResponseError} from \"../errors/ResponseError\";\n\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function buyItemAction(itemId: number, cardNumber: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        PaymentClient.post('/card', {\n            card_number: cardNumber,\n            shop_id: 'TODO',\n        } as CardReq)\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new PaymentResponseError(\n                        'request to /card of payment service was failed', response\n                    );\n                }\n\n                return response.json();\n            })\n            .then((body: CardRes) => {\n                return AppClient.post('/buy', {\n                    item_id: itemId,\n                    token: body.token,\n                } as BuyReq);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new AppResponseError(\n                        'request to /buy of app was failed', response\n                    );\n                }\n\n                return response.json();\n            })\n            .then((body: {}) => {\n                dispatch(buySuccessAction());\n                dispatch(push(routes.buyComplete.path));\n            })\n            .catch((err: Error) => {\n                if (err instanceof ResponseError) {\n                    return err.getResponse().json();\n                }\n\n                dispatch(buyFailAction(err.message));\n            })\n            .then((body) => {\n                dispatch(usingCardFailAction(body.error)); // TODO cardエラーかappエラーか区別する\n            });\n    };\n}\n\nexport interface BuySuccessAction {\n    type: typeof BUY_SUCCESS,\n}\n\nexport function buySuccessAction(): BuySuccessAction {\n    return {\n        type: BUY_SUCCESS,\n    };\n}\n\nexport interface UsingCardFailAction {\n    type: typeof USING_CARD_FAIL,\n    payload: FormErrorState,\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction{\n    return {\n        type: USING_CARD_FAIL,\n        payload: {\n            error: undefined,\n            buyFormError: {\n                cardError: error,\n            },\n        },\n    };\n}\nexport interface BuyFailAction {\n    type: typeof BUY_FAIL,\n    payload: FormErrorState,\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n    return {\n        type: BUY_FAIL,\n        payload: {\n            error: undefined,\n            buyFormError: {\n                buyError: error,\n            },\n        },\n    };\n}\n","import {connect} from \"react-redux\";\nimport ItemBuyFormComponent from \"../components/ItemBuyFormComponent\";\nimport {buyItemAction} from \"../actions/buyAction\";\n\nconst mapStateToProps = (state: any) => ({\n    item: state.viewingItem.item,\n    errors: state.formError.buyFormError,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onBuyAction: (itemId: number, cardNumber: string) => {\n        dispatch(buyItemAction(itemId, cardNumber))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemBuyFormComponent);\n","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\nimport ItemBuyFormContainer from \"../containers/ItemBuyFormContainer\";\n\nconst ItemBuyPage: React.FC = () => {\n    return (\n        <React.Fragment>\n            <ItemBuyFormContainer />\n        </React.Fragment>\n    );\n};\n\nexport default withBaseComponent(ItemBuyPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst TransactionPage: React.FC = () => (\n    <div>Transaction Page</div>\n);\n\nexport default withBaseComponent(TransactionPage);","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link as RouteLink } from 'react-router-dom'\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {routes} from \"../routes/Route\";\n\nconst useStyles = makeStyles(theme => ({\n    itemImage: {\n        height: '100%',\n    },\n}));\n\ninterface ItemComponentProps {\n    itemId: number\n    imageUrl: string\n    title: string\n    price: number\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n    itemId, imageUrl, title, price\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <RouteLink to={routes.item.getPath(itemId)}>\n                <img className={classes.itemImage} src={imageUrl} alt={title}/>\n            </RouteLink>\n            <GridListTileBar\n                title={title}\n                subtitle={`¥${price}`}\n            />\n        </Card>\n    );\n};\n\nexport { ItemComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        width: '300px',\n        height: '300px',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    const itemComponents = [];\n\n    for (const item of items) {\n        itemComponents.push(\n            <GridListTile className={classes.grid} key={item.id}>\n                <ItemComponent itemId={item.id} imageUrl={item.thumbnailUrl} title={item.name} price={item.price}/>\n            </GridListTile>\n        )\n    }\n\n    return (\n        <GridList cols={3}>\n            {itemComponents}\n        </GridList>\n    );\n};\n\nexport { ItemListComponent }","import React from 'react';\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Edit} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n        position: 'fixed',\n        top: 'auto',\n        bottom: '30px',\n        right: '30px',\n        width: '100px',\n        height: '100px',\n    },\n}));\n\ninterface SellingButtonComponentProps {\n    onClick: (e: React.MouseEvent) => void\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n        <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            onClick={onClick}\n        >\n            <Edit fontSize=\"large\" />\n        </Fab>\n    );\n};\n\nexport { SellingButonComponent }","import { push } from 'connected-react-router';\nimport {SellingButonComponent} from \"../components/SellingButtonComponent\";\nimport {connect} from \"react-redux\";\nimport {routes} from \"../routes/Route\";\nimport * as React from \"react\";\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onClick: (e: React.MouseEvent) => {\n        e.preventDefault();\n        dispatch(push(routes.sell.path));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellingButonComponent);","import React from 'react';\nimport { ItemListComponent } from \"../components/ItemListComponent\";\nimport { ItemData } from \"../dataObjects/item\";\nimport { UserData } from \"../dataObjects/user\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    avatar: {\n        margin: theme.spacing(3),\n        width: '100px',\n        height: '100px',\n    },\n    itemList: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\ninterface UserPageProps {\n    items: ItemData[]\n    user: UserData\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n};\n\nconst UserPage: React.FC/*<UserPageProps>*/ = (/*{ items, user }*/) => {\n    const classes = useStyles();\n    const user = mockUser;\n    const items = mockItems;\n\n    return (\n        <div>\n            <p>User Page</p>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={2}\n            >\n                <Grid item>\n                    <Avatar className={classes.avatar}>{user.accountName.charAt(0)}</Avatar>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h3\">{user.accountName}</Typography>\n                </Grid>\n            </Grid>\n            <Divider variant=\"middle\" />\n            <div className={classes.itemList}>\n                <ItemListComponent items={items}/>\n            </div>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(UserPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst UserSettingPage: React.FC = () => (\n    <div>User setting Page</div>\n);\n\nexport default withBaseComponent(UserSettingPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst BuyCompletePage: React.FC = () => (\n    <div>Item buying Page</div>\n);\n\nexport default withBaseComponent(BuyCompletePage);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(1),\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst ItemListPage: React.FC/*<ItemListPageProps>*/ = (/*{ items }: ItemListPageProps*/) => {\n    const classes = useStyles();\n    const items = mockItems;\n\n    return (\n        <div className={classes.root}>\n            <ItemListComponent items={items}/>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(ItemListPage);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n        margin: theme.spacing(2),\n    },\n}));\n\nexport default function LoadingComponent() {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CircularProgress className={classes.progress}/>\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { ItemData } from \"../dataObjects/item\";\nimport {createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link as RouteLink, RouteComponentProps} from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {routes} from \"../routes/Route\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport LoadingComponent from \"../components/LoadingComponent\";\nimport {BasePageComponent} from \"../components/BasePageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    title: {\n        margin: theme.spacing(3),\n    },\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n    },\n    avatar: {\n        width: '50px',\n        height: '50px',\n    },\n    divider: {\n        margin: theme.spacing(1),\n    },\n    descSection: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    buyButton: {\n        margin: theme.spacing(1),\n    }\n});\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n    item: ItemData\n    load: (itemId: string) => void;\n    isFetchingItem: boolean,\n}\n\ntype Props = ItemPageProps & RouteComponentProps<{ item_id: string }>\n\nclass ItemPage extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n\n        console.log(this.props);\n        console.log(`load will be executed ${this.props.match.params.item_id}`);\n        this.props.load(this.props.match.params.item_id);\n    }\n\n    render() {\n        const { classes, item, isFetchingItem } = this.props;\n\n        return (\n            <BasePageComponent>\n                { isFetchingItem ? (\n                    <LoadingComponent/>\n                ) : (\n                    <React.Fragment>\n                        Item Page\n                        <Typography className={classes.title} variant=\"h3\">{item.name}</Typography>\n                        <Grid container spacing={2}>\n                            <Grid item>\n                                <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl}/>\n                            </Grid>\n                            <Grid item xs={12} sm container>\n                                <Grid item xs container direction=\"column\" spacing={2}>\n                                    <Grid item xs>\n                                        <div className={classes.descSection}>\n                                            <Typography variant=\"h4\">商品説明</Typography>\n                                            <Divider className={classes.divider} variant=\"middle\"/>\n                                            <Typography variant=\"body1\">{item.description}</Typography>\n                                        </div>\n\n                                        <div className={classes.descSection}>\n                                            <Typography variant=\"h4\">出品者</Typography>\n                                            <Divider className={classes.divider} variant=\"middle\"/>\n                                            <Grid\n                                                container\n                                                direction=\"row\"\n                                                justify=\"center\"\n                                                alignItems=\"center\"\n                                                wrap=\"nowrap\"\n                                                spacing={2}\n                                            >\n                                                <Grid item>\n                                                    <RouteLink className={classes.link} to={routes.user.getPath(item.sellerId)}>\n                                                        <Avatar className={classes.avatar}>\"T\"</Avatar>\n                                                    </RouteLink>\n                                                </Grid>\n                                                <Grid item xs>\n                                                    <Typography variant=\"body1\">\"TODO\"</Typography>\n                                                </Grid>\n                                            </Grid>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n                            <Grid\n                                container\n                                spacing={2}\n                                direction=\"row\"\n                                alignItems=\"center\"\n                            >\n                                <Grid item>\n                                    <Typography variant=\"h5\">¥{item.price}</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Button variant=\"contained\" className={classes.buyButton}>購入</Button>\n                                </Grid>\n                            </Grid>\n                        </AppBar>\n                    </React.Fragment>\n                    )\n                }\n            </BasePageComponent>\n        );\n    }\n}\n\nexport default withStyles(styles)(ItemPage);","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport {Action} from \"redux\";\nimport {GetItemRes} from \"../types/appApiTypes\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {ViewingItemState} from \"../reducers/viewingItemReducer\";\nimport {ItemData} from \"../dataObjects/item\";\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\ntype State = void | ViewingItemState;\ntype FetchItemActions = FetchItemStartAction | FetchItemSuccessAction | FetchItemFailAction;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, FetchItemActions>\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, FetchItemActions>) => {\n        dispatch(fetchItemStartAction());\n        AppClient.get(`/items/${itemId}.json`)\n            .then((response: Response) => {\n                if (!response.ok) {\n                    if (response.status === 404) {\n                        dispatch(fetchItemFailAction());\n                        // TODO 404表示\n                    }\n\n                    throw new AppResponseError('Request for getting item data was failed', response);\n                }\n\n                return response.json();\n            })\n            .then((body: GetItemRes) => {\n                dispatch(fetchItemSuccessAction({\n                    id: body.id,\n                    status: body.status,\n                    sellerId: body.seller_id,\n                    name: body.name,\n                    price: body.price,\n                    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n                    description: body.description,\n                    createdAt: '2019-07-20 12:00:00', // TODO\n                }));\n            })\n            .catch((err: Error) => {\n                dispatch(fetchItemFailAction());\n                // TODO handling error\n            });\n    };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n    return {\n        type: FETCH_ITEM_START,\n    };\n};\n\nexport interface FetchItemSuccessAction extends Action<typeof FETCH_ITEM_SUCCESS > {\n    payload: {\n        item: ItemData,\n    },\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n    return {\n        type: FETCH_ITEM_SUCCESS ,\n        payload: {\n            item\n        },\n    };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL > {}\n\nconst fetchItemFailAction = (): FetchItemFailAction => {\n    return {\n        type: FETCH_ITEM_FAIL ,\n    };\n};\n\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) => combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n});\n","import {connect} from \"react-redux\";\nimport ItemPage from \"../pages/ItemPage\";\nimport {fetchItemAction} from \"../actions/fetchItemAction\";\nimport {AppState} from \"../index\";\n\nconst mapStateToProps = (state: AppState) => ({\n    isFetchingItem: state.viewingItem.isFetching,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    load: (itemId: string) => {\n        dispatch(fetchItemAction(itemId))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemPage);\n","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SignInPage from \"../pages/SignInPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport SellPage from \"../pages/SellPage\";\nimport ItemEditPage from \"../pages/ItemEditPage\";\nimport ItemBuyPage from \"../pages/ItemBuyPage\";\nimport TransactionPage from \"../pages/TransactionPage\";\nimport UserPage from \"../pages/UserPage\";\nimport UserSettingPage from \"../pages/UserSettingPage\";\nimport BuyCompletePage from \"../pages/BuyComplete\";\nimport ItemListPage from \"../pages/ItemListPage\";\nimport ItemPageContainer from \"../containers/ItemPageContainer\";\n\ninterface route {\n    [name: string]: {\n        path: string,\n        getPath: (...params: any) => string, // TODO: optionalにしたい\n    }\n}\n\nexport const routes: route = {\n    top: {\n        path: '/',\n        getPath: () => '/',\n    },\n    login: {\n        path: '/login',\n        getPath: () => '/login',\n    },\n    register: {\n        path: '/register',\n        getPath: () => 'register',\n    },\n    sell: {\n        path: '/sell',\n        getPath: () => '/sell',\n    },\n    item: {\n        path: '/items/:item_id',\n        getPath: (itemId: number) => `/items/${itemId}`,\n    },\n    itemEdit: {\n        path: '/items/:item_id/edit',\n        getPath: (itemId: number) => `/items/${itemId}/edit`\n    },\n    buy: {\n        path: '/items/:item_id/buy',\n        getPath: (itemId: number) => `/items${itemId}/buy`,\n    },\n    buyComplete: {\n        path: '/buy/complete',\n        getPath: () => '/buy/complete',\n    },\n    transaction: {\n        path: '/transactions/:transaction_id',\n        getPath: (transactionId: number) => `/transactions/${transactionId}`,\n    },\n    user: {\n        path: '/users/:user_id',\n        getPath: (userId: number) => `/users/${userId}`,\n    },\n    userSetting: {\n        path: '/users/setting',\n        getPath: () => '/users/setting',\n    },\n};\n\nexport const AppRoute: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path={routes.top.path}         component={ItemListPage} />\n            <Route exact path={routes.login.path}       component={SignInPage} />\n            <Route exact path={routes.register.path}    component={SignUpPage}/>\n            <Route exact path={routes.sell.path}        component={SellPage} />\n            <Route exact path={routes.item.path}        component={ItemPageContainer} />\n            <Route exact path={routes.itemEdit.path}    component={ItemEditPage} />\n            <Route exact path={routes.buy.path}         component={ItemBuyPage} />\n            <Route exact path={routes.buyComplete.path} component={BuyCompletePage} />\n            <Route exact path={routes.transaction.path} component={TransactionPage} />\n            <Route exact path={routes.user.path}        component={UserPage} />\n            <Route exact path={routes.userSetting.path} component={UserSettingPage} />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport {AppRoute} from \"./routes/Route\";\n\nconst routes: Array<{\n    path: string,\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        pageName: 'Top page'\n    },\n    {\n        path: '/login',\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/register',\n        pageName: 'Sign up page',\n    },\n    {\n        path: '/items/:item_id',\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/items/:item_id/buy',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/buy/complete',\n        pageName: 'Buying complete page',\n    },\n    {\n        path: '/sell',\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        pageName: 'User page',\n    },\n    {\n        path: '/users/:user_id/setting',\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => any[] = () => {\n    const routeComponents: React.ReactNode[] = []; // TODO\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC = () => {\n    return (\n        <React.Fragment>\n            <div>\n                <ul>\n                    {getLinks()}\n                </ul>\n            </div>\n            <hr />\n            <AppRoute/>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","export default [];","import {LOGIN_SUCCESS} from \"../actions/authenticationActions\";\nimport {REGISTER_SUCCESS} from \"../actions/registerAction\";\nimport {AnyAction} from \"redux\";\n\n\nexport interface AuthStatusState {\n    userId?: number\n    accountName?: string\n    address?: string,\n}\n\nconst authStatus = (state: AuthStatusState = {}, action: AnyAction): AuthStatusState => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default authStatus;","import {LOGIN_FAIL} from \"../actions/authenticationActions\";\nimport { AnyAction } from \"redux\";\nimport {REGISTER_FAIL} from \"../actions/registerAction\";\nimport {SELLING_ITEM_FAIL} from \"../actions/sellingItemAction\";\n\nexport interface FormErrorState {\n    error?: string,\n    buyFormError?: BuyFormErrorState,\n}\n\nexport interface BuyFormErrorState {\n    cardError?: string, // Error from payment service\n    buyError?: string,  // Error from app\n}\n\nconst initialState: FormErrorState = {\n    error: undefined,\n    buyFormError: {},\n};\n\nconst formError = (state: FormErrorState = initialState, action: AnyAction): FormErrorState => {\n    switch (action.type) {\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case SELLING_ITEM_FAIL: {\n            return {\n                ...action.payload,\n            }\n        }\n        default:\n            return initialState;\n    }\n};\n\nexport default formError;","import { AnyAction } from \"redux\";\nimport {ItemData} from \"../dataObjects/item\";\nimport {FETCH_ITEM_START, FETCH_ITEM_FAIL, FETCH_ITEM_SUCCESS} from \"../actions/fetchItemAction\";\n\nexport interface ViewingItemState {\n    item?: ItemData\n    isFetching: boolean\n}\n\nconst initialState: ViewingItemState = {\n    isFetching: false,\n};\n\nconst viewingItem = (state: ViewingItemState = initialState, action: AnyAction): ViewingItemState => {\n    switch (action.type) {\n        case FETCH_ITEM_START:\n            return {...state, isFetching: true};\n        case FETCH_ITEM_SUCCESS:\n        case FETCH_ITEM_FAIL:\n            return {...state, isFetching: false};\n        default:\n            return initialState;\n    }\n};\n\nexport default viewingItem;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { getStore } from \"./configureStore\";\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","import {applyMiddleware, createStore, Reducer, Store} from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n    return createStore(\n        reducer,\n        composeWithDevTools(\n            applyMiddleware(\n                thunk,\n                routerMiddleware(history),\n                ...middlewares,\n            ),\n        ),\n    );\n};\n"],"sourceRoot":""}