{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","actions/settingsAction.ts","components/LoadingComponent.tsx","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","actions/postShippedAction.ts","actions/postShippedDoneAction.ts","actions/postCompleteAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","pages/UserSettingPage.tsx","components/ItemFooterComponent.tsx","pages/ItemPage.tsx","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","components/Transaction/SellerComponent.tsx","containers/SellerTransactionContainer.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","components/Transaction/BuyerComponent.tsx","containers/BuyerTransactionContainer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabelComponent.tsx","reducers/index.ts","components/TransactionComponent.tsx","components/TransactionListComponent.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","baseUrl","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","append","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","status","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","fetchSettingStartAction","fetchSettingsSuccessAction","settings","fetchItemPageFailAction","newError","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","themeInstance","createMuiTheme","background","default","BasePageComponent","alreadyLoaded","load","MuiThemeProvider","Container","maxWidth","loading","components_LoadingComponent","children","page","isLoading","authStatus","checked","Promise","resolve","get","user","numSellItems","num_sell_items","csrfToken","categories","map","category","parentId","parent_id","categoryName","category_name","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","newErrors","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","onImageChange","readAsDataURL","imagePreview","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","selectedCategoryId","_onImageChange","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","image","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","FormData","postFormData","itemId","filter","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemAction","fetchItemStartAction","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","image_url","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","item_id","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","_callee","isMyPage","userDataRes","userData","transactions","transactionRes","regenerator_default","wrap","_context","prev","next","sent","abrupt","stop","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPaggeData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","objectSpread","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","ItemEditPage","LoadingButtonComponent","_onClick","buttonName","react","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","paymentClient","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","token","buyComplete","action","getResponse","usingCardFailAction","buyFailAction","buyFormError","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","UserSettingPage","appBar","buyButton","ItemFooterComponent","buttonText","AppBar","ItemPage","match","onClickBuy","onClickItemEdit","onClickTransaction","viewer","disableButton","_onClickItemEditButton","_onClickTransaction","title","sm","descSection","Divider","divider","categoryTimeline","getPath","link","charAt","components_ItemFooterComponent","marginBottom","textDecoration","isItemLoading","buy","itemEdit","transaction","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","GridListTile","ItemComponent_ItemComponent","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","root","lastItem","loadMoreItems","ItemListComponent_ItemListComponent","SellingButtonContainer","flexWrap","justifyContent","overflow","timeline","isTimelineLoading","Initial","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","SellerComponent","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","postShipped","postComplete","BuyerComponent","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","TransactionPage","TransactionComponent","auth","error_NotFoundPage","error_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","normalLabel","light","soldOutLabel","primary","grey","A100","tradingLabel","history","TransactionLabel","itemStatus","_getLabelByStatus","getLabelByStatus","_getLabelByStatus2","slicedToArray","labelName","card","CardMedia_default","CardContent_default","TransactionLabelComponent_TransactionLabel","TransactionListComponent","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionListComponent_TransactionListComponent","_this$props3","AppBar_default","tab","Tabs_default","Tab_default","list","hidden","_getItemList","_getTransactionsList","text","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","isLoggedIn","rest","objectWithoutProperties","react_router","render","textarea","img","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","category_id","categoryIdIsValid","BuyCompletePage","userSetting","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemPageContainer","BuyCompleteContainer","TransactionPageContainer","UserPageContainer","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","getState","console","group","info","log","groupEnd","initialState","userPayload","LOCATION_CHANGE","location","pathname","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7cb007e0.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n  apiUrl: 'http://localhost:8000', // TODO fix\n  paymentUrl: 'http://localhost:5555',\n};\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import config from '../config';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private baseUrl: string = config.apiUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${this.baseUrl}${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n    requestOption.body = JSON.stringify(params);\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  async postFormData(path: string, body: FormData): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      // MEMO: The reason why we should not set Content-Type header by ourselves\n      // https://stackoverflow.com/questions/39280438/fetch-missing-boundary-in-multipart-form-data-post\n      headers: this.defaultHeaders,\n      credentials: 'same-origin',\n    };\n\n    body.append('csrf_token', await this.getCsrfToken());\n    requestOption.body = body;\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { LoginRes } from '../types/appApiTypes';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'Request for getting settings data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemPageFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemPageFailAction = (\n  newError: FormErrorState,\n): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n  payload: newError,\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { PropsWithChildren } from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\n\nconst themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: 'white',\n    },\n  },\n});\n\nexport type Props = PropsWithChildren<{\n  load: () => void;\n  alreadyLoaded: boolean;\n  loading: boolean;\n}>;\n\nclass BasePageComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    if (!this.props.alreadyLoaded) {\n      this.props.load();\n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\">\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport { BasePageComponent };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { BasePageComponent } from '../components/BasePageComponent';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from '../reducers/authStatusReducer';\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/register', payload)\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction {\n  type: typeof REGISTER_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction {\n  type: typeof REGISTER_FAIL;\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErrors: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErrors,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction, State } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<State, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n  onImageChange: (image: Blob) => void;\n}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n\n      this.props.onImageChange(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  image?: Blob;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onImageChange = this._onImageChange.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId, image } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    if (image === undefined) {\n      this.setState({\n        categoryError: '画像をアップロードしてください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId, image);\n  }\n\n  _onImageChange(image: Blob) {\n    this.setState({\n      image,\n    });\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent onImageChange={this._onImageChange} />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n  image: Blob,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    const body = new FormData();\n    body.append('name', name);\n    body.append('description', description);\n    body.append('price', price.toString());\n    body.append('category_id', categoryId.toString());\n    body.append('image', image);\n    AppClient.postFormData('/sell', body)\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new Error('HTTP status not 200');\n        }\n        return response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.top.path)); // TODO\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction {\n  type: typeof SELLING_ITEM_SUCCESS;\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction {\n  type: typeof SELLING_ITEM_FAIL;\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId, image));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchItemStartAction());\n    })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl: body.image_url,\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemFailAction = (newError: FormErrorState): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ShipReq, ShipRes } from '../types/appApiTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends Action<typeof POST_SHIPPED_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedFailAction(\n  newErrors: FormErrorState,\n): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedDoneFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends Action<typeof POST_SHIPPED_DONE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedDoneFailAction(\n  newErrors: FormErrorState,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { CompleteReq, CompleteRes } from '../types/appApiTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postCompleteFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends Action<typeof POST_COMPLETE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postCompleteFailAction(\n  newErros: FormErrorState,\n): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    payload: newErros,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TransactionItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\ntype Actions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchTransactionsStartAction());\n    })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Transactions not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting transaction list data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTransactionsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTransactionsFailAction = (\n  newErrors: FormErrorState,\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    payload: newErrors,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ItemSimple, UserItemsReq, UserItemsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\ntype Actions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchUserItemsStartAction());\n    })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('UserItems not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting transaction list data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserItemsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserItemsFailAction = (\n  newError: FormErrorState,\n): FetchUserItemsFailAction => {\n  return {\n    type: FETCH_USER_ITEMS_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type Actions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nasync function fetchUserPaggeData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  if (!userDataRes.ok) {\n    throw new AppResponseError(\n      `Fetching data from /users/${userId} was failed`,\n      userDataRes,\n    );\n  }\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    if (!transactionRes.ok) {\n      throw new AppResponseError(\n        `Fetching data from /users/transactions.json was failed`,\n        transactionRes,\n      );\n    }\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchUserPageDataStartAction());\n    })\n      .then(() => {\n        return fetchUserPaggeData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl: item.image_url,\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserPageDataFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserPageDataFailAction = (\n  newError: FormErrorState,\n): FetchUserPageDataFailAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\ntype Actions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchTimelineStartAction());\n    })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting timeline item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTimelineFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTimelineFailAction = (\n  newErrors: FormErrorState,\n): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    payload: newErrors,\n  };\n};\n","import {\n  INTERNAL_SERVER_ERROR,\n  InternalServerErrorAction,\n  NOT_FOUND_ERROR,\n  NotFoundErrorAction,\n} from '../actions/errorAction';\nimport {\n  FETCH_ITEM_FAIL,\n  FetchItemFailAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FetchSettingsFailAction,\n} from '../actions/settingsAction';\nimport {\n  POST_SHIPPED_FAIL,\n  PostShippedFailAction,\n} from '../actions/postShippedAction';\nimport {\n  POST_SHIPPED_DONE_FAIL,\n  PostShippedDoneFailAction,\n} from '../actions/postShippedDoneAction';\nimport {\n  POST_COMPLETE_FAIL,\n  PostCompleteFailAction,\n} from '../actions/postCompleteAction';\nimport {\n  FETCH_TRANSACTIONS_FAIL,\n  FetchTransactionsFailAction,\n} from '../actions/fetchTransactionsAction';\nimport {\n  FETCH_USER_ITEMS_FAIL,\n  FetchUserItemsFailAction,\n} from '../actions/fetchUserItemsAction';\nimport {\n  FETCH_USER_PAGE_DATA_FAIL,\n  FetchUserPageDataFailAction,\n} from '../actions/fetchUserPageDataAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FetchTimelineFailAction,\n} from '../actions/fetchTimelineAction';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\ntype errorActions =\n  | NotFoundErrorAction\n  | InternalServerErrorAction\n  | FetchItemFailAction\n  | FetchTimelineFailAction\n  | FetchTransactionsFailAction\n  | FetchUserItemsFailAction\n  | FetchUserPageDataFailAction\n  | FetchSettingsFailAction\n  | PostShippedFailAction\n  | PostShippedDoneFailAction\n  | PostCompleteFailAction;\n\nconst error = (\n  state: ErrorState = initialState,\n  action: errorActions,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_COMPLETE_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => <div>404 Not Found</div>;\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n  <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport InternalServerErrorPage from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemEditPage: React.FC = () => (\n  <BasePageContainer>\n    <div>Item Edit Page</div>\n  </BasePageContainer>\n);\n\nexport default ItemEditPage;\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    button: {\n      margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button\n          className={classes.button}\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(LoadingButtonComponent);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport LoadingButton from './LoadingButtonComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const {\n      item: { id },\n    } = this.props;\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors.cardError;\n    const appError = errors.buyError;\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseUrl: string = config.paymentUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string): Promise<Response> {\n    return await fetch(`${this.baseUrl}${path}`, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n}\n\nexport default new PaymentClient();\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { Action, AnyAction } from 'redux';\nimport { BuyReq } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch((err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            return res.json().then((body: any) => {\n              if (body && body.error) {\n                dispatch(action(body.error));\n                return;\n              }\n\n              dispatch(action(err.message));\n            });\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\n\nconst mapStateToProps = (state: any) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemBuyPage: React.FC = () => {\n  return (\n    <BasePageContainer>\n      <ItemBuyFormContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default ItemBuyPage;\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst UserSettingPage: React.FC = () => (\n  <BasePageContainer>User setting Page</BasePageContainer>\n);\n\nexport default UserSettingPage;\n","import { AppBar } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  onClick: (e: React.MouseEvent) => void;\n  buttonText: string;\n  disabled: boolean;\n};\n\nconst ItemFooterComponent: React.FC<Props> = ({\n  price,\n  onClick,\n  buttonText,\n  disabled,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            className={classes.buyButton}\n            onClick={onClick}\n            disabled={disabled}\n          >\n            {buttonText}\n          </Button>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default ItemFooterComponent;\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport ItemFooterComponent from '../components/ItemFooterComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let onClick: (e: React.MouseEvent) => void = this._onClickBuyButton;\n    let buttonText: string = '購入';\n    let disableButton: boolean = false;\n\n    // 自分の商品で出品中なら編集画面へ遷移\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      onClick = this._onClickItemEditButton;\n      buttonText = '商品編集';\n    }\n\n    // 出品者 or 購入者で取引中なら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      item.status === 'trading'\n    ) {\n      onClick = this._onClickTransaction;\n      buttonText = '取引画面';\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      onClick = (e: React.MouseEvent) => {};\n      buttonText = '売り切れ';\n      disableButton = true;\n    }\n\n    return (\n      <BasePageContainer>\n        Item Page\n        <Typography className={classes.title} variant=\"h3\">\n          {item.name}\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            <img\n              className={classes.itemImage}\n              alt={item.name}\n              src={item.thumbnailUrl}\n            />\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">商品説明</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">{item.description}</Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">カテゴリ</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">\n                    <Link\n                      to={routes.categoryTimeline.getPath(\n                        item.category.parentId,\n                      )}\n                    >\n                      {item.category.parentCategoryName}\n                    </Link>{' '}\n                    > {item.category.categoryName}\n                  </Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">出品者</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    wrap=\"nowrap\"\n                    spacing={2}\n                  >\n                    <Grid item>\n                      <RouteLink\n                        className={classes.link}\n                        to={routes.user.getPath(item.sellerId)}\n                      >\n                        <Avatar className={classes.avatar}>\n                          {item.seller.accountName.charAt(0)}\n                        </Avatar>\n                      </RouteLink>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography variant=\"body1\">\n                        {item.seller.accountName}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <ItemFooterComponent\n          price={item.price}\n          onClick={onClick}\n          buttonText={buttonText}\n          disabled={disableButton}\n        />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\n\nconst useStyles = makeStyles(theme => ({\n  itemImage: {\n    height: '100%',\n  },\n}));\n\ninterface ItemComponentProps {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n  itemId,\n  imageUrl,\n  title,\n  price,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <RouteLink to={routes.item.getPath(itemId)}>\n        <img className={classes.itemImage} src={imageUrl} alt={title} />\n      </RouteLink>\n      <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n    </Card>\n  );\n};\n\nexport { ItemComponent };\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '300px',\n    height: '300px',\n  },\n}));\n\ninterface ItemListPageProps {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = function({\n  items,\n  hasNext,\n  loadMore,\n}: ItemListPageProps) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <ItemComponent\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={3}>{itemComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemListComponent };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"secondary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemListComponent\n            items={items}\n            loadMore={loadMoreItems}\n            hasNext={hasNext}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">\n        購入者が発送予約をするまでお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">購入者の発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">\n        配達員にこちらのQRコードを見せて発送した後、下記の発送完了を押してください\n      </Typography>\n      <img src={qrCodeUrl} alt=\"QRコード\" />\n      <Button onClick={onClick}>発送完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Seller/Initial';\nimport WaitShipping from './Seller/WaitShipping';\nimport WaitDone from './Seller/WaitDone';\nimport Done from './Seller/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst SellerComponent: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport default SellerComponent;\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport SellerComponent from '../components/Transaction/SellerComponent';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellerComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">発送予約の手続きをしてください</Typography>\n      <Button onClick={onClick}>発送予約</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">出品者からの発送をお待ちください</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、受取完了ボタンを押してください\n      </Typography>\n      <Button onClick={onClick}>受取完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Buyer/Initial';\nimport WaitShipping from './Buyer/WaitShipping';\nimport WaitDone from './Buyer/WaitDone';\nimport Done from './Buyer/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst BuyerComponent: React.FC<Props> = ({\n  itemId,\n  postShipped,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport default BuyerComponent;\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport BuyerComponent from '../components/Transaction/BuyerComponent';\nimport { postShippedAction } from '../actions/postShippedAction';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyerComponent);\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport NotFoundPage from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\n\ntype Props = {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n} & RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        // TODO: pass error message\n        <InternalServerErrorPage />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage />;\n    }\n\n    return <BasePageContainer>{TransactionComponent}</BasePageContainer>;\n  }\n}\n\nexport default PageComponentWithError<Props>()(TransactionPage);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport { ItemStatus } from '../dataObjects/item';\n\nconst useStyles = makeStyles(theme => ({\n  normalLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.secondary.light,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  soldOutLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.grey.A100,\n  },\n  tradingLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\ntype Props = {\n  itemStatus: ItemStatus;\n};\n\nfunction getLabelByStatus(\n  status: ItemStatus,\n): [string, 'normalLabel' | 'soldOutLabel' | 'tradingLabel'] {\n  switch (status) {\n    case 'on_sale':\n      return ['出品中', 'normalLabel'];\n    case 'trading':\n      return ['取引中', 'tradingLabel'];\n    case 'sold_out':\n      return ['売却済', 'soldOutLabel'];\n    case 'stop':\n      return ['出品停止中', 'normalLabel'];\n    case 'cancel':\n      return ['キャンセル', 'normalLabel'];\n  }\n}\n\nconst TransactionLabel: React.FC<Props> = ({ itemStatus }) => {\n  const classes = useStyles();\n  const [labelName, classKey] = getLabelByStatus(itemStatus);\n  const className = classes[classKey];\n\n  return <Paper className={className}>{labelName}</Paper>;\n};\n\nexport { TransactionLabel };\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\nimport { TransactionItem } from '../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from './TransactionLabelComponent';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: 'flex',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={routes.transaction.getPath(item.id)}>\n        <Card>\n          <CardMedia image={item.thumbnailUrl} title={item.name} />\n          <CardContent>\n            <Typography>{item.name}</Typography>\n            <TransactionLabel itemStatus={item.status} />\n          </CardContent>\n        </Card>\n      </RouteLink>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from './TransactionComponent';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionListComponent: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1}>{transactionsComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionListComponent };\n","import React, { ReactElement } from 'react';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionListComponent } from '../components/TransactionListComponent';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n  private readonly isMyPage: boolean;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    this.isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, this.isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemListComponent\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionListComponent\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { loading, user, classes } = this.props;\n    const { tabValue } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <AppBar className={classes.tab}>\n          <Tabs value={tabValue} onChange={this._handleChange}>\n            <Tab label=\"出品商品\" id=\"tab--item-list\" />\n            {this.isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n          </Tabs>\n        </AppBar>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {this.isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\n\ntype Props = {\n  isLoggedIn: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\n\ntype Props = {\n  isLoggedIn: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">ついにリリース！</Typography>\n          <Typography variant=\"h6\">\n            椅子限定C2CのECサービス カードで簡単決済。\n          </Typography>\n          <Typography variant=\"h6\">\n            もちろんセキュリティも万全。 お互いの住所を知らなくても配送可能。\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  categoryIdIsValid: boolean;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      categoryIdIsValid,\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      items,\n      categoryId,\n      categoryName,\n      loadMore,\n      hasNext,\n    } = this.props;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{categoryName}の新着商品</Typography>\n          <ItemListComponent\n            items={items}\n            hasNext={hasNext}\n            loadMore={loadMoreItems}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemEditPage from '../pages/ItemEditPage';\nimport ItemBuyPage from '../pages/ItemBuyPage';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />\n      <AuthRoute exact path={routes.itemEdit.path} component={ItemEditPage} />\n      <AuthRoute exact path={routes.buy.path} component={ItemBuyPage} />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst routes: Array<{\n  path: string;\n  pageName: string;\n}> = [\n  {\n    path: '/',\n    pageName: 'Top page',\n  },\n  {\n    path: '/login',\n    pageName: 'Sign in page',\n  },\n  {\n    path: '/register',\n    pageName: 'Sign up page',\n  },\n  {\n    path: '/timeline',\n    pageName: 'Timeline page',\n  },\n  {\n    path: '/items/:item_id/edit',\n    pageName: 'Item edit page',\n  },\n  {\n    path: '/users/:user_id',\n    pageName: 'User page',\n  },\n  {\n    path: '/users/setting',\n    pageName: 'User setting page',\n  },\n];\n\nconst getLinks: () => React.ReactNode[] = () => {\n  const routeComponents: React.ReactNode[] = [];\n\n  for (const route of routes) {\n    routeComponents.push(\n      <li key={route.pageName}>\n        <Link to={route.path}>{route.pageName}</Link>\n      </li>,\n    );\n  }\n\n  return routeComponents;\n};\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <div>\n      <ul>{getLinks()}</ul>\n    </div>\n    <hr />\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport { Middleware } from 'redux';\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;\n","import { AnyAction, Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<AnyAction>) => (\n  action: any,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import {\n  LOGIN_SUCCESS,\n  LoginSuccessAction,\n} from '../actions/authenticationActions';\nimport {\n  REGISTER_SUCCESS,\n  RegisterSuccessAction,\n} from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\ntype Actions =\n  | LoginSuccessAction\n  | RegisterSuccessAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: Actions,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { AnyAction } from 'redux';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: AnyAction,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { AnyAction } from 'redux';\nimport { ItemData } from '../dataObjects/item';\nimport {\n  FETCH_ITEM_SUCCESS,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\ntype actions = AnyAction | FetchItemSuccessAction;\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: actions,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { AnyAction } from 'redux';\nimport { UserData } from '../dataObjects/user';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\ntype actions = FetchUserPageDataSuccessAction | AnyAction;\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: actions,\n): ViewingUserState => {\n  switch (action.type) {\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import { AnyAction } from 'redux';\nimport {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n  FetchItemFailAction,\n  FetchItemStartAction,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsStartAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_START,\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineFailAction,\n  FetchTimelineStartAction,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport {\n  Actions as FetchUserPageActions,\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\n\ntype Actions =\n  | LocationChangeAction\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction\n  | FetchUserPageActions\n  | AnyAction;\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (state: PageState = initialState, action: Actions): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_START:\n      return { ...state, isTimelineLoading: true };\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case LOCATION_CHANGE:\n      const {\n        payload: {\n          location: { pathname },\n        },\n      } = action as LocationChangeAction; // TODO なんでasつけないと動かないん？\n\n      switch (pathname) {\n        case routes.timeline.path:\n          // TODO カテゴリ新着, ユーザページのチェックもここに入る\n          return { ...state, isTimelineLoading: true };\n        default:\n          return { ...state };\n      }\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { AnyAction } from 'redux';\nimport {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: AnyAction,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { AnyAction } from 'redux';\nimport { CategorySimple } from '../dataObjects/category';\nimport {\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\ntype Actions = FetchSettingsSuccessAction | AnyAction;\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: Actions,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions = FetchTimelineSuccessAction | AnyAction;\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: Actions,\n): TimelineState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import { AnyAction } from 'redux';\nimport { TransactionItem } from '../dataObjects/item';\nimport {\n  FETCH_TRANSACTIONS_SUCCESS,\n  FetchTransactionsSuccessAction,\n} from '../actions/fetchTransactionsAction';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions =\n  | FetchTransactionsSuccessAction\n  | LocationChangeAction\n  | FetchUserPageDataSuccessAction\n  | AnyAction;\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: Actions,\n): TransactionsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_USER_ITEMS_SUCCESS,\n  FetchUserItemsSuccessAction,\n} from '../actions/fetchUserItemsAction';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions =\n  | FetchUserItemsSuccessAction\n  | FetchUserPageDataSuccessAction\n  | LocationChangeAction\n  | AnyAction;\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: Actions,\n): UserItemsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middlewares),\n    ),\n  );\n};\n"],"sourceRoot":""}