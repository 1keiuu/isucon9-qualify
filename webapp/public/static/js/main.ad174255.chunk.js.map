{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","reducers/index.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","pages/ItemListPage.tsx","pages/ItemPage.tsx","components/ItemImageUploadComponent.tsx","pages/SellPage.tsx","pages/UserPage.tsx","components/BasePageComponent.tsx","App.tsx","pages/TopPage.tsx","pages/ItemEditPage.tsx","pages/TransactionPage.tsx","pages/UserSettingPage.tsx","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","index.tsx"],"names":["ErrorMessageComponent","_ref","errMsg","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","error","value","push","react_default","a","createElement","Grid_default","item","xs","Typography_default","key","variant","color","err","return","container","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","userId","password","_onSubmit","bind","assertThisInitialized","_onChangeUserId","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","form","noValidate","TextField","margin","required","fullWidth","id","label","name","autoFocus","onChange","type","autoComplete","length","ErrorMessageComponent_ErrorMessageComponent","Button","onClick","submit","Grid","react_router_dom","to","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","appClient","baseUrl","defaultHeaders","path","fetch","concat","method","headers","params","requestOption","mode","assign","Content-Type","body","JSON","stringify","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","accountName","dispatch","AppClient","post","account_name","then","response","status","Error","json","newAuthState","address","payload","catch","newErros","errorMsg","message","SignInFormContainer","SignInFormComponent","connect","formError","useStyles","makeStyles","SignUpFormComponent","_onChangeAccountName","_onChangeAddress","register","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","history","SignUpFormContainer","components_SignUpFormComponent","itemImage","height","ItemComponent","itemId","imageUrl","title","price","Card","src","alt","GridListTileBar","subtitle","grid","ItemListComponent","items","itemComponents","GridListTile","ItemComponent_ItemComponent","thumbnailUrl","GridList","cols","root","flexWrap","justifyContent","overflow","mockItems","description","createdAt","maxWidth","divider","descSection","marginBottom","link","textDecoration","appBar","top","bottom","buyButton","mockItem","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","Paper_default","Avatar_default","Camera","direction","justify","accept","upload","htmlFor","Button_default","button","itemList","mockUser","themeInstance","createMuiTheme","background","default","BasePageComponent","children","MuiThemeProvider","Container","routes","pageName","containers_SignInFormContainer","containers_SignUpFormContainer","ItemListComponent_ItemListComponent","sm","Divider","wrap","AppBar","position","components_ItemImageUploadComponent","multiline","user","charAt","App","routeComponents","_i","_routes","route","getLinks","react_router","_loop","_routes2","_i2","exact","BasePageComponent_BasePageComponent","getRoutes","authStatus","arguments","action","objectSpread","initialState","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.ad174255.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\n\ninterface ErrorMessageComponentProps {\n    errMsg: string[]\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({ errMsg }) => {\n    const errors = [];\n\n    for (const error of errMsg) {\n        errors.push(\n            <Grid item xs>\n                <Typography\n                    key={error}\n                    variant=\"body2\"\n                    color=\"error\"\n                >\n                    {error}\n                </Typography>\n            </Grid>\n        )\n    }\n\n    return (\n        <Grid container>\n            {errors}\n        </Grid>\n    );\n};\n\nexport { ErrorMessageComponent }","import React from 'react';\n\nimport {Avatar, Typography, TextField, Button, Grid, createStyles, WithStyles} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n    onSubmit: (userId: string, password: string) => void\n    errors: string[]\n}\n\ninterface SignInFormComponentState {\n    userId: string,\n    password: string,\n}\n\nclass SignInPageFormComponent extends React.Component<SignInFormComponentProps, SignInFormComponentState> {\n    constructor(props: SignInFormComponentProps) {\n        super(props);\n\n        this.state = {\n            userId: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeUserId = this._onChangeUserId.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { userId, password } = this.state;\n        this.props.onSubmit(userId, password);\n    }\n\n    _onChangeUserId(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            userId: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { userId, password } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    ログインページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"id\"\n                        label=\"ログインID\"\n                        name=\"id\"\n                        autoFocus\n                        value={userId}\n                        onChange={this._onChangeUserId}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onSubmit}\n                        className={classes.submit}\n                    >\n                        ログイン\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to=\"/signup\">新規登録はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n}","import config from '../config';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n    private baseUrl: string = config.apiUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'same-origin',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n        };\n\n        if (params) {\n            const body = JSON.stringify(params);\n            requestOption.body = body;\n        }\n\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new AppClient();","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postLoginAction(accountName: string, password: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/login', {\n            account_name: accountName,\n            password: password,\n        })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body) => {\n                dispatch(loginSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push('/items'))\n            })\n            .catch((err: Error) => {\n                dispatch(loginFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface LoginSuccessAction {\n    type: typeof LOGIN_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function loginSuccessAction(newAuthState: AuthStatusState): LoginSuccessAction {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface LoginFailAction {\n    type: typeof LOGIN_FAIL,\n    payload: FormErrorState,\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n    return {\n        type: LOGIN_FAIL,\n        payload: newErros,\n    };\n}\n","import React from 'react';\nimport SignInPageFormComponent from \"../components/SignInFormComponent\";\nimport { connect } from 'react-redux';\nimport { postLoginAction } from \"../actions/authenticationActions\";\n\ninterface SignInFormContainerProps {\n    onSubmit: (userId: string, password: string) => void\n    errors: string[],\n}\n\ninterface SignInFormContainerState {\n}\n\nclass SignInFormContainer extends React.Component<SignInFormContainerProps, SignInFormContainerState> {\n    render() {\n        return (\n            <SignInPageFormComponent\n                {...this.props}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSubmit: (userId: string, password: string) => {\n        dispatch(postLoginAction(userId, password));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInFormContainer)","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from \"../containers/SignInFormContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignInPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignInFormContainer />\n        </div>\n    );\n};\n\nexport { SignInPage }","import React from 'react';\nimport {Avatar, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {RegisterReqParams} from \"../types/appApiTypes\";\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n    register: (params: RegisterReqParams) => void\n    errors: string[]\n}\n\ninterface SignUpFormComponentState {\n    accountName: string,\n    address: string,\n    password: string,\n}\n\nclass SignUpFormComponent extends React.Component<SignUpFormComponentProps, SignUpFormComponentState> {\n    constructor(props: SignUpFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            address: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangeAddress = this._onChangeAddress.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.register(this.state);\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { accountName, address, password } = this.state;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    新規登録\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"ユーザ名\"\n                        name=\"name\"\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"address\"\n                        label=\"住所\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this._onChangeAddress}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        新規登録\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to=\"/signin\">すでにアカウントをお持ちの方はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {RegisterReqParams, RegisterResParams} from \"../types/appApiTypes\";\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postRegisterAction(payload: RegisterReqParams): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/register', payload)\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: RegisterResParams) => {\n                dispatch(registerSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push('/items'))\n            })\n            .catch((err: Error) => {\n                dispatch(registerFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface RegisterSuccessAction {\n    type: typeof REGISTER_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function registerSuccessAction(newAuthState: AuthStatusState): RegisterSuccessAction {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface RegisterFailAction {\n    type: typeof REGISTER_FAIL,\n    payload: FormErrorState,\n}\n\nexport function registerFailAction(newErros: FormErrorState): RegisterFailAction {\n    return {\n        type: REGISTER_FAIL,\n        payload: newErros,\n    };\n}\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) => combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n});\n","import React from 'react';\nimport SignUpPageFormComponent from \"../components/SignUpFormComponent\";\nimport { connect } from 'react-redux';\nimport {postRegisterAction} from \"../actions/registerAction\";\nimport {RegisterReqParams} from \"../types/appApiTypes\";\n\ninterface SignUpFormContainerProps {\n    register: (params: RegisterReqParams) => void\n    errors: string[],\n}\n\ninterface SignUpFormContainerState {\n}\n\nclass SignUpFormContainer extends React.Component<SignUpFormContainerProps, SignUpFormContainerState> {\n    render() {\n        return (\n            <SignUpPageFormComponent\n                {...this.props}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    register: (params: RegisterReqParams) => {\n        dispatch(postRegisterAction(params));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpFormContainer)","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SignUpFormContainer from \"../containers/SignUpFormContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignUpPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignUpFormContainer />\n        </div>\n    );\n};\n\nexport { SignUpPage }","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link as RouteLink } from 'react-router-dom'\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n    itemImage: {\n        height: '100%',\n    },\n}));\n\ninterface ItemComponentProps {\n    itemId: number\n    imageUrl: string\n    title: string\n    price: number\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n    itemId, imageUrl, title, price\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <RouteLink to={`/items/${itemId}`}>\n                <img className={classes.itemImage} src={imageUrl} alt={title}/>\n            </RouteLink>\n            <GridListTileBar\n                title={title}\n                subtitle={`¥${price}`}\n            />\n        </Card>\n    );\n};\n\nexport { ItemComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        width: '300px',\n        height: '300px',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    const itemComponents = [];\n\n    for (const item of items) {\n        itemComponents.push(\n            <GridListTile className={classes.grid} key={item.id}>\n                <ItemComponent itemId={item.id} imageUrl={item.thumbnailUrl} title={item.name} price={item.price}/>\n            </GridListTile>\n        )\n    }\n\n    return (\n        <GridList cols={3}>\n            {itemComponents}\n        </GridList>\n    );\n};\n\nexport { ItemListComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ItemListComponent } from '../components/ItemListComponent';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(1),\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst ItemListPage: React.FC/*<ItemListPageProps>*/ = (/*{ items }: ItemListPageProps*/) => {\n    const classes = useStyles();\n    const items = mockItems;\n\n    return (\n        <div className={classes.root}>\n            <ItemListComponent items={items}/>\n        </div>\n    );\n};\n\nexport { ItemListPage }","import React from 'react';\nimport { ItemData } from \"../dataObjects/item\";\nimport {Typography} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        margin: theme.spacing(3),\n    },\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n    },\n    avatar: {\n        width: '50px',\n        height: '50px',\n    },\n    divider: {\n        margin: theme.spacing(1),\n    },\n    descSection: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    buyButton: {\n        margin: theme.spacing(1),\n    }\n}));\n\ninterface ItemPageProps {\n    item: ItemData\n}\n\nconst mockItem = {\n    id: 1,\n    name: 'いす',\n    price: 10000,\n    description: 'いすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすです',\n    createdAt: '2日前',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n};\n\nconst ItemPage: React.FC/*<ItemPageProps>*/ = (/*{ item }*/) => {\n    const classes = useStyles();\n\n    const item = mockItem;\n\n    return (\n        <div>\n            Item Page\n            <Typography className={classes.title} variant=\"h3\">{item.name}</Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl} />\n                </Grid>\n                <Grid item xs={12} sm container>\n                    <Grid item xs container direction=\"column\" spacing={2}>\n                        <Grid item xs>\n                            <div className={classes.descSection}>\n                                <Typography variant=\"h4\">商品説明</Typography>\n                                <Divider className={classes.divider} variant=\"middle\" />\n                                <Typography variant=\"body1\">{item.description}</Typography>\n                            </div>\n\n                            <div className={classes.descSection}>\n                                <Typography variant=\"h4\">出品者</Typography>\n                                <Divider className={classes.divider} variant=\"middle\" />\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    wrap=\"nowrap\"\n                                    spacing={2}\n                                >\n                                    <Grid item>\n                                        <RouteLink className={classes.link} to={`/users/${1}`}>\n                                            <Avatar className={classes.avatar}>\"T\"</Avatar>\n                                        </RouteLink>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\">\"TODO\"</Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\">¥{item.price}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"contained\" className={classes.buyButton}>購入</Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n        </div>\n    );\n};\n\nexport { ItemPage }","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport { Camera } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    upload: {\n        display: 'none',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n}\n\ninterface ItemImageUploadComponentState {\n    file?: File,\n    imagePreviewUrl: string,\n}\n\nclass ItemImageUploadComponent extends React.Component<ItemImageUploadComponentProps, ItemImageUploadComponentState> {\n    constructor(props: ItemImageUploadComponentProps) {\n        super(props);\n\n        this.state = {\n            imagePreviewUrl: ''\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (e.target.files === null) {\n            return;\n        }\n\n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if (typeof reader.result !== 'string') {\n                throw new Error();\n            }\n\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { imagePreviewUrl } = this.state;\n        let imagePreview = null;\n        console.log(imagePreviewUrl);\n\n        if (imagePreviewUrl) {\n            imagePreview = (<img alt=\"プレビュー\" src={imagePreviewUrl} />);\n        } else {\n            imagePreview = (\n                <Paper>\n                    <Avatar className={classes.avatar}>\n                        <Camera />\n                    </Avatar>\n                    <Typography>商品画像</Typography>\n                </Paper>\n            )\n        }\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={8}>\n                    {imagePreview}\n                </Grid>\n                <Grid item xs={4}>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.upload}\n                        id=\"outlined-button-file\"\n                        type=\"file\"\n                        onChange={this._handleImageChange}\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                            Upload\n                        </Button>\n                    </label>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\n\nimport { Typography, TextField, Button, makeStyles } from '@material-ui/core';\nimport ItemImageUploadComponent from \"../components/ItemImageUploadComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SellPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <Typography component=\"h1\" variant=\"h5\">\n                出品ページ\n            </Typography>\n            <form className={classes.form} noValidate>\n                <ItemImageUploadComponent />\n\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"name\"\n                    label=\"商品名\"\n                    name=\"name\"\n                    autoFocus\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"description\"\n                    label=\"商品説明\"\n                    name=\"name\"\n                    multiline\n                />\n                <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"price\"\n                    label=\"値段\"\n                    name=\"price\"\n                />\n                <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    出品する\n                </Button>\n            </form>\n        </div>\n    );\n};\n\nexport { SellPage }\n","import React from 'react';\nimport { ItemListComponent } from \"../components/ItemListComponent\";\nimport { ItemData } from \"../dataObjects/item\";\nimport { UserData } from \"../dataObjects/user\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles(theme => ({\n    avatar: {\n        margin: theme.spacing(3),\n        width: '100px',\n        height: '100px',\n    },\n    itemList: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\ninterface UserPageProps {\n    items: ItemData[]\n    user: UserData\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n};\n\nconst UserPage: React.FC/*<UserPageProps>*/ = (/*{ items, user }*/) => {\n    const classes = useStyles();\n    const user = mockUser;\n    const items = mockItems;\n\n    return (\n        <div>\n            <p>User Page</p>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={2}\n            >\n                <Grid item>\n                    <Avatar className={classes.avatar}>{user.accountName.charAt(0)}</Avatar>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h3\">{user.accountName}</Typography>\n                </Grid>\n            </Grid>\n            <Divider variant=\"middle\" />\n            <div className={classes.itemList}>\n                <ItemListComponent items={items}/>\n            </div>\n        </div>\n    );\n};\n\nexport { UserPage }","import React from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\n\nconst themeInstance = createMuiTheme({\n    palette: {\n        background: {\n            default: 'white'\n        },\n    },\n});\n\nconst BasePageComponent: React.FC = ({children}) => (\n    <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\" children={children} />\n    </MuiThemeProvider>\n);\n\nexport { BasePageComponent }","import React from 'react';\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\n\nimport './App.css';\nimport { TopPage } from \"./pages/TopPage\";\nimport { SignInPage } from \"./pages/SignInPage\";\nimport { SignUpPage } from \"./pages/SignUpPage\";\nimport { ItemListPage } from \"./pages/ItemListPage\";\nimport { ItemPage } from \"./pages/ItemPage\";\nimport { ItemEditPage } from \"./pages/ItemEditPage\";\nimport { SellPage } from \"./pages/SellPage\";\nimport { TransactionPage } from \"./pages/TransactionPage\";\nimport { UserPage } from \"./pages/UserPage\";\nimport { UserSettingPage } from \"./pages/UserSettingPage\";\nimport { BasePageComponent } from \"./components/BasePageComponent\";\n\nconst routes: Array<{\n    path: string,\n    component: any, // todo\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        component: TopPage,\n        pageName: 'Top page'\n    },\n    {\n        path: '/signin',\n        component: SignInPage,\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/signup',\n        component: SignUpPage,\n        pageName: 'Sign up page',\n    }, {\n        path: '/items',\n        component: ItemListPage,\n        pageName: 'Item list page',\n    },\n    {\n        path: '/items/:item_id',\n        component: ItemPage,\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        component: ItemEditPage,\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/sell',\n        component: SellPage,\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        component: TransactionPage,\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        component: UserPage,\n        pageName: 'User page',\n    },\n    {\n        path: '/users/:user_id/setting',\n        component: UserSettingPage,\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => any[] = () => {\n    const routeComponents: any[] = []; // TODO\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst getRoutes: () => any[] = () => {\n    const routeComponents: any[] = []; // TODO\n\n    for (const route of routes) {\n        const component: React.FC = () => (\n            <BasePageComponent>\n                {route.component()}\n            </BasePageComponent>\n        );\n        routeComponents.push(\n            <Route exact path={route.path} component={component} />\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC = () => {\n    return (\n        <div>\n            <div>\n                <ul>\n                    {getLinks()}\n                </ul>\n            </div>\n\n            <hr />\n\n            <Switch>\n                {getRoutes()}\n            </Switch>\n        </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst TopPage: React.FC = () => (\n    <div>Top Page</div>\n);\n\nexport { TopPage }","import React from 'react';\n\nconst ItemEditPage: React.FC = () => (\n    <div>Item Edit Page</div>\n);\n\nexport { ItemEditPage }","import React from 'react';\n\nconst TransactionPage: React.FC = () => (\n    <div>Transaction Page</div>\n);\n\nexport { TransactionPage }","import React from 'react';\n\nconst UserSettingPage: React.FC = () => (\n    <div>User setting Page</div>\n);\n\nexport { UserSettingPage }","import { LOGIN_SUCCESS, LoginSuccessAction } from \"../actions/authenticationActions\";\n\n\nexport interface AuthStatusState {\n    userId?: number\n    accountName?: string\n    address?: string,\n}\n\nconst authStatus = (state: AuthStatusState = {}, action: LoginSuccessAction): AuthStatusState => {\n    switch (action.type) {\n        case LOGIN_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default authStatus;","import {LOGIN_FAIL, LOGIN_SUCCESS} from \"../actions/authenticationActions\";\nimport { AnyAction } from \"redux\";\n\n\nexport interface FormErrorState {\n    errorMsg: string[],\n}\n\nconst initialState: FormErrorState = {\n    errorMsg: []\n};\n\nconst formError = (state: FormErrorState = initialState, action: AnyAction): FormErrorState => {\n    switch (action.type) {\n        case LOGIN_FAIL: {\n            return {\n                ...action.payload,\n            }\n        }\n        default:\n            return initialState;\n    }\n};\n\nexport default formError;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport createRootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n    createRootReducer(history),\n    composeWithDevTools(\n        applyMiddleware(\n            thunk,\n            routerMiddleware(history),\n        ),\n    ),\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}