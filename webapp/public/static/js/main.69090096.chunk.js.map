{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","theme.ts","components/LoadingComponent.tsx","components/Header/Header.tsx","containers/HeaderContainer.tsx","components/SnackBar.tsx","containers/SnackBarContainer.tsx","actions/snackBarAction.ts","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","httpClients/paymentClient.ts","actions/settingsAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage/NotFoundPage.tsx","pages/error/InternalServerErrorPage/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","components/ItemFooter/ItemFooter.tsx","components/ItemImage/ItemImage.tsx","pages/ItemPage.tsx","actions/postBumpAction.ts","containers/ItemPageContainer.tsx","components/Item/Item.tsx","components/ItemList/ItemList.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","actions/postShippedDoneAction.ts","actions/postShippedAction.ts","containers/SellerTransactionContainer.tsx","components/TransactionSeller/TransactionSeller.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","actions/postCompleteAction.ts","containers/BuyerTransactionContainer.tsx","components/TransactionBuyer/TransactionBuyer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabel/TransactionLabel.tsx","components/TransactionComponent/TransactionComponent.tsx","components/TransactionListComponent.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","pages/UserSettingPage.tsx","containers/UserSettingPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","actions/postItemEditAction.ts","pages/ItemEditPage.tsx","containers/ItemEditPageContainer.tsx","components/LoadingButton/LoadingButton.tsx","components/ItemBuyFormComponent.tsx","errors/PaymentResponseError.ts","config.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","containers/ItemBuyPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","middlewares/checkLocationChange.ts","actions/locationChangeAction.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/snackBarReducer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","reducers/index.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","csrfCheckRequired","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","append","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","asyncToGenerator","regenerator_default","mark","_callee","errRes","wrap","_context","prev","next","status","sent","abrupt","stop","_x","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","themeInstance","createMuiTheme","background","default","primary","contrastText","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","MuiThemeProvider","CircularProgress","size","appBar","text","fontWeight","typography","fontWeightBold","textAlign","list","nested","paddingLeft","isLoggedIn","authStatus","ownUserId","categories","filter","category","parentId","goToTopPage","timeline","goToUserPage","user","getPath","goToSettingPage","userSetting","goToCategoryItemList","categoryId","categoryTimeline","_React$useState","open","categoryExpanded","_React$useState2","slicedToArray","toggleDrawer","event","_objectSpread","react","Drawer","onClose","List","ListItem","button","ListItemIcon","NewReleases_default","ListItemText","Weekend_default","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","map","EventSeat_default","categoryName","Person_default","Settings_default","AppBar","Toolbar","IconButton","edge","Menu_default","noWrap","close","padding","snackBar","available","reason","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","aria-label","Close_default","BasePageComponent","Container","maxWidth","HeaderContainer","loading","components_LoadingComponent","children","SnackBarContainer","paddingTop","page","isLoading","alreadyLoaded","checked","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","numSellItems","num_sell_items","newErrors","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","onImageChange","readAsDataURL","imagePreview","alt","src","Paper_default","imagePreviewSpace","Avatar_default","Camera","Typography_default","imagePreviewText","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","CloudUpload_default","icon","justifyContent","height","maxHeight","marginLeft","SellFormComponent","description","price","selectedCategoryId","_onImageChange","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","image","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","Fragment","title","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","marginBottom","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","FormData","postFormData","itemId","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","notFoundError","NotFoundError","fetchItemAction","Promise","resolve","fetchItemStartAction","get","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","image_url","parent_id","category_name","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","newError","paymentClient","baseURL","fetchSettings","fetchSettingStartAction","fetchSettingsSuccessAction","csrfToken","PaymentClient","setBaseURL","payment_service_url","fetchItemPageFailAction","settings","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","isMyPage","userDataRes","userData","transactions","transactionRes","_errRes","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPageData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","fetchUserPageDataAction_objectSpread","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","item_id","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","img","link","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","buyButton","ItemFooter","buttons","disabled","buttonText","ItemImage","imageUrl","isSoldOut","card","itemImage","soldOut","zIndex","borderStyle","borderWidth","borderColor","soldOutText","transform","getUserStyles","Card","ItemPage","load","match","_onClickBuyButton","_onClickItemEditButton","_onClickBumpButton","_onClickTransaction","onClickBuy","onClickItemEdit","onClickBump","onClickTransaction","viewer","root","ItemImage_ItemImage","sm","descSection","Divider","divider","charAt","ItemFooter_ItemFooter","textDecoration","POST_BUMP_START","POST_BUMP_SUCCESS","POST_BUMP_FAIL","postBumpAction","snackBarMessage","isItemLoading","viewingItem","buy","itemEdit","transaction","Item","GridListTile","GridListTileBar","subtitle","gridList","flexWrap","grid","ItemList","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","Item_Item","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cellHeight","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","SellingButtonContainer","lastItem","loadMoreItems","ItemList_ItemList","overflow","isTimelineLoading","Initial","postShipped","qrCode","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","postComplete","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","TransactionPage","TransactionComponent","auth","NotFoundPage_NotFoundPage","InternalServerErrorPage_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","normalLabel","soldOutLabel","grey","A100","tradingLabel","TransactionLabel","itemStatus","_getLabelByStatus","getLabelByStatus","_getLabelByStatus2","labelName","detail","itemTitle","paddingBottom","CardMedia_default","CardContent_default","TransactionLabel_TransactionLabel","TransactionListComponent","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","currentPageUserId","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionListComponent_TransactionListComponent","_this$props3","Tabs_default","Tab_default","hidden","_getItemList","_getTransactionsList","nextProps","prevState","nextLoading","nextPageUserId","nextIsMyPage","UserPage_objectSpread","tab","light","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","UserSettingPage","rest","objectWithoutProperties","react_router","render","textarea","checklist","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","category_id","categoryIdIsValid","currentCategoryId","nextCategoryId","CategoryItemListPage_objectSpread","BuyCompletePage","POST_ITEM_EDIT_START","POST_ITEM_EDIT_SUCCESS","POST_ITEM_EDIT_FAIL","postItemEditAction","itemPrice","reqParams","item_price","itemEditFormError","ItemEditPage","_onClickEdit","onClickEdit","BaseLoadingButton","_onClick","buttonName","LoadingButton","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","TextField_default","helperText","PaymentResponseError","shopID","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","card_number","shop_id","token","buyComplete","getResponse","usingCardFailAction","buyFailAction","buyFormError","buyPage","ItemBuyPage","ItemBuyFormContainer","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemEditPageContainer","ItemBuyPageContainer","BuyCompleteContainer","ItemPageContainer","TransactionPageContainer","UserSettingPageContainer","UserPageContainer","App","Route_AppRoute","middleware","getState","console","group","info","log","groupEnd","store","LOCATION_CHANGE","router","location","pathname","initialState","authStatusReducer_objectSpread","userPayload","formErrorReducer_objectSpread","viewingItemReducer_objectSpread","viewingUserReducer_objectSpread","pathChangeState","pageReducuer_objectSpread","snackBarReducer_objectSpread","buyPageReducer_objectSpread","categoriesReducer_objectSpread","timelineReducer_objectSpread","transactionsReducer_objectSpread","history","userItemsReducer_objectSpread","createBrowserHistory","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.69090096.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(\n    path: string,\n    params: any = {},\n    csrfCheckRequired: boolean = true,\n  ): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (csrfCheckRequired) {\n      params.csrf_token = await this.getCsrfToken();\n    }\n\n    requestOption.body = JSON.stringify(params);\n\n    return await fetch(path, requestOption);\n  }\n\n  async postFormData(path: string, body: FormData): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      // MEMO: The reason why we should not set Content-Type header by ourselves\n      // https://stackoverflow.com/questions/39280438/fetch-missing-boundary-in-multipart-form-data-post\n      headers: this.defaultHeaders,\n      credentials: 'same-origin',\n    };\n\n    body.append('csrf_token', await this.getCsrfToken());\n    requestOption.body = body;\n\n    return await fetch(path, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { ErrorRes, LoginRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport type AuthActions =\n  | LoginSuccessAction\n  | LoginFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AuthActions>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AuthActions>) => {\n    AppClient.post(\n      '/login',\n      {\n        account_name: accountName,\n        password: password,\n      },\n      false,\n    )\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import { createMuiTheme } from '@material-ui/core';\n\nconst PRIMARY = '#f44436';\nconst SECONDARY = '#4fc3f7';\nconst SECONDARY_CONTRAST = '#fff';\n\nexport const themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: '#fff',\n    },\n    primary: {\n      main: PRIMARY,\n    },\n    secondary: {\n      main: SECONDARY,\n      contrastText: SECONDARY_CONTRAST,\n    },\n  },\n});\n","import React from 'react';\nimport { makeStyles, MuiThemeProvider, Theme } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { themeInstance } from '../theme';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  // MEMO: Wrap component by MuiThemeProvider again to ignore this bug. https://github.com/mui-org/material-ui/issues/14044\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <CircularProgress\n        color=\"primary\"\n        size={80}\n        className={classes.progress}\n      />\n    </MuiThemeProvider>\n  );\n};\n\nexport default LoadingComponent;\n","import * as React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AppBar, MuiThemeProvider, Theme } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport Collapse from '@material-ui/core/Collapse';\nimport { CategorySimple } from '../../dataObjects/category';\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport EventSeatIcon from '@material-ui/icons/EventSeat';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PersonIcon from '@material-ui/icons/Person';\nimport WeekendIcon from '@material-ui/icons/Weekend';\nimport { themeInstance } from '../../theme';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.primary.contrastText,\n  },\n  text: {\n    fontWeight: theme.typography.fontWeightBold,\n    textAlign: 'center',\n    width: '100%', // センタリング\n  },\n  list: {\n    width: '270px',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n}));\n\ninterface Props {\n  isLoggedIn: boolean;\n  ownUserId: number;\n  categories: CategorySimple[];\n  goToTopPage: () => void;\n  goToUserPage: (userId: number) => void;\n  goToSettingPage: () => void;\n  goToCategoryItemList: (categoryId: number) => void;\n}\n\nconst Header: React.FC<Props> = ({\n  isLoggedIn,\n  ownUserId,\n  categories,\n  goToTopPage,\n  goToUserPage,\n  goToSettingPage,\n  goToCategoryItemList,\n}) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    categoryExpanded: false,\n  });\n\n  const { open, categoryExpanded } = state;\n\n  const onClickTop = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToTopPage();\n  };\n\n  const onExpandCategory = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setState({ ...state, categoryExpanded: !state.categoryExpanded });\n  };\n\n  const onClickCategory = (categoryId: number) => (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToCategoryItemList(categoryId);\n  };\n\n  const onClickMyPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToUserPage(ownUserId);\n  };\n\n  const onClickMySettingPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToSettingPage();\n  };\n\n  const toggleDrawer = (open: boolean) => (event: React.MouseEvent) => {\n    event.preventDefault();\n    setState({ ...state, open });\n  };\n\n  // MEMO: Wrap component by MuiThemeProvider again to ignore this bug. https://github.com/mui-org/material-ui/issues/14044\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      {isLoggedIn && (\n        <Drawer open={open} onClose={toggleDrawer(false)}>\n          <List className={classes.list}>\n            <ListItem button onClick={onClickTop}>\n              <ListItemIcon>\n                <NewReleasesIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"新着商品\" />\n            </ListItem>\n            <ListItem button onClick={onExpandCategory}>\n              <ListItemIcon>\n                <WeekendIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"カテゴリ新着商品\" />\n              {categoryExpanded ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={categoryExpanded} timeout=\"auto\" unmountOnExit>\n              <List disablePadding>\n                {categories.map((category: CategorySimple) => (\n                  <ListItem\n                    button\n                    onClick={onClickCategory(category.id)}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <EventSeatIcon color=\"primary\" />\n                    </ListItemIcon>\n                    <ListItemText primary={category.categoryName} />\n                  </ListItem>\n                ))}\n              </List>\n            </Collapse>\n            <ListItem button onClick={onClickMyPage}>\n              <ListItemIcon>\n                <PersonIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"マイページ\" />\n            </ListItem>\n            <ListItem button onClick={onClickMySettingPage}>\n              <ListItemIcon>\n                <SettingsIcon color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText primary=\"設定\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      )}\n      <AppBar className={classes.appBar} position=\"fixed\">\n        <Toolbar>\n          {isLoggedIn && (\n            <IconButton\n              color=\"inherit\"\n              onClick={toggleDrawer(true)}\n              edge=\"start\"\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography className={classes.text} variant=\"h5\" noWrap>\n            ISUCARI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </MuiThemeProvider>\n  );\n};\n\nexport { Header };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { Header } from '../components/Header';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  ownUserId: state.authStatus.userId || 0,\n  // Note: Showing only parent category\n  categories: state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId === 0,\n  ),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  goToTopPage: () => {\n    dispatch(push(routes.timeline.path));\n  },\n  goToUserPage: (userId: number) => {\n    dispatch(push(routes.user.getPath(userId)));\n  },\n  goToSettingPage: () => {\n    dispatch(push(routes.userSetting.path));\n  },\n  goToCategoryItemList: (categoryId: number) => {\n    dispatch(push(routes.categoryTimeline.getPath(categoryId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import * as React from 'react';\nimport { Snackbar } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\ntype Props = {\n  open: boolean;\n  message?: string;\n  handleClose: (event: React.MouseEvent) => void;\n};\n\nconst SnackBar: React.FC<Props> = ({ open, message, handleClose }) => {\n  const classes = useStyles();\n\n  const handleOnClose = (event: React.SyntheticEvent, reason: string) => {\n    return handleClose(event as React.MouseEvent);\n  };\n\n  return (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleOnClose}\n        message={<span>{message}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </React.Fragment>\n  );\n};\n\nexport { SnackBar };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { closeSnackBarAction } from '../actions/snackBarAction';\nimport { SnackBar } from '../components/SnackBar';\n\nconst mapStateToProps = (state: AppState) => ({\n  open: state.snackBar.available,\n  message: state.snackBar.reason,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  handleClose(event: React.MouseEvent) {\n    dispatch(closeSnackBarAction());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SnackBar);\n","import { Action } from 'redux';\n\nexport const SNACK_BAR_CLOSE = 'SNACK_BAR_CLOSE';\n\nexport type SnackBarActions = SnackBarClose;\n\nexport interface SnackBarClose extends Action<typeof SNACK_BAR_CLOSE> {}\n\nexport const closeSnackBarAction = (): SnackBarClose => ({\n  type: SNACK_BAR_CLOSE,\n});\n","import React, { PropsWithChildren } from 'react';\nimport {\n  Container,\n  MuiThemeProvider,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\nimport HeaderContainer from '../containers/HeaderContainer';\nimport SnackBarContainer from '../containers/SnackBarContainer';\nimport { StyleRules } from '@material-ui/core/styles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { themeInstance } from '../theme';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(12),\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n}\n\nexport type Props = PropsWithChildren<BaseProps>;\n\nclass BasePageComponent extends React.Component<Props> {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"md\" className={classes.container}>\n          <HeaderContainer />\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n          <SnackBarContainer />\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(BasePageComponent);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport BasePageComponent from '../components/BasePageComponent';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { ErrorRes, RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type RegisterActions =\n  | RegisterSuccessAction\n  | RegisterFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, RegisterActions>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, RegisterActions>) => {\n    AppClient.post('/register', payload, false)\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n            numSellItems: body.num_sell_items,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction extends Action<typeof REGISTER_SUCCESS> {\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n  numSellItems: number;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction extends Action<typeof REGISTER_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErrors: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErrors,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    imagePreviewSpace: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center',\n      height: '300px',\n    },\n    imagePreviewText: {\n      margin: theme.spacing(2, 0),\n    },\n    imagePreview: {\n      width: 'auto',\n      height: '100%',\n      maxHeight: '300px',\n    },\n    upload: {\n      display: 'none',\n    },\n    icon: {\n      marginLeft: theme.spacing(1),\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onImageChange: (image: Blob) => void;\n}\n\ninterface State {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n\n      this.props.onImageChange(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n\n    if (imagePreviewUrl) {\n      imagePreview = (\n        <img\n          className={classes.imagePreview}\n          alt=\"プレビュー\"\n          src={imagePreviewUrl}\n        />\n      );\n    } else {\n      imagePreview = (\n        <Paper className={classes.imagePreviewSpace}>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography className={classes.imagePreviewText} variant=\"h6\">\n            商品画像\n          </Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              color=\"default\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n              <CloudUpload className={classes.icon} />\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      marginBottom: theme.spacing(2),\n    },\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  image?: Blob;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onImageChange = this._onImageChange.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId, image } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    if (image === undefined) {\n      this.setState({\n        categoryError: '画像をアップロードしてください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId, image);\n  }\n\n  _onImageChange(image: Blob) {\n    this.setState({\n      image,\n    });\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography className={classes.title} component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent onImageChange={this._onImageChange} />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { ErrorRes, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\nexport type SellingItemActions =\n  | SellingSuccessAction\n  | SellingFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SellingItemActions>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n  image: Blob,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SellingItemActions>) => {\n    const body = new FormData();\n    body.append('name', name);\n    body.append('description', description);\n    body.append('price', price.toString());\n    body.append('category_id', categoryId.toString());\n    body.append('image', image);\n    AppClient.postFormData('/sell', body)\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n        return await response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.timeline.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction\n  extends Action<typeof SELLING_ITEM_SUCCESS> {\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction extends Action<typeof SELLING_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId, image));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport type ErrorActions = NotFoundErrorAction | InternalServerErrorAction;\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\nimport { notFoundError, NotFoundErrorAction } from './errorAction';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\nexport type FetchItemActions =\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | NotFoundErrorAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchItemActions>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchItemActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchItemStartAction());\n      })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl: body.image_url,\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        if (err instanceof NotFoundError) {\n          dispatch(notFoundError());\n          return;\n        }\n\n        dispatch(\n          fetchItemFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemFailAction = (newError: FormErrorState): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    payload: newError,\n  };\n};\n","/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseURL?: string;\n  private defaultHeaders: HeadersInit = {};\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseURL}${path}`, requestOption);\n  }\n\n  public setBaseURL(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n}\n\nexport default new PaymentClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport PaymentClient from '../httpClients/paymentClient';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\nexport type SettingsActions =\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, SettingsActions>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, SettingsActions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n\n        // MEMO: ここでやるのがいいかわからん\n        PaymentClient.setBaseURL(body.payment_service_url);\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemPageFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemPageFailAction = (\n  newError: FormErrorState,\n): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n  payload: newError,\n});\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TransactionItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\nexport type FetchTransactionActions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchTransactionActions\n>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTransactionActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTransactionsStartAction());\n      })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Transactions not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTransactionsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTransactionsFailAction = (\n  newErrors: FormErrorState,\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    payload: newErrors,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  UserItemsReq,\n  UserItemsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\nexport type FetchUserItemsActions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserItemsActions\n>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserItemsActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserItemsStartAction());\n      })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('UserItems not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserItemsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserItemsFailAction = (\n  newError: FormErrorState,\n): FetchUserItemsFailAction => {\n  return {\n    type: FETCH_USER_ITEMS_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { notFoundError, NotFoundErrorAction } from './errorAction';\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type FetchUserPageDataActions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction\n  | NotFoundErrorAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  FetchUserPageDataActions\n>;\n\nasync function fetchUserPageData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  if (!userDataRes.ok) {\n    const errRes: ErrorRes = await userDataRes.json();\n\n    if (userDataRes.status === 404) {\n      throw new NotFoundError(errRes.error);\n    }\n\n    throw new AppResponseError(errRes.error, userDataRes);\n  }\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    if (!transactionRes.ok) {\n      const errRes: ErrorRes = await userDataRes.json();\n      throw new AppResponseError(errRes.error, transactionRes);\n    }\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchUserPageDataActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserPageDataStartAction());\n      })\n      .then(() => {\n        return fetchUserPageData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl: item.image_url,\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        if (err instanceof NotFoundError) {\n          dispatch(notFoundError());\n        }\n\n        dispatch(\n          fetchUserPageDataFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserPageDataFailAction = (\n  newError: FormErrorState,\n): FetchUserPageDataFailAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { AppState } from '../index';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\nexport type FetchTimelineActions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, FetchTimelineActions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, FetchTimelineActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTimelineStartAction());\n      })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTimelineFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTimelineFailAction = (\n  newErrors: FormErrorState,\n): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    payload: newErrors,\n  };\n};\n","import { INTERNAL_SERVER_ERROR, NOT_FOUND_ERROR } from '../actions/errorAction';\nimport { FETCH_ITEM_FAIL } from '../actions/fetchItemAction';\nimport { FETCH_SETTINGS_FAIL } from '../actions/settingsAction';\nimport { FETCH_TRANSACTIONS_FAIL } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_ITEMS_FAIL } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_FAIL } from '../actions/fetchUserPageDataAction';\nimport { FETCH_TIMELINE_FAIL } from '../actions/fetchTimelineAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\nconst error = (\n  state: ErrorState = initialState,\n  action: ActionTypes,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { MuiThemeProvider, Theme } from '@material-ui/core';\nimport { themeInstance } from '../../../theme';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes/Route';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    width: '70%',\n  },\n  message: {\n    paddingTop: theme.spacing(1),\n  },\n  link: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport type Props = {\n  message?: string;\n};\n\nconst NotFoundPage: React.FC<Props> = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <img className={classes.img} src={'/not_found.png'} alt={'not found'} />\n        <Typography variant=\"h3\">404 Not Found</Typography>\n        {message && (\n          <Typography variant=\"h4\" className={classes.message}>\n            {message}\n          </Typography>\n        )}\n        <Link to={routes.top.path}>\n          <Typography variant=\"h6\" className={classes.link}>\n            トップページへ\n          </Typography>\n        </Link>\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport { NotFoundPage };\n","import React from 'react';\nimport { MuiThemeProvider, Theme } from '@material-ui/core';\nimport { themeInstance } from '../../../theme';\nimport Container from '@material-ui/core/Container';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../../routes/Route';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    paddingTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    width: '70%',\n  },\n  message: {\n    paddingTop: theme.spacing(1),\n  },\n  link: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport type Props = {\n  message?: string;\n};\n\nconst InternalServerErrorPage: React.FC<Props> = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <MuiThemeProvider theme={themeInstance}>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <img\n          className={classes.img}\n          src={'/internal_server_error.png'}\n          alt={'not found'}\n        />\n        <Typography variant=\"h3\">Internal Server Error</Typography>\n        {message && (\n          <Typography variant=\"h4\" className={classes.message}>\n            {message}\n          </Typography>\n        )}\n        <Link to={routes.top.path}>\n          <Typography variant=\"h6\" className={classes.link}>\n            トップページへ\n          </Typography>\n        </Link>\n      </Container>\n    </MuiThemeProvider>\n  );\n};\n\nexport { InternalServerErrorPage };\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport { NotFoundPage } from '../pages/error/NotFoundPage';\nimport { InternalServerErrorPage } from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import { AppBar, Theme } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    padding: theme.spacing(0, 2),\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  buttons: {\n    onClick: (e: React.MouseEvent) => void;\n    buttonText: string;\n    disabled: boolean;\n  }[];\n};\n\nconst ItemFooter: React.FC<Props> = ({ price, buttons }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        <Grid item>\n          <Grid container direction=\"row\">\n            {buttons.map(button => {\n              return (\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.buyButton}\n                    color=\"secondary\"\n                    onClick={button.onClick}\n                    disabled={button.disabled}\n                  >\n                    {button.buttonText}\n                  </Button>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport { ItemFooter };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\nconst getUserStyles = (width: number) =>\n  makeStyles((theme: Theme) => ({\n    card: {\n      width: `${width}px`,\n      position: 'relative',\n    },\n    itemImage: {\n      width: `${width}px`,\n      height: 'auto',\n    },\n    soldOut: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      zIndex: 1,\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n      borderWidth: `0 140px 140px 0`,\n      borderColor: 'transparent #ff0000 transparent transparent;',\n    },\n    soldOutText: {\n      position: 'absolute',\n      top: '35px',\n      right: '1px',\n      fontWeight: theme.typography.fontWeightBold,\n      zIndex: 2,\n      transform: 'rotate(45deg);',\n      color: theme.palette.primary.contrastText,\n    },\n  }));\n\ninterface Props {\n  imageUrl: string;\n  title: string;\n  isSoldOut: boolean;\n  width: number;\n}\n\nconst ItemImage: React.FC<Props> = ({ imageUrl, title, isSoldOut, width }) => {\n  const classes = getUserStyles(width)();\n\n  return (\n    <Card className={classes.card}>\n      {isSoldOut && (\n        <React.Fragment>\n          <div className={classes.soldOut} />\n          <Typography className={classes.soldOutText} variant=\"h6\">\n            SOLD OUT\n          </Typography>\n        </React.Fragment>\n      )}\n      <img className={classes.itemImage} src={imageUrl} alt={title} />\n    </Card>\n  );\n};\n\nexport { ItemImage };\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ItemFooter } from '../components/ItemFooter';\nimport { ItemImage } from '../components/ItemImage';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      marginBottom: theme.spacing(10),\n    },\n    title: {\n      margin: theme.spacing(3),\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickBump: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    this._onClickItemEditButton = this._onClickItemEditButton.bind(this);\n    this._onClickBumpButton = this._onClickBumpButton.bind(this);\n    this._onClickTransaction = this._onClickTransaction.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickBumpButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBump(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let buttons: {\n      onClick: (e: React.MouseEvent) => void;\n      buttonText: string;\n      disabled: boolean;\n    }[] = [\n      {\n        onClick: this._onClickBuyButton,\n        buttonText: '購入',\n        disabled: false,\n      },\n    ];\n\n    // 自分の商品で出品中なら編集画面へ遷移 / Bumpボタンを表示\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      buttons = [\n        {\n          onClick: this._onClickBumpButton,\n          buttonText: 'Bump',\n          disabled: false,\n        },\n        {\n          onClick: this._onClickItemEditButton,\n          buttonText: '商品編集',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 出品者 or 購入者で取引中か売り切れなら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      (item.status === 'trading' || item.status === 'sold_out')\n    ) {\n      buttons = [\n        {\n          onClick: this._onClickTransaction,\n          buttonText: '取引画面',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      buttons = [\n        {\n          onClick(e: React.MouseEvent) {},\n          buttonText: '売り切れ',\n          disabled: true,\n        },\n      ];\n    }\n\n    return (\n      <BasePageContainer>\n        <div className={classes.root}>\n          <Typography className={classes.title} variant=\"h3\">\n            {item.name}\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item>\n              <ItemImage\n                imageUrl={item.thumbnailUrl}\n                title={item.name}\n                isSoldOut={item.status !== 'on_sale'}\n                width={500}\n              />\n            </Grid>\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">商品説明</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Typography variant=\"body1\">{item.description}</Typography>\n                  </div>\n\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">カテゴリ</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Typography variant=\"body1\">\n                      <RouteLink\n                        to={routes.categoryTimeline.getPath(\n                          item.category.parentId,\n                        )}\n                      >\n                        {item.category.parentCategoryName}\n                      </RouteLink>{' '}\n                      > {item.category.categoryName}\n                    </Typography>\n                  </div>\n\n                  <div className={classes.descSection}>\n                    <Typography variant=\"h4\">出品者</Typography>\n                    <Divider className={classes.divider} variant=\"middle\" />\n                    <Grid\n                      container\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"\n                      wrap=\"nowrap\"\n                      spacing={2}\n                    >\n                      <Grid item>\n                        <RouteLink\n                          className={classes.link}\n                          to={routes.user.getPath(item.sellerId)}\n                        >\n                          <Avatar className={classes.avatar}>\n                            {item.seller.accountName.charAt(0)}\n                          </Avatar>\n                        </RouteLink>\n                      </Grid>\n                      <Grid item xs>\n                        <Typography variant=\"body1\">\n                          {item.seller.accountName}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </div>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <ItemFooter price={item.price} buttons={buttons} />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, BumpReq, BumpRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport {SnackBarAction} from \"./actionTypes\";\n\nexport const POST_BUMP_START = 'POST_BUMP_START';\nexport const POST_BUMP_SUCCESS = 'POST_BUMP_SUCCESS';\nexport const POST_BUMP_FAIL = 'POST_BUMP_FAIL';\n\nexport type PostBumpActions =\n  | PostBumpStartAction\n  | PostBumpSuccessAction\n  | PostBumpFailAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostBumpActions>;\n\nexport function postBumpAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostBumpActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postBumpStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/bump', { item_id: itemId } as BumpReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: BumpRes) => {\n        dispatch(postBumpSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postBumpFailAction(err.message),\n        );\n      });\n  };\n}\n\nexport interface PostBumpStartAction extends Action<typeof POST_BUMP_START> {}\n\nexport function postBumpStartAction(): PostBumpStartAction {\n  return {\n    type: POST_BUMP_START,\n  };\n}\n\nexport interface PostBumpSuccessAction\n  extends SnackBarAction<typeof POST_BUMP_SUCCESS> {}\n\nexport function postBumpSuccessAction(): PostBumpSuccessAction {\n  return {\n    type: POST_BUMP_SUCCESS,\n    snackBarMessage: 'BUMPに成功しました',\n  };\n}\n\nexport interface PostBumpFailAction extends SnackBarAction<typeof POST_BUMP_FAIL> {}\n\nexport function postBumpFailAction(error: string): PostBumpFailAction {\n  return {\n    type: POST_BUMP_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { postBumpAction } from '../actions/postBumpAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickBump: (itemId: number) => {\n    dispatch(postBumpAction(itemId));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../../routes/Route';\nimport { Theme } from '@material-ui/core';\nimport { ItemStatus } from '../../dataObjects/item';\nimport { ItemImage } from '../ItemImage';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    width: '300px',\n    position: 'relative',\n  },\n}));\n\ninterface Props {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n  status: ItemStatus;\n}\n\nconst Item: React.FC<Props> = ({ itemId, imageUrl, title, price, status }) => {\n  const classes = useStyles();\n\n  return (\n    <RouteLink to={routes.item.getPath(itemId)}>\n      <Card className={classes.card}>\n        <GridListTile>\n          <ItemImage\n            imageUrl={imageUrl}\n            title={title}\n            isSoldOut={status !== 'on_sale'}\n            width={300}\n          />\n          <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n        </GridListTile>\n      </Card>\n    </RouteLink>\n  );\n};\n\nexport { Item };\n","import React from 'react';\nimport { TimelineItem } from '../../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { Item } from '../Item';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  gridList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n  grid: {\n    height: '100%',\n  },\n}));\n\nexport interface Props {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemList: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <Item\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n          status={item.status}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList className={classes.gridList} cellHeight=\"auto\" cols={3}>\n        {itemComponents}\n      </GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemList };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButtonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"primary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButtonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButtonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButtonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemList } from '../components/ItemList';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemList items={items} loadMore={loadMoreItems} hasNext={hasNext} />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">\n        下記の「集荷予約」を押し、集荷予約の手続きをしてください\n      </Typography>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n      >\n        集荷予約\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  qrCode: {\n    width: '300px',\n    height: '300px',\n    margin: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">集荷予約が完了しました</Typography>\n        <Typography variant=\"h6\">\n          配達員に下記QRコードをお見せください\n        </Typography>\n        <Typography variant=\"h6\">\n          配達員に商品を渡したら下記の「発送完了」を押してください\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <img className={classes.qrCode} src={qrCodeUrl} alt=\"QRコード\" />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={onClick}\n        >\n          発送完了\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\nexport type PostShippedDoneActions =\n  | PostShippedDoneStartAction\n  | PostShippedDoneSuccessAction\n  | PostShippedDoneFailAction;\ntype ThunkResult<R> = ThunkAction<\n  R,\n  AppState,\n  undefined,\n  PostShippedDoneActions\n>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedDoneActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship_done', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedDoneFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_DONE_FAIL> {}\n\nexport function postShippedDoneFailAction(\n  error: string,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ErrorRes, ShipReq, ShipRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\nexport type PostShippedActions =\n  | PostShippedStartAction\n  | PostShippedSuccessAction\n  | PostShippedFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostShippedActions>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostShippedActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postShippedFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends SnackBarAction<typeof POST_SHIPPED_FAIL> {}\n\nexport function postShippedFailAction(error: string): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { TransactionSeller } from '../components/TransactionSeller';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { postShippedAction } from '../actions/postShippedAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionSeller);\n","import React from 'react';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from '../Transaction/Seller/Initial';\nimport WaitShipping from '../Transaction/Seller/WaitShipping';\nimport WaitDone from '../Transaction/Seller/WaitDone';\nimport Done from '../Transaction/Seller/Done';\n\nexport type Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShipped: (itemId: number) => void;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionSeller: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShipped,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport { TransactionSeller };\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">出品者が発送するまでお待ち下さい</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">出品者が発送するまでお待ち下さい</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、下記の「取引完了」を押してください\n      </Typography>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={onClick}\n      >\n        取引完了\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { CompleteReq, CompleteRes, ErrorRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { SnackBarAction } from './actionTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\nexport type PostCompleteActions =\n  | PostCompleteStartAction\n  | PostCompleteSuccessAction\n  | PostCompleteFailAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostCompleteActions>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostCompleteActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(postCompleteFailAction(err.message));\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends SnackBarAction<typeof POST_COMPLETE_FAIL> {}\n\nexport function postCompleteFailAction(error: string): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    snackBarMessage: error,\n  };\n}\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { TransactionBuyer } from '../components/TransactionBuyer';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionBuyer);\n","import React from 'react';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from '../Transaction/Buyer/Initial';\nimport WaitShipping from '../Transaction/Buyer/WaitShipping';\nimport WaitDone from '../Transaction/Buyer/WaitDone';\nimport Done from '../Transaction/Buyer/Done';\n\nexport type Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionBuyer: React.FC<Props> = ({\n  itemId,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport { TransactionBuyer };\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { NotFoundPage } from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { routes } from '../routes/Route';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n  });\n\ninterface TransactionProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n}\n\ntype Props = TransactionProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n      classes,\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        <InternalServerErrorPage message=\"取引中の商品ではない、もしくはデータ形式が不正です\" />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage message=\"商品が読み込めませんでした\" />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {TransactionComponent}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.descSection} variant=\"h4\">\n              取引情報\n            </Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n          </Grid>\n          <Grid item xs={3}>\n            <RouteLink to={routes.item.getPath(item.id)}>\n              <img\n                className={classes.itemImage}\n                alt={item.name}\n                src={item.thumbnailUrl}\n              />\n            </RouteLink>\n          </Grid>\n          <Grid item xs={9} container>\n            <Grid item>\n              <Typography variant=\"h5\">{item.name}</Typography>\n              <Typography variant=\"h6\">{item.price}ｲｽｺｲﾝ</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(TransactionPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { ItemStatus } from '../../dataObjects/item';\nimport { Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\n\nconst baseWidth = '80px';\nconst baseHeight = '25px';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  normalLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.secondary.contrastText,\n    backgroundColor: theme.palette.secondary.main,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  soldOutLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.grey.A100,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n  tradingLabel: {\n    width: baseWidth,\n    height: baseHeight,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n}));\n\ninterface Props {\n  itemStatus: ItemStatus;\n}\n\nconst getLabelByStatus = (\n  status: ItemStatus,\n): [string, 'normalLabel' | 'soldOutLabel' | 'tradingLabel'] => {\n  switch (status) {\n    case 'on_sale':\n      return ['出品中', 'normalLabel'];\n    case 'trading':\n      return ['取引中', 'tradingLabel'];\n    case 'sold_out':\n      return ['売却済', 'soldOutLabel'];\n    case 'stop':\n      return ['出品停止中', 'normalLabel'];\n    case 'cancel':\n      return ['キャンセル', 'normalLabel'];\n  }\n};\n\nconst TransactionLabel: React.FC<Props> = ({ itemStatus }) => {\n  const classes = useStyles();\n  const [labelName, classKey] = getLabelByStatus(itemStatus);\n  const className = classes[classKey];\n\n  return (\n    <div className={classes.container}>\n      <Card className={className}>\n        <Typography variant=\"subtitle2\" component=\"p\">\n          {labelName}\n        </Typography>\n      </Card>\n    </div>\n  );\n};\n\nexport { TransactionLabel };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../../routes/Route';\nimport { TransactionItem } from '../../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from '../TransactionLabel';\nimport { Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  card: {\n    display: 'flex',\n  },\n  detail: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  itemTitle: {\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  img: {\n    width: '100px',\n    height: '100%',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n  const link =\n    item.status === 'on_sale'\n      ? routes.item.getPath(item.id)\n      : routes.transaction.getPath(item.id);\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={link}>\n        <CardMedia\n          className={classes.img}\n          image={item.thumbnailUrl}\n          title={item.name}\n        />\n      </RouteLink>\n      <div className={classes.detail}>\n        <CardContent>\n          <Typography className={classes.itemTitle} variant=\"h6\">\n            {item.name}\n          </Typography>\n          <TransactionLabel itemStatus={item.status} />\n        </CardContent>\n      </div>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from './TransactionComponent';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionListComponent: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1}>{transactionsComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionListComponent };\n","import React, { ReactElement } from 'react';\nimport { ItemList } from '../components/ItemList';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionListComponent } from '../components/TransactionListComponent';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    numSellItems: {\n      marginTop: theme.spacing(1),\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n  loading: boolean;\n  currentPageUserId: number;\n  isMyPage: boolean;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    const isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n      loading: this.props.loading,\n      currentPageUserId: pageUserId,\n      isMyPage,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const nextLoading = nextProps.loading;\n    const nextPageUserId = Number(nextProps.match.params.user_id);\n    const nextIsMyPage = nextProps.loggedInUserId === nextPageUserId;\n\n    // ページ遷移を確認した場合はデータ取得を行う\n    if (nextPageUserId !== prevState.currentPageUserId) {\n      nextProps.load(nextPageUserId, nextIsMyPage);\n\n      return {\n        ...prevState,\n        loading: true,\n        isMyPage: nextIsMyPage,\n        currentPageUserId: nextPageUserId,\n      };\n    }\n\n    return {\n      ...prevState,\n      loading: nextLoading,\n      currentPageUserId: nextPageUserId,\n      isMyPage: nextIsMyPage,\n    };\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemList\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionListComponent\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { user, classes } = this.props;\n    const { tabValue, loading, isMyPage } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n            <Typography className={classes.numSellItems} variant=\"h6\">\n              出品数 {user.numSellItems}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <Tabs value={tabValue} onChange={this._handleChange}>\n          <Tab label=\"出品商品\" id=\"tab--item-list\" />\n          {isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n        </Tabs>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Grid, Theme } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Divider from '@material-ui/core/Divider';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport SellingButtonComponent from '../containers/SellingButtonContainer';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  divider: {\n    margin: theme.spacing(1),\n  },\n  descSection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = {\n  id?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n};\n\nconst UserSettingPage: React.FC<Props> = ({\n  id,\n  accountName,\n  address,\n  numSellItems,\n}) => {\n  const classes = useStyles();\n\n  if (\n    id === undefined ||\n    accountName === undefined ||\n    address === undefined ||\n    numSellItems === undefined\n  ) {\n    return (\n      <InternalServerErrorPage message=\"ユーザ情報が読み込めませんでした\" />\n    );\n  }\n\n  return (\n    <BasePageContainer>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item xs={3}>\n          <Avatar className={classes.avatar}>{accountName.charAt(0)}</Avatar>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography variant=\"h3\">{accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">住所</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{address}</Typography>\n          </div>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">出品数</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{numSellItems}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <SellingButtonComponent />\n    </BasePageContainer>\n  );\n};\n\nexport default UserSettingPage;\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  id: state.authStatus.userId,\n  accountName: state.authStatus.accountName,\n  address: state.authStatus.address,\n  numSellItems: state.authStatus.numSellItems,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserSettingPage);\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from '../LoadingComponent';\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button, Theme } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  checklist: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">\n            椅子限定のフリマサイト ついにリリース！\n          </Typography>\n          <div className={classes.checklist}>\n            <Typography variant=\"h6\">✔ 安全なカード決済</Typography>\n            <Typography variant=\"h6\">✔ お互い匿名で安心配送</Typography>\n          </div>\n          <Typography variant=\"h6\">\n            安心安全にあなただけの椅子を手に入れよう！\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemList } from '../components/ItemList';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n    title: {\n      paddingBottom: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold,\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  loading: boolean;\n  categoryIdIsValid: boolean;\n  currentCategoryId: number;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      loading: this.props.loading,\n      categoryIdIsValid,\n      currentCategoryId: Number(categoryId),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    const nextLoading = nextProps.loading;\n    const nextCategoryId = Number(nextProps.match.params.category_id);\n\n    // ページ遷移を確認した場合はデータ取得を行う\n    if (nextCategoryId !== prevState.currentCategoryId) {\n      nextProps.load(nextCategoryId);\n\n      return {\n        ...prevState,\n        loading: true,\n        currentCategoryId: nextCategoryId,\n      };\n    }\n\n    return {\n      ...prevState,\n      loading: nextLoading,\n      currentCategoryId: nextCategoryId,\n    };\n  }\n\n  render() {\n    const { classes, items, categoryName, loadMore, hasNext } = this.props;\n    const { loading, currentCategoryId: categoryId } = this.state;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\" className={classes.title}>\n            「{categoryName}」カテゴリの新着商品一覧\n          </Typography>\n          <ItemList items={items} hasNext={hasNext} loadMore={loadMoreItems} />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage message=\"Category IDは数字のみです\" />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      color=\"primary\"\n      variant=\"contained\"\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action } from 'redux';\nimport { ErrorRes, ItemEditReq, ItemEditRes } from '../types/appApiTypes';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\n\nexport const POST_ITEM_EDIT_START = 'POST_ITEM_EDIT_START';\nexport const POST_ITEM_EDIT_SUCCESS = 'POST_ITEM_EDIT_SUCCESS';\nexport const POST_ITEM_EDIT_FAIL = 'POST_ITEM_EDIT_FAIL';\n\nexport type PostItemEditActions =\n  | PostItemEditStartAction\n  | PostItemEditSuccessAction\n  | PostItemEditFailAction\n  | CallHistoryMethodAction;\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, PostItemEditActions>;\n\nexport function postItemEditAction(\n  itemId: number,\n  itemPrice?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, PostItemEditActions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postItemEditStartAction());\n      })\n      .then(() => {\n        const reqParams = {\n          item_id: itemId,\n        } as ItemEditReq;\n\n        if (itemPrice) {\n          reqParams.item_price = itemPrice;\n        }\n        return AppClient.post('/items/edit', reqParams);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ItemEditRes) => {\n        dispatch(postItemEditSuccessAction());\n      })\n      .then(() => {\n        dispatch(push(routes.item.getPath(itemId)));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postItemEditFailAction({\n            itemEditFormError: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostItemEditStartAction\n  extends Action<typeof POST_ITEM_EDIT_START> {}\n\nexport function postItemEditStartAction(): PostItemEditStartAction {\n  return {\n    type: POST_ITEM_EDIT_START,\n  };\n}\n\nexport interface PostItemEditSuccessAction\n  extends Action<typeof POST_ITEM_EDIT_SUCCESS> {}\n\nexport function postItemEditSuccessAction(): PostItemEditSuccessAction {\n  return {\n    type: POST_ITEM_EDIT_SUCCESS,\n  };\n}\n\nexport interface PostItemEditFailAction\n  extends Action<typeof POST_ITEM_EDIT_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postItemEditFailAction(\n  newErrors: FormErrorState,\n): PostItemEditFailAction {\n  return {\n    type: POST_ITEM_EDIT_FAIL,\n    payload: newErrors,\n  };\n}\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport {\n  Button,\n  createStyles,\n  TextField,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { ItemData } from '../dataObjects/item';\nimport { RouteComponentProps } from 'react-router';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorMessageComponent } from '../components/ErrorMessageComponent';\nimport validator from 'validator';\nimport { InternalServerErrorPage } from './error/InternalServerErrorPage';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (itemId: number) => void;\n  item?: ItemData;\n  formError?: string;\n  onClickEdit: (itemId: number, price: number) => void;\n}\n\ntype Props = BaseProps & RouteComponentProps<{ item_id: string }> & ErrorProps;\n\ninterface State {\n  price: number;\n}\n\nclass ItemEditPage extends React.Component<Props, State> {\n  private readonly itemId: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.itemId = Number(this.props.match.params.item_id);\n    this.props.load(this.itemId);\n\n    const { item } = this.props;\n\n    this.state = {\n      price: item ? item.price : 0,\n    };\n\n    this._onClickEdit = this._onClickEdit.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onClickEdit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickEdit(this.itemId, this.state.price);\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { loading, item, formError, classes } = this.props;\n    const { price } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    if (!item) {\n      return <InternalServerErrorPage message=\"商品が読み込めませんでした\" />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography component=\"h1\" variant=\"h5\">\n          商品編集ページ\n        </Typography>\n        <Typography component=\"h2\">{item.name}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {formError && (\n            <ErrorMessageComponent id=\"sellButton\" error={formError} />\n          )}\n          <Button\n            id=\"editButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onClickEdit}\n          >\n            編集する\n          </Button>\n          <RouteLink to={routes.item.getPath(item.id)}>\n            商品ページへ戻る\n          </RouteLink>\n        </form>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemEditPage));\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { postItemEditAction } from '../actions/postItemEditAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport ItemEditPage from '../pages/ItemEditPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n  formError: state.formError.itemEditFormError,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickEdit: (itemId: number, price: number) => {\n    dispatch(postItemEditAction(itemId, price));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemEditPage);\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      position: 'relative',\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass BaseLoadingButton extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport const LoadingButton = withStyles(styles)(BaseLoadingButton);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { LoadingButton } from './LoadingButton';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item?: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors?: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const { item } = this.props;\n    const id = item ? item.id : 0; // MEMO: この関数がcallされる前にitemの有無は確認されるので0になることはない\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors ? errors.cardError : undefined;\n    const appError = errors ? errors.buyError : undefined;\n\n    if (!item) {\n      return (\n        <React.Fragment>\n          <Typography variant=\"h4\">エラーが発生しました</Typography>\n          <Link to={routes.timeline.path}>トップページへ戻る</Link>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","export const shopID = '11';\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { CallHistoryMethodAction, push } from 'connected-react-router';\nimport { Action } from 'redux';\nimport { BuyReq, ErrorRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\nimport { AppState } from '../index';\nimport { shopID } from '../config';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\nexport type BuyActions =\n  | BuyStartAction\n  | BuySuccessAction\n  | BuyFailAction\n  | UsingCardFailAction\n  | CallHistoryMethodAction;\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, BuyActions>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, BuyActions>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: shopID,\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch(async (err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            const errRes: ErrorRes = await res.json();\n\n            if (errRes) {\n              return dispatch(action(errRes.error));\n            }\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst mapStateToProps = (state: AppState) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, ActionTypes>,\n) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\n\ntype Props = {\n  loading: boolean;\n  load: (itemId: string) => void;\n  item?: ItemData;\n} & RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemBuyPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    const { item } = props;\n    const item_id = props.match.params.item_id;\n\n    // 商品が渡されない or 渡された商品とURLが一致しない場合は商品取得をする\n    if (!item || item.id.toString() !== item_id) {\n      props.load(item_id);\n    }\n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <ItemBuyFormContainer />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<Props>()(ItemBuyPage);\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport ItemBuyPage from '../pages/ItemBuyPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: !state.viewingItem.item, // 商品がstateにない場合はloadingにする\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport UserSettingPageContainer from '../containers/UserSettingPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport { NotFoundPage } from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\nimport ItemEditPageContainer from '../containers/ItemEditPageContainer';\nimport ItemBuyPageContainer from '../containers/ItemBuyPageContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute\n        exact\n        path={routes.itemEdit.path}\n        component={ItemEditPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.buy.path}\n        component={ItemBuyPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />{' '}\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport checkLocationChange from './checkLocationChange';\nimport { Middleware } from 'redux';\n\nconst middleware: Middleware[] = [logger, checkLocationChange];\n\nexport default middleware;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { ActionTypes } from '../actions/actionTypes';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<ActionTypes>) => (\n  action: ActionTypes,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import { Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\nimport { LOCATION_CHANGE } from 'connected-react-router';\nimport { pathNameChangeAction } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\n// react-routerのページ遷移発火時、pathnameが変わった場合は独自のactionを発火する\nconst checkLocationChange: Middleware = <S extends AppState>(\n  store: MiddlewareAPI<Dispatch, S>,\n) => (next: Dispatch<ActionTypes>) => (action: ActionTypes): any => {\n  const { getState, dispatch } = store;\n  if (action.type !== LOCATION_CHANGE) {\n    return next(action);\n  }\n\n  const { router } = getState();\n  const currentPath = router.location.pathname;\n  const nextPath = action.payload.location.pathname;\n\n  if (currentPath === nextPath) {\n    return next(action);\n  }\n\n  dispatch(pathNameChangeAction());\n  return next(action);\n};\n\nexport default checkLocationChange;\n","import { Action } from 'redux';\n\nexport const PATH_NAME_CHANGE = 'PATH_NAME_CHANGE';\n\nexport type LocationChangeActions = PathNameChangeAction;\n\nexport interface PathNameChangeAction extends Action<typeof PATH_NAME_CHANGE> {}\n\nexport const pathNameChangeAction = (): PathNameChangeAction => ({\n  type: PATH_NAME_CHANGE,\n});\n","import { LOGIN_SUCCESS } from '../actions/authenticationActions';\nimport { REGISTER_SUCCESS } from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: ActionTypes,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n            numSellItems: number;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n          numSellItems: user.numSellItems,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\nimport { POST_ITEM_EDIT_FAIL } from '../actions/postItemEditAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n  itemEditFormError?: string;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n  itemEditFormError: undefined,\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: ActionTypes,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    case POST_ITEM_EDIT_FAIL:\n      return {\n        ...state,\n        itemEditFormError: action.payload.itemEditFormError,\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { ItemData } from '../dataObjects/item';\nimport { FETCH_ITEM_SUCCESS } from '../actions/fetchItemAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: ActionTypes,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { UserData } from '../dataObjects/user';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: ActionTypes,\n): ViewingUserState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_SUCCESS,\n} from '../actions/fetchTimelineAction';\nimport {\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst pathChangeState: PageState = {\n  isLoading: false, // Settings取得時しかtrueにならない\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (\n  state: PageState = initialState,\n  action: ActionTypes,\n): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case PATH_NAME_CHANGE:\n      return pathChangeState;\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import {ActionTypes} from '../actions/actionTypes';\nimport {POST_SHIPPED_FAIL} from '../actions/postShippedAction';\nimport {POST_SHIPPED_DONE_FAIL} from '../actions/postShippedDoneAction';\nimport {POST_COMPLETE_FAIL} from '../actions/postCompleteAction';\nimport {SNACK_BAR_CLOSE} from '../actions/snackBarAction';\nimport {POST_BUMP_FAIL, POST_BUMP_SUCCESS} from \"../actions/postBumpAction\";\n\nexport interface SnackBarState {\n  reason: string;\n  available: boolean;\n}\n\nconst initialState: SnackBarState = {\n  reason: '',\n  available: false,\n};\n\nconst snackBar = (\n  state: SnackBarState = initialState,\n  action: ActionTypes,\n): SnackBarState => {\n  switch (action.type) {\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_BUMP_SUCCESS:\n    case POST_BUMP_FAIL:\n    case POST_COMPLETE_FAIL:\n      return {\n        reason: action.snackBarMessage,\n        available: true,\n      };\n    case SNACK_BAR_CLOSE:\n      return {\n        reason: '',\n        available: false,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default snackBar;\n","import {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: ActionTypes,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { CategorySimple } from '../dataObjects/category';\nimport { FETCH_SETTINGS_SUCCESS } from '../actions/settingsAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: ActionTypes,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_TIMELINE_SUCCESS } from '../actions/fetchTimelineAction';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\nimport { ActionTypes } from '../actions/actionTypes';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: ActionTypes,\n): TimelineState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import { TransactionItem } from '../dataObjects/item';\nimport { FETCH_TRANSACTIONS_SUCCESS } from '../actions/fetchTransactionsAction';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: ActionTypes,\n): TransactionsState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import { TimelineItem } from '../dataObjects/item';\nimport { FETCH_USER_ITEMS_SUCCESS } from '../actions/fetchUserItemsAction';\nimport { FETCH_USER_PAGE_DATA_SUCCESS } from '../actions/fetchUserPageDataAction';\nimport { ActionTypes } from '../actions/actionTypes';\nimport { PATH_NAME_CHANGE } from '../actions/locationChangeAction';\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: ActionTypes,\n): UserItemsState => {\n  switch (action.type) {\n    case PATH_NAME_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport snackBar from './snackBarReducer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    snackBar,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middleware from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middleware),\n    ),\n  );\n};\n"],"sourceRoot":""}