{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","actions/settingsAction.ts","components/LoadingComponent.tsx","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemPageAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","pages/UserSettingPage.tsx","pages/BuyComplete.tsx","pages/ItemPage.tsx","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","actions/fetchTimelineAction.ts","reducers/index.ts","containers/ItemListPageContainer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","mocks.ts","pages/UserPage.tsx","containers/UserPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/pageReducuer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","baseUrl","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","keys","length","concat","toString","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","status","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","fetchSettingStartAction","fetchSettingsSuccessAction","settings","fetchItemPageFailAction","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","themeInstance","createMuiTheme","background","default","BasePageComponent","alreadyLoaded","load","MuiThemeProvider","Container","maxWidth","loading","components_LoadingComponent","children","page","isLoading","authStatus","checked","Promise","resolve","get","user","numSellItems","num_sell_items","csrfToken","categories","map","category","parentId","parent_id","categoryName","category_name","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","selectedCategoryId","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","category_id","itemId","newErrors","filter","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemPageStartAction","fetchItemPageSuccessAction","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","ItemEditPage","LoadingButtonComponent","_onClick","buttonName","react","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","thumbnailUrl","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","paymentClient","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","item_id","token","buyComplete","action","getResponse","usingCardFailAction","buyFailAction","buyFormError","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","UserSettingPage","BuyCompletePage","ItemPage","match","onClickBuy","title","sm","descSection","Divider","divider","categoryTimeline","getPath","parentCategoryName","wrap","link","sellerId","seller","charAt","AppBar","appBar","buyButton","marginBottom","textDecoration","isItemPageLoading","seller_id","buyerId","buyer_id","buyer","parent_category_name","createdAt","created_at","fetchItemPageAction","buy","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","items","hasNext","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","GridListTile","ItemComponent_ItemComponent","return","lastItem","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","root","ItemListComponent_ItemListComponent","SellingButtonContainer","flexWrap","justifyContent","overflow","fetchTimelineAction","fetchTimelineStartAction","created","fetchTimelineSuccessAction","has_next","root_category_id","root_category_name","fetchTimelineFailAction","history","timeline","isTimelineLoading","TransactionPage","mockUser","mockItems","itemList","UserPage","isLoggedIn","rest","objectWithoutProperties","react_router","render","textarea","img","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","itemEdit","transaction","transactionId","userSetting","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","SellPage","ItemPageContainer","TransactionPageContainer","UserPageContainer","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","getState","group","info","groupEnd","initialState","objectSpread","userPayload","LOCATION_CHANGE","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e6d06575.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n    paymentUrl: 'http://localhost:5555',\n}","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import config from '../config';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private baseUrl: string = config.apiUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${this.baseUrl}${path}`;\n    if (!(Object.keys(params).length === 0)) {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { LoginRes } from '../types/appApiTypes';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'Request for getting settings data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchItemPageFailAction());\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {}\n\nconst fetchItemPageFailAction = (): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { PropsWithChildren } from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\n\nconst themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: 'white',\n    },\n  },\n});\n\nexport type Props = PropsWithChildren<{\n  load: () => void;\n  alreadyLoaded: boolean;\n  loading: boolean;\n}>;\n\nclass BasePageComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    if (!this.props.alreadyLoaded) {\n      this.props.load();\n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\">\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport { BasePageComponent };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { BasePageComponent } from '../components/BasePageComponent';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from '../reducers/authStatusReducer';\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/register', payload)\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction {\n  type: typeof REGISTER_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction {\n  type: typeof REGISTER_FAIL;\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErros: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErros,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction, State } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<State, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n    console.log(imagePreviewUrl);\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId);\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { SellReq, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    const payload: SellReq = {\n      name,\n      description,\n      price,\n      category_id: categoryId,\n    };\n    AppClient.post('/sell', payload)\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new Error('HTTP status not 200');\n        }\n        return response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.top.path)); // TODO\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction {\n  type: typeof SELLING_ITEM_SUCCESS;\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction {\n  type: typeof SELLING_ITEM_FAIL;\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\n\nexport const FETCH_ITEM_PAGE_START = 'FETCH_ITEM_PAGE_START';\nexport const FETCH_ITEM_PAGE_SUCCESS = 'FETCH_ITEM_PAGE_SUCCESS';\nexport const FETCH_ITEM_PAGE_FAIL = 'FETCH_ITEM_PAGE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function fetchItemPageAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchItemPageStartAction());\n    })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemPageSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl:\n              'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchItemPageFailAction());\n      });\n  };\n}\n\nexport interface FetchItemPageStartAction\n  extends Action<typeof FETCH_ITEM_PAGE_START> {}\n\nconst fetchItemPageStartAction = (): FetchItemPageStartAction => {\n  return {\n    type: FETCH_ITEM_PAGE_START,\n  };\n};\n\nexport interface FetchItemPageSuccessAction\n  extends Action<typeof FETCH_ITEM_PAGE_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemPageSuccessAction = (\n  item: ItemData,\n): FetchItemPageSuccessAction => {\n  return {\n    type: FETCH_ITEM_PAGE_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemPageFailAction\n  extends Action<typeof FETCH_ITEM_PAGE_FAIL> {}\n\nconst fetchItemPageFailAction = (): FetchItemPageFailAction => {\n  return {\n    type: FETCH_ITEM_PAGE_FAIL,\n  };\n};\n","import {\n  INTERNAL_SERVER_ERROR,\n  InternalServerErrorAction,\n  NOT_FOUND_ERROR,\n  NotFoundErrorAction,\n} from '../actions/errorAction';\nimport {\n  FETCH_ITEM_PAGE_FAIL,\n  FetchItemPageFailAction,\n} from '../actions/fetchItemPageAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FetchSettingsFailAction,\n} from '../actions/settingsAction';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\ntype errorActions =\n  | NotFoundErrorAction\n  | InternalServerErrorAction\n  | FetchItemPageFailAction\n  | FetchSettingsFailAction;\n\nconst error = (\n  state: ErrorState = initialState,\n  action: errorActions,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_PAGE_FAIL:\n    case FETCH_SETTINGS_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => (\n    <div>404 Not Found</div>\n);\n\nexport default NotFoundPage;","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n    <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport InternalServerErrorPage from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemEditPage: React.FC = () => (\n  <BasePageContainer>\n    <div>Item Edit Page</div>\n  </BasePageContainer>\n);\n\nexport default ItemEditPage;\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    button: {\n      margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button\n          className={classes.button}\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(LoadingButtonComponent);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport LoadingButton from './LoadingButtonComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const {\n      item: { id },\n    } = this.props;\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors.cardError;\n    const appError = errors.buyError;\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`¥${item.price}`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseUrl: string = config.paymentUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string): Promise<Response> {\n    return await fetch(`${this.baseUrl}${path}`, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n}\n\nexport default new PaymentClient();\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { Action, AnyAction } from 'redux';\nimport { BuyReq } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch((err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            return res.json().then((body: any) => {\n              if (body && body.error) {\n                dispatch(action(body.error));\n                return;\n              }\n\n              dispatch(action(err.message));\n            });\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\n\nconst mapStateToProps = (state: any) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemBuyPage: React.FC = () => {\n  return (\n    <BasePageContainer>\n      <ItemBuyFormContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default ItemBuyPage;\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst UserSettingPage: React.FC = () => (\n  <BasePageContainer>User setting Page</BasePageContainer>\n);\n\nexport default UserSettingPage;\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst BuyCompletePage: React.FC = () => (\n  <BasePageContainer>\n    <div>Item buying Page</div>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n    },\n    buyButton: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading } = this.props;\n\n    return (\n      <BasePageContainer>\n        {loading ? (\n          <LoadingComponent />\n        ) : (\n          <React.Fragment>\n            Item Page\n            <Typography className={classes.title} variant=\"h3\">\n              {item.name}\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item>\n                <img\n                  className={classes.itemImage}\n                  alt={item.name}\n                  src={item.thumbnailUrl}\n                />\n              </Grid>\n              <Grid item xs={12} sm container>\n                <Grid item xs container direction=\"column\" spacing={2}>\n                  <Grid item xs>\n                    <div className={classes.descSection}>\n                      <Typography variant=\"h4\">商品説明</Typography>\n                      <Divider className={classes.divider} variant=\"middle\" />\n                      <Typography variant=\"body1\">\n                        {item.description}\n                      </Typography>\n                    </div>\n\n                    <div className={classes.descSection}>\n                      <Typography variant=\"h4\">カテゴリ</Typography>\n                      <Divider className={classes.divider} variant=\"middle\" />\n                      <Typography variant=\"body1\">\n                        <Link\n                          to={routes.categoryTimeline.getPath(\n                            item.category.parentId,\n                          )}\n                        >\n                          {item.category.parentCategoryName}\n                        </Link>{' '}\n                        > {item.category.categoryName}\n                      </Typography>\n                    </div>\n\n                    <div className={classes.descSection}>\n                      <Typography variant=\"h4\">出品者</Typography>\n                      <Divider className={classes.divider} variant=\"middle\" />\n                      <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        wrap=\"nowrap\"\n                        spacing={2}\n                      >\n                        <Grid item>\n                          <RouteLink\n                            className={classes.link}\n                            to={routes.user.getPath(item.sellerId)}\n                          >\n                            <Avatar className={classes.avatar}>\n                              {item.seller.accountName.charAt(0)}\n                            </Avatar>\n                          </RouteLink>\n                        </Grid>\n                        <Grid item xs>\n                          <Typography variant=\"body1\">\n                            {item.seller.accountName}\n                          </Typography>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n              <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n                <Grid item>\n                  <Typography variant=\"h5\">¥{item.price}</Typography>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    className={classes.buyButton}\n                    onClick={this._onClickBuyButton}\n                  >\n                    購入\n                  </Button>\n                </Grid>\n              </Grid>\n            </AppBar>\n          </React.Fragment>\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemPageAction } from '../actions/fetchItemPageAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemPageLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemPageAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\n\nconst useStyles = makeStyles(theme => ({\n  itemImage: {\n    height: '100%',\n  },\n}));\n\ninterface ItemComponentProps {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n  itemId,\n  imageUrl,\n  title,\n  price,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <RouteLink to={routes.item.getPath(itemId)}>\n        <img className={classes.itemImage} src={imageUrl} alt={title} />\n      </RouteLink>\n      <GridListTileBar title={title} subtitle={`¥${price}`} />\n    </Card>\n  );\n};\n\nexport { ItemComponent };\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '300px',\n    height: '300px',\n  },\n}));\n\ninterface ItemListPageProps {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number, createdAt?: number, itemId?: number) => void;\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = function ({\n  items,\n  hasNext,\n  loadMore\n}: ItemListPageProps) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <ItemComponent\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n        />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={3}>{itemComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemListComponent };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"secondary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport {createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport LoadingComponent from \"../components/LoadingComponent\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items } = this.props;\n\n    const Content: React.FC<{}> = () => items.length === 0 ? (\n        <div className={classes.root}>\n          <Typography variant=\"h5\">出品されている商品はありません</Typography>\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <ItemListComponent {...this.props} />\n          <SellingButtonContainer/>\n        </div>\n      );\n\n    return (\n      <BasePageContainer>\n        {\n          loading ? (\n            <LoadingComponent/>\n          ) : (\n            <Content />\n          )\n        }\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\ntype Actions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchTimelineStartAction());\n    })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting timeline item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl:\n                'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchTimelineFailAction());\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {}\n\nconst fetchTimelineFailAction = (): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n  };\n};\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    error,\n    page,\n    buyPage,\n    categories,\n    timeline,\n  });\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport {fetchTimelineAction} from \"../actions/fetchTimelineAction\";\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  }\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (page: number, createdAt?: number, itemId?: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\n\ntype Props = {} & ErrorProps;\n\nconst TransactionPage: React.FC<Props> = () => (\n  <BasePageContainer>\n    <div>Transaction Page</div>\n  </BasePageContainer>\n);\n\nexport default PageComponentWithError<Props>()(TransactionPage);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  errorType: state.error.errorType,\n  loading: false, // TODO state.page.isLoading,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import {ItemData} from \"./dataObjects/item\";\nimport {UserData} from \"./dataObjects/user\";\n\nexport const mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n    numSellItems: 0,\n};\n\n\nexport const mockItems: ItemData[] = [\n    {\n        id: 1,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n        category: {\n            id: 1,\n            categoryName: 'カテゴリ1',\n            parentId: 2,\n            parentCategoryName: '親カテゴリ',\n        },\n        createdAt: 10000,\n    },\n    {\n        id: 2,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n        category: {\n            id: 1,\n            categoryName: 'カテゴリ1',\n            parentId: 2,\n            parentCategoryName: '親カテゴリ',\n        },\n        createdAt: 10000,\n    },\n    {\n        id: 3,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n        category: {\n            id: 1,\n            categoryName: 'カテゴリ1',\n            parentId: 2,\n            parentCategoryName: '親カテゴリ',\n        },\n        createdAt: 10000,\n    },\n    {\n        id: 4,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n        category: {\n            id: 1,\n            categoryName: 'カテゴリ1',\n            parentId: 2,\n            parentCategoryName: '親カテゴリ',\n        },\n        createdAt: 10000,\n    },\n];","import React from 'react';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport { ItemData } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  itemList: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\ntype Props = {\n  items: ItemData[];\n  user: UserData;\n} & ErrorProps;\n\nconst UserPage: React.FC<Props> = ({ items, user }) => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <p>User Page</p>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item>\n          <Avatar className={classes.avatar}>\n            {user.accountName.charAt(0)}\n          </Avatar>\n        </Grid>\n        <Grid item xs>\n          <Typography variant=\"h3\">{user.accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <div className={classes.itemList}>\n        <ItemListComponent\n          items={items}\n          hasNext={false/* TODO */}\n          loadMore={(page: number) => {}/* TODO */}\n        />\n      </div>\n      <SellingButtonContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(UserPage);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { mockItems, mockUser } from '../mocks';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  items: mockItems, // TODO\n  user: mockUser,\n  errorType: state.error.errorType,\n  loading: false, // TODO state.page.isLoading,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport {Redirect, Route, RouteProps} from \"react-router\";\nimport {routes} from \"../../routes/Route\";\n\ntype Props = {\n    isLoggedIn: boolean\n} & RouteProps\n\nconst AuthRoute: React.FC<Props> = ({ component: Component, isLoggedIn, ...rest}) => {\n    if (!Component) {\n        throw new Error('component attribute required for AuthRoute component');\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={routes.login.path}/>\n                )\n            }\n        />\n    );\n};\n\nexport { AuthRoute }","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport {Redirect, Route, RouteProps} from \"react-router\";\nimport {routes} from \"../../routes/Route\";\n\ntype Props = {\n    isLoggedIn: boolean\n} & RouteProps\n\nconst NonAuthRoute: React.FC<Props> = ({ component: Component, isLoggedIn, ...rest}) => {\n    if (!Component) {\n        throw new Error('component attribute required for NonAuthRoute component');\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                !isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={routes.timeline.path}/>\n                )\n            }\n        />\n    );\n};\n\nexport { NonAuthRoute }","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">ついにリリース！</Typography>\n          <Typography variant=\"h6\">\n            椅子限定C2CのECサービス カードで簡単決済。\n          </Typography>\n          <Typography variant=\"h6\">\n            もちろんセキュリティも万全。 お互いの住所を知らなくても配送可能。\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemEditPage from '../pages/ItemEditPage';\nimport ItemBuyPage from '../pages/ItemBuyPage';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:transaction_id',\n    getPath: (transactionId: number) => `/transactions/${transactionId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />\n      <AuthRoute exact path={routes.itemEdit.path} component={ItemEditPage} />\n      <AuthRoute exact path={routes.buy.path} component={ItemBuyPage} />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompletePage}\n      />\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport {AppRoute} from \"./routes/Route\";\n\nconst routes: Array<{\n    path: string,\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        pageName: 'Top page'\n    },\n    {\n        path: '/login',\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/register',\n        pageName: 'Sign up page',\n    },\n    {\n        path: '/timeline',\n        pageName: 'Timeline page'\n    },\n    {\n        path: '/items/:item_id',\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/items/:item_id/buy',\n        pageName: 'Item buy page',\n    },\n    {\n        path: '/buy/complete',\n        pageName: 'Buying complete page',\n    },\n    {\n        path: '/sell',\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        pageName: 'User page',\n    },\n    {\n        path: '/users/setting',\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => React.ReactNode[] = () => {\n    const routeComponents: React.ReactNode[] = [];\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li key={route.pageName}>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC<{}> = () => (\n    <React.Fragment>\n        <div>\n            <ul>\n                {getLinks()}\n            </ul>\n        </div>\n        <hr />\n        <AppRoute/>\n    </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport { Middleware } from 'redux';\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;\n","import { AnyAction, Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<AnyAction>) => (\n  action: any,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import {\n  LOGIN_SUCCESS,\n  LoginSuccessAction,\n} from '../actions/authenticationActions';\nimport {\n  REGISTER_SUCCESS,\n  RegisterSuccessAction,\n} from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\ntype Actions =\n  | LoginSuccessAction\n  | RegisterSuccessAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: Actions,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { AnyAction } from 'redux';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: AnyAction,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { AnyAction } from 'redux';\nimport { ItemData } from '../dataObjects/item';\nimport {\n  FETCH_ITEM_PAGE_SUCCESS,\n  FetchItemPageSuccessAction,\n} from '../actions/fetchItemPageAction';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\ntype actions = AnyAction | FetchItemPageSuccessAction;\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: actions,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_PAGE_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { AnyAction } from 'redux';\nimport {\n  FETCH_ITEM_PAGE_FAIL,\n  FETCH_ITEM_PAGE_START,\n  FETCH_ITEM_PAGE_SUCCESS,\n} from '../actions/fetchItemPageAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n} from '../actions/settingsAction';\nimport {FETCH_TIMELINE_FAIL, FETCH_TIMELINE_START, FETCH_TIMELINE_SUCCESS} from \"../actions/fetchTimelineAction\";\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemPageLoading: boolean;\n  isTimelineLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemPageLoading: true,\n  isTimelineLoading: true,\n};\n\nconst page = (\n  state: PageState = initialState,\n  action: AnyAction,\n): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_PAGE_START:\n      return { ...state, isItemPageLoading: true };\n    case FETCH_ITEM_PAGE_SUCCESS:\n    case FETCH_ITEM_PAGE_FAIL:\n      return { ...state, isItemPageLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_START:\n      return { ...state, isTimelineLoading: true};\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { AnyAction } from 'redux';\nimport {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: AnyAction,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { AnyAction } from 'redux';\nimport { CategorySimple } from '../dataObjects/category';\nimport {\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\ntype Actions = FetchSettingsSuccessAction | AnyAction;\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: Actions,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions = FetchTimelineSuccessAction | AnyAction;\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: Actions,\n): TimelineState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したらリセットする\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { getStore } from \"./configureStore\";\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","import {applyMiddleware, createStore, Reducer, Store} from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n    return createStore(\n        reducer,\n        composeWithDevTools(\n            applyMiddleware(\n                thunk,\n                routerMiddleware(history),\n                ...middlewares,\n            ),\n        ),\n    );\n};\n"],"sourceRoot":""}