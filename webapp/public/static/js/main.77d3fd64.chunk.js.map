{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","pages/ItemPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","reducers/index.ts","pages/SellPage.tsx","pages/UserPage.tsx","components/BasePageComponent.tsx","App.tsx","pages/TopPage.tsx","pages/ItemEditPage.tsx","pages/TransactionPage.tsx","pages/UserSettingPage.tsx","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","index.tsx"],"names":["ErrorMessageComponent","_ref","errMsg","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","error","value","push","react_default","a","createElement","Typography_default","key","variant","color","err","return","Fragment","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","form","noValidate","TextField","margin","required","fullWidth","id","label","name","autoFocus","onChange","type","autoComplete","length","ErrorMessageComponent_ErrorMessageComponent","Button","onClick","submit","Grid","container","item","xs","react_router_dom","to","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","appClient","baseUrl","defaultHeaders","path","fetch","concat","method","headers","params","requestOption","mode","assign","Content-Type","credentials","body","JSON","stringify","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","response","status","Error","json","newAuthState","userId","address","payload","catch","newErros","errorMsg","message","connect","formError","useStyles","makeStyles","SignUpFormComponent","_onChangeAddress","register","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","itemImage","height","ItemComponent","itemId","imageUrl","title","price","Card","src","alt","GridListTileBar","subtitle","grid","ItemListComponent","items","itemComponents","GridListTile","ItemComponent_ItemComponent","thumbnailUrl","GridList","cols","fab","position","top","bottom","right","Fab_default","Edit","fontSize","root","flexWrap","justifyContent","overflow","mockItems","description","createdAt","maxWidth","divider","descSection","marginBottom","link","textDecoration","appBar","buyButton","mockItem","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","Paper_default","Avatar_default","Camera","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","_onChangeName","_onChangeDescription","_onChangePrice","sellItem","input","validator","isNumeric","no_symbols","Number","components_ItemImageUploadComponent","multiline","rows","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","get","ok","csrf_token","history","itemList","mockUser","themeInstance","createMuiTheme","background","default","BasePageComponent","children","MuiThemeProvider","Container","routes","pageName","SignInFormContainer","SignUpFormContainer","ItemListComponent_ItemListComponent","SellingButtonContainer","sm","Divider","wrap","AppBar","SellFormContainer","user","charAt","App","routeComponents","_i","_routes","route","getLinks","react_router","_loop","_routes2","_i2","exact","BasePageComponent_BasePageComponent","getRoutes","authStatus","arguments","action","objectSpread","initialState","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.77d3fd64.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\ninterface ErrorMessageComponentProps {\n    errMsg: string[]\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({ errMsg }) => {\n    const errors = [];\n\n    for (const error of errMsg) {\n        errors.push(\n            <Typography\n                key={error}\n                variant=\"body2\"\n                color=\"error\"\n            >\n                {error}\n            </Typography>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {errors}\n        </React.Fragment>\n    );\n};\n\nexport { ErrorMessageComponent }","import React from 'react';\n\nimport {Avatar, Typography, TextField, Button, Grid, createStyles, WithStyles} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n    onSubmit: (accountName: string, password: string) => void\n    errors: string[]\n}\n\ninterface SignInFormComponentState {\n    accountName: string,\n    password: string,\n}\n\nclass SignInPageFormComponent extends React.Component<SignInFormComponentProps, SignInFormComponentState> {\n    constructor(props: SignInFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { accountName, password } = this.state;\n        this.props.onSubmit(accountName, password);\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { accountName, password } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    ログインページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"accountName\"\n                        label=\"ユーザ名\"\n                        name=\"accountName\"\n                        autoFocus\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onSubmit}\n                        className={classes.submit}\n                    >\n                        ログイン\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to=\"/signup\">新規登録はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n}","import config from '../config';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n    private baseUrl: string = config.apiUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'same-origin',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            const body = JSON.stringify(params);\n            requestOption.body = body;\n        }\n\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new AppClient();","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postLoginAction(accountName: string, password: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/login', {\n            account_name: accountName,\n            password: password,\n        })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body) => {\n                dispatch(loginSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push('/items'))\n            })\n            .catch((err: Error) => {\n                dispatch(loginFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface LoginSuccessAction {\n    type: typeof LOGIN_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function loginSuccessAction(newAuthState: AuthStatusState): LoginSuccessAction {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface LoginFailAction {\n    type: typeof LOGIN_FAIL,\n    payload: FormErrorState,\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n    return {\n        type: LOGIN_FAIL,\n        payload: newErros,\n    };\n}\n","import SignInPageFormComponent from \"../components/SignInFormComponent\";\nimport { connect } from 'react-redux';\nimport { postLoginAction } from \"../actions/authenticationActions\";\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSubmit: (accountName: string, password: string) => {\n        dispatch(postLoginAction(accountName, password));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPageFormComponent)","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from \"../containers/SignInFormContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignInPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignInFormContainer />\n        </div>\n    );\n};\n\nexport { SignInPage }","import React from 'react';\nimport {Avatar, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {RegisterReq} from \"../types/appApiTypes\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n    register: (params: RegisterReq) => void\n    errors: string[]\n}\n\ninterface SignUpFormComponentState {\n    accountName: string,\n    address: string,\n    password: string,\n}\n\nclass SignUpFormComponent extends React.Component<SignUpFormComponentProps, SignUpFormComponentState> {\n    constructor(props: SignUpFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            address: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangeAddress = this._onChangeAddress.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.register({\n            account_name: this.state.accountName,\n            address: this.state.address,\n            password: this.state.password,\n        });\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { accountName, address, password } = this.state;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    新規登録\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"ユーザ名\"\n                        name=\"name\"\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"address\"\n                        label=\"住所\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this._onChangeAddress}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        新規登録\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to=\"/signin\">すでにアカウントをお持ちの方はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {RegisterReq, RegisterRes} from \"../types/appApiTypes\";\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/register', payload)\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: RegisterRes) => {\n                dispatch(registerSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push('/items'))\n            })\n            .catch((err: Error) => {\n                dispatch(registerFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface RegisterSuccessAction {\n    type: typeof REGISTER_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function registerSuccessAction(newAuthState: AuthStatusState): RegisterSuccessAction {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface RegisterFailAction {\n    type: typeof REGISTER_FAIL,\n    payload: FormErrorState,\n}\n\nexport function registerFailAction(newErros: FormErrorState): RegisterFailAction {\n    return {\n        type: REGISTER_FAIL,\n        payload: newErros,\n    };\n}\n","import SignUpPageFormComponent from \"../components/SignUpFormComponent\";\nimport { connect } from 'react-redux';\nimport {postRegisterAction} from \"../actions/registerAction\";\nimport {RegisterReq} from \"../types/appApiTypes\";\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    register: (params: RegisterReq) => {\n        dispatch(postRegisterAction(params));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPageFormComponent)","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SignUpFormContainer from \"../containers/SignUpFormContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignUpPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignUpFormContainer />\n        </div>\n    );\n};\n\nexport { SignUpPage }","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link as RouteLink } from 'react-router-dom'\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(theme => ({\n    itemImage: {\n        height: '100%',\n    },\n}));\n\ninterface ItemComponentProps {\n    itemId: number\n    imageUrl: string\n    title: string\n    price: number\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n    itemId, imageUrl, title, price\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <RouteLink to={`/items/${itemId}`}>\n                <img className={classes.itemImage} src={imageUrl} alt={title}/>\n            </RouteLink>\n            <GridListTileBar\n                title={title}\n                subtitle={`¥${price}`}\n            />\n        </Card>\n    );\n};\n\nexport { ItemComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        width: '300px',\n        height: '300px',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    const itemComponents = [];\n\n    for (const item of items) {\n        itemComponents.push(\n            <GridListTile className={classes.grid} key={item.id}>\n                <ItemComponent itemId={item.id} imageUrl={item.thumbnailUrl} title={item.name} price={item.price}/>\n            </GridListTile>\n        )\n    }\n\n    return (\n        <GridList cols={3}>\n            {itemComponents}\n        </GridList>\n    );\n};\n\nexport { ItemListComponent }","import React from 'react';\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Edit} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n        position: 'fixed',\n        top: 'auto',\n        bottom: '30px',\n        right: '30px',\n        width: '100px',\n        height: '100px',\n    },\n}));\n\ninterface SellingButtomComponentProps {\n    onClick: (e: React.MouseEvent) => void\n}\n\nconst SellingButonComponent: React.FC<SellingButtomComponentProps> = ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n        <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            onClick={onClick}\n        >\n            <Edit fontSize=\"large\" />\n        </Fab>\n    );\n};\n\nexport { SellingButonComponent }","import { push } from 'connected-react-router';\nimport {SellingButonComponent} from \"../components/SellingButtonComponent\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onClick: (e: React.MouseEvent) => {\n        e.preventDefault();\n        dispatch(push('/sell'));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellingButonComponent);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(1),\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst ItemListPage: React.FC/*<ItemListPageProps>*/ = (/*{ items }: ItemListPageProps*/) => {\n    const classes = useStyles();\n    const items = mockItems;\n\n    return (\n        <div className={classes.root}>\n            <ItemListComponent items={items}/>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport { ItemListPage }","import React from 'react';\nimport { ItemData } from \"../dataObjects/item\";\nimport {Typography} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        margin: theme.spacing(3),\n    },\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n    },\n    avatar: {\n        width: '50px',\n        height: '50px',\n    },\n    divider: {\n        margin: theme.spacing(1),\n    },\n    descSection: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    buyButton: {\n        margin: theme.spacing(1),\n    }\n}));\n\ninterface ItemPageProps {\n    item: ItemData\n}\n\nconst mockItem = {\n    id: 1,\n    name: 'いす',\n    price: 10000,\n    description: 'いすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすです',\n    createdAt: '2日前',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n};\n\nconst ItemPage: React.FC/*<ItemPageProps>*/ = (/*{ item }*/) => {\n    const classes = useStyles();\n\n    const item = mockItem;\n\n    return (\n        <div>\n            Item Page\n            <Typography className={classes.title} variant=\"h3\">{item.name}</Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl} />\n                </Grid>\n                <Grid item xs={12} sm container>\n                    <Grid item xs container direction=\"column\" spacing={2}>\n                        <Grid item xs>\n                            <div className={classes.descSection}>\n                                <Typography variant=\"h4\">商品説明</Typography>\n                                <Divider className={classes.divider} variant=\"middle\" />\n                                <Typography variant=\"body1\">{item.description}</Typography>\n                            </div>\n\n                            <div className={classes.descSection}>\n                                <Typography variant=\"h4\">出品者</Typography>\n                                <Divider className={classes.divider} variant=\"middle\" />\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    wrap=\"nowrap\"\n                                    spacing={2}\n                                >\n                                    <Grid item>\n                                        <RouteLink className={classes.link} to={`/users/${1}`}>\n                                            <Avatar className={classes.avatar}>\"T\"</Avatar>\n                                        </RouteLink>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\">\"TODO\"</Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\">¥{item.price}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"contained\" className={classes.buyButton}>購入</Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n        </div>\n    );\n};\n\nexport { ItemPage }","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport { Camera } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    upload: {\n        display: 'none',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n}\n\ninterface ItemImageUploadComponentState {\n    file?: File,\n    imagePreviewUrl: string,\n}\n\nclass ItemImageUploadComponent extends React.Component<ItemImageUploadComponentProps, ItemImageUploadComponentState> {\n    constructor(props: ItemImageUploadComponentProps) {\n        super(props);\n\n        this.state = {\n            imagePreviewUrl: ''\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (e.target.files === null) {\n            return;\n        }\n\n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if (typeof reader.result !== 'string') {\n                throw new Error();\n            }\n\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { imagePreviewUrl } = this.state;\n        let imagePreview = null;\n        console.log(imagePreviewUrl);\n\n        if (imagePreviewUrl) {\n            imagePreview = (<img alt=\"プレビュー\" src={imagePreviewUrl} />);\n        } else {\n            imagePreview = (\n                <Paper>\n                    <Avatar className={classes.avatar}>\n                        <Camera />\n                    </Avatar>\n                    <Typography>商品画像</Typography>\n                </Paper>\n            )\n        }\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={8}>\n                    {imagePreview}\n                </Grid>\n                <Grid item xs={4}>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.upload}\n                        id=\"outlined-button-file\"\n                        type=\"file\"\n                        onChange={this._handleImageChange}\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                            Upload\n                        </Button>\n                    </label>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\n\nimport {Typography, TextField, Button, createStyles, Theme, WithStyles} from '@material-ui/core';\nimport ItemImageUploadComponent from \"../components/ItemImageUploadComponent\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n    sellItem: (name: string, description: string, price: number) => void\n    errors: string[]\n}\n\ninterface SellFormComponentState {\n    name: string,\n    description: string,\n    price: number,\n}\n\nclass SellFormComponent extends React.Component<SellFormComponentProps, SellFormComponentState> {\n    constructor(props: SellFormComponentProps) {\n        super(props);\n\n        this.state = {\n            name: '',\n            description: '',\n            price: 0,\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeDescription = this._onChangeDescription.bind(this);\n        this._onChangePrice = this._onChangePrice.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { name, description, price } = this.state;\n        this.props.sellItem(name, description, price);\n    }\n\n    _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n        const input = e.target.value;\n\n        // Only allow number\n        if (!validator.isNumeric(input, { no_symbols: true })) {\n            e.preventDefault();\n            return;\n        }\n\n        this.setState({\n            price: Number(input),\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { name, description, price } = this.state;\n\n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h5\">\n                    出品ページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <ItemImageUploadComponent/>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"商品名\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this._onChangeName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"商品説明\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this._onChangeDescription}\n                        multiline\n                        rows={5}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"値段\"\n                        name=\"price\"\n                        value={price}\n                        onChange={this._onChangePrice}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        出品する\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SellFormComponent)\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {SellReq, SellRes, SettingsRes} from \"../types/appApiTypes\";\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function listItemAction(name: string, description: string, price: number): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.get('/settings')\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('CSRF tokenの取得に失敗しました');\n                }\n                return response.json();\n            })\n            .then((body: SettingsRes) => {\n                const payload: SellReq = {\n                    name, description, price,\n                    csrf_token: body.csrf_token,\n                };\n                return AppClient.post('/sell', payload);\n            })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: SellRes) => {\n                dispatch(sellingSuccessAction(body.id));\n                dispatch(push('/items')); // TODO\n            })\n            .catch((err: Error) => {\n                dispatch(sellingFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface SellingSuccessAction {\n    type: typeof SELLING_ITEM_SUCCESS,\n    payload: {\n        itemId: number,\n    },\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n    return {\n        type: SELLING_ITEM_SUCCESS,\n        payload: { itemId },\n    };\n}\n\nexport interface SellingFailAction {\n    type: typeof SELLING_ITEM_FAIL,\n    payload: FormErrorState,\n}\n\nexport function sellingFailAction(newErros: FormErrorState): SellingFailAction {\n    return {\n        type: SELLING_ITEM_FAIL,\n        payload: newErros,\n    };\n}\n","import {connect} from \"react-redux\";\nimport SellFormComponent from \"../components/SellFormComponent\";\nimport {listItemAction} from \"../actions/sellingItemAction\";\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    sellItem: (name: string, description: string, price: number) => {\n        dispatch(listItemAction(name, description, price));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellFormComponent);\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) => combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n});\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from \"../containers/SellFormContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SellPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SellFormContainer />\n        </div>\n    );\n};\n\nexport { SellPage }\n","import React from 'react';\nimport { ItemListComponent } from \"../components/ItemListComponent\";\nimport { ItemData } from \"../dataObjects/item\";\nimport { UserData } from \"../dataObjects/user\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    avatar: {\n        margin: theme.spacing(3),\n        width: '100px',\n        height: '100px',\n    },\n    itemList: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\ninterface UserPageProps {\n    items: ItemData[]\n    user: UserData\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n};\n\nconst UserPage: React.FC/*<UserPageProps>*/ = (/*{ items, user }*/) => {\n    const classes = useStyles();\n    const user = mockUser;\n    const items = mockItems;\n\n    return (\n        <div>\n            <p>User Page</p>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={2}\n            >\n                <Grid item>\n                    <Avatar className={classes.avatar}>{user.accountName.charAt(0)}</Avatar>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h3\">{user.accountName}</Typography>\n                </Grid>\n            </Grid>\n            <Divider variant=\"middle\" />\n            <div className={classes.itemList}>\n                <ItemListComponent items={items}/>\n            </div>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport { UserPage }","import React from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\n\nconst themeInstance = createMuiTheme({\n    palette: {\n        background: {\n            default: 'white'\n        },\n    },\n});\n\nconst BasePageComponent: React.FC = ({children}) => (\n    <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\" children={children} />\n    </MuiThemeProvider>\n);\n\nexport { BasePageComponent }","import React from 'react';\nimport {Route, Link, Switch} from 'react-router-dom';\n\nimport './App.css';\nimport { TopPage } from \"./pages/TopPage\";\nimport { SignInPage } from \"./pages/SignInPage\";\nimport { SignUpPage } from \"./pages/SignUpPage\";\nimport { ItemListPage } from \"./pages/ItemListPage\";\nimport { ItemPage } from \"./pages/ItemPage\";\nimport { ItemEditPage } from \"./pages/ItemEditPage\";\nimport { SellPage } from \"./pages/SellPage\";\nimport { TransactionPage } from \"./pages/TransactionPage\";\nimport { UserPage } from \"./pages/UserPage\";\nimport { UserSettingPage } from \"./pages/UserSettingPage\";\nimport { BasePageComponent } from \"./components/BasePageComponent\";\n\nconst routes: Array<{\n    path: string,\n    component: any, // todo\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        component: TopPage,\n        pageName: 'Top page'\n    },\n    {\n        path: '/signin',\n        component: SignInPage,\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/signup',\n        component: SignUpPage,\n        pageName: 'Sign up page',\n    }, {\n        path: '/items',\n        component: ItemListPage,\n        pageName: 'Item list page',\n    },\n    {\n        path: '/items/:item_id',\n        component: ItemPage,\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        component: ItemEditPage,\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/sell',\n        component: SellPage,\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        component: TransactionPage,\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        component: UserPage,\n        pageName: 'User page',\n    },\n    {\n        path: '/users/:user_id/setting',\n        component: UserSettingPage,\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => any[] = () => {\n    const routeComponents: any[] = []; // TODO\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst getRoutes: () => any[] = () => {\n    const routeComponents: any[] = []; // TODO\n\n    for (const route of routes) {\n        const component: React.FC = () => (\n            <BasePageComponent>\n                {route.component()}\n            </BasePageComponent>\n        );\n        routeComponents.push(\n            <Route exact path={route.path} component={component} />\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC = () => {\n    return (\n        <div>\n            <div>\n                <ul>\n                    {getLinks()}\n                </ul>\n            </div>\n\n            <hr />\n\n            <Switch>\n                {getRoutes()}\n            </Switch>\n        </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nconst TopPage: React.FC = () => (\n    <div>Top Page</div>\n);\n\nexport { TopPage }","import React from 'react';\n\nconst ItemEditPage: React.FC = () => (\n    <div>Item Edit Page</div>\n);\n\nexport { ItemEditPage }","import React from 'react';\n\nconst TransactionPage: React.FC = () => (\n    <div>Transaction Page</div>\n);\n\nexport { TransactionPage }","import React from 'react';\n\nconst UserSettingPage: React.FC = () => (\n    <div>User setting Page</div>\n);\n\nexport { UserSettingPage }","import {LOGIN_SUCCESS} from \"../actions/authenticationActions\";\nimport {REGISTER_SUCCESS} from \"../actions/registerAction\";\nimport {AnyAction} from \"redux\";\n\n\nexport interface AuthStatusState {\n    userId?: number\n    accountName?: string\n    address?: string,\n}\n\nconst authStatus = (state: AuthStatusState = {}, action: AnyAction): AuthStatusState => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default authStatus;","import {LOGIN_FAIL} from \"../actions/authenticationActions\";\nimport { AnyAction } from \"redux\";\nimport {REGISTER_FAIL} from \"../actions/registerAction\";\n\nexport interface FormErrorState {\n    errorMsg: string[],\n}\n\nconst initialState: FormErrorState = {\n    errorMsg: []\n};\n\nconst formError = (state: FormErrorState = initialState, action: AnyAction): FormErrorState => {\n    switch (action.type) {\n        case LOGIN_FAIL:\n        case REGISTER_FAIL: {\n            return {\n                ...action.payload,\n            }\n        }\n        default:\n            return initialState;\n    }\n};\n\nexport default formError;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport createRootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n    createRootReducer(history),\n    composeWithDevTools(\n        applyMiddleware(\n            thunk,\n            routerMiddleware(history),\n        ),\n    ),\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}