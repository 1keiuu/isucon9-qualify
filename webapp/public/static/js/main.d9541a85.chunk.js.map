{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","actions/settingsAction.ts","components/LoadingComponent.tsx","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","actions/postShippedAction.ts","actions/postShippedDoneAction.ts","actions/postCompleteAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","reducers/index.ts","pages/ItemBuyPage.tsx","pages/UserSettingPage.tsx","components/ItemFooterComponent.tsx","pages/ItemPage.tsx","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","components/Transaction/SellerComponent.tsx","containers/SellerTransactionContainer.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","components/Transaction/BuyerComponent.tsx","containers/BuyerTransactionContainer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabelComponent.tsx","components/TransactionComponent.tsx","components/TransactionListComponent.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","baseUrl","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","status","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","fetchSettingStartAction","fetchSettingsSuccessAction","settings","fetchItemPageFailAction","newError","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","themeInstance","createMuiTheme","background","default","BasePageComponent","alreadyLoaded","load","MuiThemeProvider","Container","maxWidth","loading","components_LoadingComponent","children","page","isLoading","authStatus","checked","Promise","resolve","get","user","numSellItems","num_sell_items","csrfToken","categories","map","category","parentId","parent_id","categoryName","category_name","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","newErrors","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","selectedCategoryId","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","category_id","itemId","filter","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemAction","fetchItemStartAction","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","item_id","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","_callee","isMyPage","userDataRes","userData","transactions","transactionRes","regenerator_default","wrap","_context","prev","next","sent","abrupt","stop","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPaggeData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","objectSpread","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","ItemEditPage","LoadingButtonComponent","_onClick","buttonName","react","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","paymentClient","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","token","buyComplete","action","getResponse","usingCardFailAction","buyFailAction","buyFormError","history","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","UserSettingPage","appBar","buyButton","ItemFooterComponent","buttonText","AppBar","ItemPage","match","onClickBuy","onClickItemEdit","onClickTransaction","viewer","disableButton","_onClickItemEditButton","_onClickTransaction","title","sm","descSection","Divider","divider","categoryTimeline","getPath","link","charAt","components_ItemFooterComponent","marginBottom","textDecoration","isItemLoading","buy","itemEdit","transaction","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","GridListTile","ItemComponent_ItemComponent","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","root","lastItem","loadMoreItems","ItemListComponent_ItemListComponent","SellingButtonContainer","flexWrap","justifyContent","overflow","timeline","isTimelineLoading","Initial","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","SellerComponent","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","postShipped","postComplete","BuyerComponent","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","TransactionPage","TransactionComponent","auth","error_NotFoundPage","error_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","soldOutLabel","primary","light","grey","A100","tradingLabel","TransactionLabel","card","CardMedia_default","image","CardContent_default","TransactionLabelComponent_TransactionLabel","TransactionListComponent","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionListComponent_TransactionListComponent","_this$props3","AppBar_default","tab","Tabs_default","Tab_default","list","hidden","_getItemList","_getTransactionsList","text","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","isLoggedIn","rest","objectWithoutProperties","react_router","render","textarea","img","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","categoryIdIsValid","BuyCompletePage","userSetting","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemPageContainer","BuyCompleteContainer","TransactionPageContainer","UserPageContainer","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","getState","group","info","groupEnd","initialState","userPayload","LOCATION_CHANGE","location","pathname","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d9541a85.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n  apiUrl: 'http://localhost:8000', // TODO fix\n  paymentUrl: 'http://localhost:5555',\n};\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import config from '../config';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private baseUrl: string = config.apiUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${this.baseUrl}${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { LoginRes } from '../types/appApiTypes';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'Request for getting settings data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchItemPageFailAction({\n          error: err.message\n        }));\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  payload: FormErrorState\n}\n\nconst fetchItemPageFailAction = (newError: FormErrorState): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n  payload: newError\n});\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import React, { PropsWithChildren } from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\n\nconst themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: 'white',\n    },\n  },\n});\n\nexport type Props = PropsWithChildren<{\n  load: () => void;\n  alreadyLoaded: boolean;\n  loading: boolean;\n}>;\n\nclass BasePageComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    if (!this.props.alreadyLoaded) {\n      this.props.load();\n    }\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\">\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport { BasePageComponent };\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchSettings } from '../actions/settingsAction';\nimport { BasePageComponent } from '../components/BasePageComponent';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from '../reducers/authStatusReducer';\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/register', payload)\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction {\n  type: typeof REGISTER_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction {\n  type: typeof REGISTER_FAIL;\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErrors: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErrors,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction, State } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<State, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n    console.log(imagePreviewUrl);\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId);\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { SellReq, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    const payload: SellReq = {\n      name,\n      description,\n      price,\n      category_id: categoryId,\n    };\n    AppClient.post('/sell', payload)\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new Error('HTTP status not 200');\n        }\n        return response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.top.path)); // TODO\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction {\n  type: typeof SELLING_ITEM_SUCCESS;\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction {\n  type: typeof SELLING_ITEM_FAIL;\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchItemStartAction());\n    })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl:\n              'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchItemFailAction({\n          error: err.message\n        }));\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  payload: FormErrorState,\n}\n\nconst fetchItemFailAction = (newError: FormErrorState): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ShipReq, ShipRes } from '../types/appApiTypes';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends Action<typeof POST_SHIPPED_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedFailAction(\n  newErrors: FormErrorState,\n): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedDoneFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends Action<typeof POST_SHIPPED_DONE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedDoneFailAction(\n  newErrors: FormErrorState,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { CompleteReq, CompleteRes } from '../types/appApiTypes';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then((response: Response) => {\n        if (response.status !== 200) {\n          throw new Error('HTTP status not 200');\n        }\n\n        return response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postCompleteFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends Action<typeof POST_COMPLETE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postCompleteFailAction(\n  newErros: FormErrorState,\n): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    payload: newErros,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TransactionItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\ntype Actions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchTransactionsStartAction());\n    })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Transactions not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting transaction list data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl:\n                'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchTransactionsFailAction({\n          error: err.message,\n        }));\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  payload: FormErrorState\n}\n\nconst fetchTransactionsFailAction = (\n  newErrors: FormErrorState\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    payload: newErrors\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { ItemSimple, UserItemsReq, UserItemsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\ntype Actions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchUserItemsStartAction());\n    })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('UserItems not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting transaction list data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl:\n                'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchUserItemsFailAction({\n          error: err.message\n        }));\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  payload: FormErrorState\n}\n\nconst fetchUserItemsFailAction = (newError: FormErrorState): FetchUserItemsFailAction => {\n  return {\n    type: FETCH_USER_ITEMS_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type Actions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nasync function fetchUserPaggeData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  if (!userDataRes.ok) {\n    throw new AppResponseError(\n      `Fetching data from /users/${userId} was failed`,\n      userDataRes,\n    );\n  }\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    if (!transactionRes.ok) {\n      throw new AppResponseError(\n        `Fetching data from /users/transactions.json was failed`,\n        transactionRes,\n      );\n    }\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchUserPageDataStartAction());\n    })\n      .then(() => {\n        return fetchUserPaggeData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl:\n              'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl:\n                'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchUserPageDataFailAction({\n          error: err.message\n        }));\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  payload: FormErrorState\n}\n\nconst fetchUserPageDataFailAction = (newError: FormErrorState): FetchUserPageDataFailAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_FAIL,\n    payload: newError\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport {FormErrorState} from \"../reducers/formErrorReducer\";\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\ntype Actions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve(() => {\n      dispatch(fetchTimelineStartAction());\n    })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          throw new AppResponseError(\n            'Request for getting timeline item data was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl:\n                'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(fetchTimelineFailAction({\n          error: err.message,\n        }));\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTimelineFailAction = (\n  newErrors: FormErrorState\n): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    payload: newErrors,\n  };\n};\n","import {\n  INTERNAL_SERVER_ERROR,\n  InternalServerErrorAction,\n  NOT_FOUND_ERROR,\n  NotFoundErrorAction,\n} from '../actions/errorAction';\nimport {\n  FETCH_ITEM_FAIL,\n  FetchItemFailAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FetchSettingsFailAction,\n} from '../actions/settingsAction';\nimport {\n  POST_SHIPPED_FAIL,\n  PostShippedFailAction,\n} from '../actions/postShippedAction';\nimport {POST_SHIPPED_DONE_FAIL, PostShippedDoneFailAction} from '../actions/postShippedDoneAction';\nimport {POST_COMPLETE_FAIL, PostCompleteFailAction} from '../actions/postCompleteAction';\nimport {FETCH_TRANSACTIONS_FAIL, FetchTransactionsFailAction} from \"../actions/fetchTransactionsAction\";\nimport {FETCH_USER_ITEMS_FAIL, FetchUserItemsFailAction} from \"../actions/fetchUserItemsAction\";\nimport {FETCH_USER_PAGE_DATA_FAIL, FetchUserPageDataFailAction} from \"../actions/fetchUserPageDataAction\";\nimport {FETCH_TIMELINE_FAIL, FetchTimelineFailAction} from \"../actions/fetchTimelineAction\";\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\ntype errorActions =\n  | NotFoundErrorAction\n  | InternalServerErrorAction\n  | FetchItemFailAction\n  | FetchTimelineFailAction\n  | FetchTransactionsFailAction\n  | FetchUserItemsFailAction\n  | FetchUserPageDataFailAction\n  | FetchSettingsFailAction\n  | PostShippedFailAction\n  | PostShippedDoneFailAction\n  | PostCompleteFailAction;\n\nconst error = (\n  state: ErrorState = initialState,\n  action: errorActions,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_COMPLETE_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => <div>404 Not Found</div>;\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n  <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport InternalServerErrorPage from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemEditPage: React.FC = () => (\n  <BasePageContainer>\n    <div>Item Edit Page</div>\n  </BasePageContainer>\n);\n\nexport default ItemEditPage;\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    button: {\n      margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button\n          className={classes.button}\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(LoadingButtonComponent);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport LoadingButton from './LoadingButtonComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const {\n      item: { id },\n    } = this.props;\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors.cardError;\n    const appError = errors.buyError;\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseUrl: string = config.paymentUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string): Promise<Response> {\n    return await fetch(`${this.baseUrl}${path}`, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n}\n\nexport default new PaymentClient();\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { Action, AnyAction } from 'redux';\nimport { BuyReq } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch((err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            return res.json().then((body: any) => {\n              if (body && body.error) {\n                dispatch(action(body.error));\n                return;\n              }\n\n              dispatch(action(err.message));\n            });\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\n\nconst mapStateToProps = (state: any) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemBuyPage: React.FC = () => {\n  return (\n    <BasePageContainer>\n      <ItemBuyFormContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default ItemBuyPage;\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst UserSettingPage: React.FC = () => (\n  <BasePageContainer>User setting Page</BasePageContainer>\n);\n\nexport default UserSettingPage;\n","import { AppBar } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  onClick: (e: React.MouseEvent) => void;\n  buttonText: string;\n  disabled: boolean;\n};\n\nconst ItemFooterComponent: React.FC<Props> = ({\n  price,\n  onClick,\n  buttonText,\n  disabled,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            className={classes.buyButton}\n            onClick={onClick}\n            disabled={disabled}\n          >\n            {buttonText}\n          </Button>\n        </Grid>\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default ItemFooterComponent;\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport ItemFooterComponent from '../components/ItemFooterComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let onClick: (e: React.MouseEvent) => void = this._onClickBuyButton;\n    let buttonText: string = '購入';\n    let disableButton: boolean = false;\n\n    // 自分の商品で出品中なら編集画面へ遷移\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      onClick = this._onClickItemEditButton;\n      buttonText = '商品編集';\n    }\n\n    // 出品者 or 購入者で取引中なら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      item.status === 'trading'\n    ) {\n      onClick = this._onClickTransaction;\n      buttonText = '取引画面';\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      onClick = (e: React.MouseEvent) => {};\n      buttonText = '売り切れ';\n      disableButton = true;\n    }\n\n    return (\n      <BasePageContainer>\n        Item Page\n        <Typography className={classes.title} variant=\"h3\">\n          {item.name}\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            <img\n              className={classes.itemImage}\n              alt={item.name}\n              src={item.thumbnailUrl}\n            />\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">商品説明</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">{item.description}</Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">カテゴリ</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">\n                    <Link\n                      to={routes.categoryTimeline.getPath(\n                        item.category.parentId,\n                      )}\n                    >\n                      {item.category.parentCategoryName}\n                    </Link>{' '}\n                    > {item.category.categoryName}\n                  </Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">出品者</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    wrap=\"nowrap\"\n                    spacing={2}\n                  >\n                    <Grid item>\n                      <RouteLink\n                        className={classes.link}\n                        to={routes.user.getPath(item.sellerId)}\n                      >\n                        <Avatar className={classes.avatar}>\n                          {item.seller.accountName.charAt(0)}\n                        </Avatar>\n                      </RouteLink>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography variant=\"body1\">\n                        {item.seller.accountName}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <ItemFooterComponent\n          price={item.price}\n          onClick={onClick}\n          buttonText={buttonText}\n          disabled={disableButton}\n        />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\n\nconst useStyles = makeStyles(theme => ({\n  itemImage: {\n    height: '100%',\n  },\n}));\n\ninterface ItemComponentProps {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n  itemId,\n  imageUrl,\n  title,\n  price,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <RouteLink to={routes.item.getPath(itemId)}>\n        <img className={classes.itemImage} src={imageUrl} alt={title} />\n      </RouteLink>\n      <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n    </Card>\n  );\n};\n\nexport { ItemComponent };\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '300px',\n    height: '300px',\n  },\n}));\n\ninterface ItemListPageProps {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = function({\n  items,\n  hasNext,\n  loadMore,\n}: ItemListPageProps) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <ItemComponent\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={3}>{itemComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemListComponent };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"secondary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemListComponent\n            items={items}\n            loadMore={loadMoreItems}\n            hasNext={hasNext}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">\n        購入者が発送予約をするまでお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">購入者の発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">\n        配達員にこちらのQRコードを見せて発送した後、下記の発送完了を押してください\n      </Typography>\n      <img src={qrCodeUrl} alt=\"QRコード\" />\n      <Button onClick={onClick}>発送完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Seller/Initial';\nimport WaitShipping from './Seller/WaitShipping';\nimport WaitDone from './Seller/WaitDone';\nimport Done from './Seller/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst SellerComponent: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport default SellerComponent;\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport SellerComponent from '../components/Transaction/SellerComponent';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellerComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">発送予約の手続きをしてください</Typography>\n      <Button onClick={onClick}>発送予約</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">出品者からの発送をお待ちください</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、受取完了ボタンを押してください\n      </Typography>\n      <Button onClick={onClick}>受取完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Buyer/Initial';\nimport WaitShipping from './Buyer/WaitShipping';\nimport WaitDone from './Buyer/WaitDone';\nimport Done from './Buyer/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst BuyerComponent: React.FC<Props> = ({\n  itemId,\n  postShipped,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport default BuyerComponent;\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport BuyerComponent from '../components/Transaction/BuyerComponent';\nimport { postShippedAction } from '../actions/postShippedAction';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyerComponent);\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport NotFoundPage from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\n\ntype Props = {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n} & RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        // TODO: pass error message\n        <InternalServerErrorPage />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage />;\n    }\n\n    return <BasePageContainer>{TransactionComponent}</BasePageContainer>;\n  }\n}\n\nexport default PageComponentWithError<Props>()(TransactionPage);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport Paper from '@material-ui/core/Paper/Paper';\n\nconst useStyles = makeStyles(theme => ({\n  soldOutLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.grey.A100,\n  },\n  tradingLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\ntype Props = {\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst TransactionLabel: React.FC<Props> = ({\n  transactionStatus,\n  shippingStatus,\n}: Props) => {\n  const classes = useStyles();\n\n  if (transactionStatus === 'done' && shippingStatus === 'done') {\n    return <Paper className={classes.soldOutLabel}>売却済</Paper>;\n  }\n\n  return <Paper className={classes.tradingLabel}>取引中</Paper>;\n};\n\nexport { TransactionLabel };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\nimport { TransactionItem } from '../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from './TransactionLabelComponent';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: 'flex',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={routes.transaction.getPath(item.id)}>\n        <Card>\n          <CardMedia image={item.thumbnailUrl} title={item.name} />\n          <CardContent>\n            <Typography>{item.name}</Typography>\n            <TransactionLabel\n              transactionStatus={item.transactionEvidenceStatus}\n              shippingStatus={item.shippingStatus}\n            />\n          </CardContent>\n        </Card>\n      </RouteLink>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from './TransactionComponent';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionListComponent: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1}>{transactionsComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionListComponent };\n","import React, { ReactElement } from 'react';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionListComponent } from '../components/TransactionListComponent';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n  private readonly isMyPage: boolean;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    this.isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, this.isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemListComponent\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionListComponent\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { loading, user, classes } = this.props;\n    const { tabValue } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <AppBar className={classes.tab}>\n          <Tabs value={tabValue} onChange={this._handleChange}>\n            <Tab label=\"出品商品\" id=\"tab--item-list\" />\n            {this.isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n          </Tabs>\n        </AppBar>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {this.isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\n\ntype Props = {\n  isLoggedIn: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.login.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\n\ntype Props = {\n  isLoggedIn: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={routes.timeline.path} />\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">ついにリリース！</Typography>\n          <Typography variant=\"h6\">\n            椅子限定C2CのECサービス カードで簡単決済。\n          </Typography>\n          <Typography variant=\"h6\">\n            もちろんセキュリティも万全。 お互いの住所を知らなくても配送可能。\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  categoryIdIsValid: boolean;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      categoryIdIsValid,\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      items,\n      categoryId,\n      categoryName,\n      loadMore,\n      hasNext,\n    } = this.props;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{categoryName}の新着商品</Typography>\n          <ItemListComponent\n            items={items}\n            hasNext={hasNext}\n            loadMore={loadMoreItems}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemEditPage from '../pages/ItemEditPage';\nimport ItemBuyPage from '../pages/ItemBuyPage';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />\n      <AuthRoute exact path={routes.itemEdit.path} component={ItemEditPage} />\n      <AuthRoute exact path={routes.buy.path} component={ItemBuyPage} />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst routes: Array<{\n  path: string;\n  pageName: string;\n}> = [\n  {\n    path: '/',\n    pageName: 'Top page',\n  },\n  {\n    path: '/login',\n    pageName: 'Sign in page',\n  },\n  {\n    path: '/register',\n    pageName: 'Sign up page',\n  },\n  {\n    path: '/timeline',\n    pageName: 'Timeline page',\n  },\n  {\n    path: '/items/:item_id/edit',\n    pageName: 'Item edit page',\n  },\n  {\n    path: '/users/:user_id',\n    pageName: 'User page',\n  },\n  {\n    path: '/users/setting',\n    pageName: 'User setting page',\n  },\n];\n\nconst getLinks: () => React.ReactNode[] = () => {\n  const routeComponents: React.ReactNode[] = [];\n\n  for (const route of routes) {\n    routeComponents.push(\n      <li key={route.pageName}>\n        <Link to={route.path}>{route.pageName}</Link>\n      </li>,\n    );\n  }\n\n  return routeComponents;\n};\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <div>\n      <ul>{getLinks()}</ul>\n    </div>\n    <hr />\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport { Middleware } from 'redux';\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;\n","import { AnyAction, Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<AnyAction>) => (\n  action: any,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import {\n  LOGIN_SUCCESS,\n  LoginSuccessAction,\n} from '../actions/authenticationActions';\nimport {\n  REGISTER_SUCCESS,\n  RegisterSuccessAction,\n} from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\ntype Actions =\n  | LoginSuccessAction\n  | RegisterSuccessAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: Actions,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL } from '../actions/authenticationActions';\nimport { AnyAction } from 'redux';\nimport { REGISTER_FAIL } from '../actions/registerAction';\nimport { SELLING_ITEM_FAIL } from '../actions/sellingItemAction';\nimport { BUY_FAIL, USING_CARD_FAIL } from '../actions/buyAction';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n};\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: AnyAction,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { AnyAction } from 'redux';\nimport { ItemData } from '../dataObjects/item';\nimport {\n  FETCH_ITEM_SUCCESS,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\ntype actions = AnyAction | FetchItemSuccessAction;\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: actions,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { AnyAction } from 'redux';\nimport { UserData } from '../dataObjects/user';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\ntype actions = FetchUserPageDataSuccessAction | AnyAction;\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: actions,\n): ViewingUserState => {\n  switch (action.type) {\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import { AnyAction } from 'redux';\nimport {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n  FetchItemFailAction,\n  FetchItemStartAction,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsStartAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_START,\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineFailAction,\n  FetchTimelineStartAction,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport {\n  Actions as FetchUserPageActions,\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\nimport { FETCH_USER_ITEMS_START } from '../actions/fetchUserItemsAction';\n\ntype Actions =\n  | LocationChangeAction\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction\n  | FetchUserPageActions\n  | AnyAction;\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (state: PageState = initialState, action: Actions): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_START:\n      return { ...state, isTimelineLoading: true };\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case LOCATION_CHANGE:\n      const {\n        payload: {\n          location: { pathname },\n        },\n      } = action as LocationChangeAction; // TODO なんでasつけないと動かないん？\n\n      switch (pathname) {\n        case routes.timeline.path:\n          // TODO カテゴリ新着, ユーザページのチェックもここに入る\n          return { ...state, isTimelineLoading: true };\n        default:\n          return { ...state };\n      }\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { AnyAction } from 'redux';\nimport {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: AnyAction,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { AnyAction } from 'redux';\nimport { CategorySimple } from '../dataObjects/category';\nimport {\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\ntype Actions = FetchSettingsSuccessAction | AnyAction;\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: Actions,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions = FetchTimelineSuccessAction | AnyAction;\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: Actions,\n): TimelineState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import { AnyAction } from 'redux';\nimport { TransactionItem } from '../dataObjects/item';\nimport {\n  FETCH_TRANSACTIONS_SUCCESS,\n  FetchTransactionsSuccessAction,\n} from '../actions/fetchTransactionsAction';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions =\n  | FetchTransactionsSuccessAction\n  | LocationChangeAction\n  | FetchUserPageDataSuccessAction\n  | AnyAction;\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: Actions,\n): TransactionsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_USER_ITEMS_SUCCESS,\n  FetchUserItemsSuccessAction,\n} from '../actions/fetchUserItemsAction';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions =\n  | FetchUserItemsSuccessAction\n  | FetchUserPageDataSuccessAction\n  | LocationChangeAction\n  | AnyAction;\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: Actions,\n): UserItemsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middlewares),\n    ),\n  );\n};\n"],"sourceRoot":""}