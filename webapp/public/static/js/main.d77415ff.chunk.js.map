{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","components/BasePageComponent.tsx","hoc/withBaseComponent.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","reducers/index.ts","pages/SellPage.tsx","pages/ItemPage.tsx","pages/ItemEditPage.tsx","pages/ItemBuyPage.tsx","pages/TransactionPage.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/UserPage.tsx","pages/UserSettingPage.tsx","pages/BuyComplete.tsx","pages/ItemListPage.tsx","routes/Route.tsx","App.tsx","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","index.tsx"],"names":["ErrorMessageComponent","_ref","errMsg","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","error","value","push","react_default","a","createElement","Typography_default","key","variant","color","err","return","Fragment","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","form","noValidate","TextField","margin","required","fullWidth","id","label","name","autoFocus","onChange","type","autoComplete","length","ErrorMessageComponent_ErrorMessageComponent","Button","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","appClient","baseUrl","defaultHeaders","fetch","concat","method","headers","params","requestOption","mode","assign","Content-Type","credentials","body","JSON","stringify","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","response","status","Error","json","newAuthState","userId","address","payload","top","catch","newErros","errorMsg","message","connect","formError","themeInstance","createMuiTheme","background","default","BasePageComponent","children","MuiThemeProvider","Container","maxWidth","withBaseComponent","wrappedComponent","BasePageComponent_BasePageComponent","useStyles","makeStyles","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","_onChangeName","_onChangeDescription","_onChangePrice","sellItem","input","validator","isNumeric","no_symbols","Number","components_ItemImageUploadComponent","multiline","rows","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","get","ok","csrf_token","itemId","history","SellFormContainer","title","itemImage","height","divider","descSection","marginBottom","link","textDecoration","appBar","bottom","buyButton","mockItem","createdAt","thumbnailUrl","sm","Divider","wrap","user","getPath","AppBar","position","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","items","itemComponents","GridListTile","ItemComponent_ItemComponent","GridList","cols","fab","right","sell","Fab_default","Edit","fontSize","itemList","mockItems","mockUser","charAt","ItemListComponent_ItemListComponent","SellingButtonContainer","root","flexWrap","justifyContent","overflow","itemEdit","buy","buyComplete","transaction","transactionId","userSetting","AppRoute","react_router","exact","ItemListPage","SignInPage","SignUpPage","SellPage","ItemPage","ItemEditPage","ItemBuyPage","BuyCompletePage","TransactionPage","UserPage","UserSettingPage","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","authStatus","arguments","action","objectSpread","initialState","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d77415ff.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from \"@material-ui/core/Typography/Typography\";\n\ninterface ErrorMessageComponentProps {\n    errMsg: string[]\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({ errMsg }) => {\n    const errors = [];\n\n    for (const error of errMsg) {\n        errors.push(\n            <Typography\n                key={error}\n                variant=\"body2\"\n                color=\"error\"\n            >\n                {error}\n            </Typography>\n        )\n    }\n\n    return (\n        <React.Fragment>\n            {errors}\n        </React.Fragment>\n    );\n};\n\nexport { ErrorMessageComponent }","import React from 'react';\n\nimport {Avatar, Typography, TextField, Button, Grid, createStyles, WithStyles} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n    onSubmit: (accountName: string, password: string) => void\n    errors: string[]\n}\n\ninterface SignInFormComponentState {\n    accountName: string,\n    password: string,\n}\n\nclass SignInPageFormComponent extends React.Component<SignInFormComponentProps, SignInFormComponentState> {\n    constructor(props: SignInFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { accountName, password } = this.state;\n        this.props.onSubmit(accountName, password);\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { accountName, password } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    ログインページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"accountName\"\n                        label=\"ユーザ名\"\n                        name=\"accountName\"\n                        autoFocus\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onSubmit}\n                        className={classes.submit}\n                    >\n                        ログイン\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n}","import config from '../config';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n    private baseUrl: string = config.apiUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'same-origin',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            const body = JSON.stringify(params);\n            requestOption.body = body;\n        }\n\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new AppClient();","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {routes} from \"../routes/Route\";\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postLoginAction(accountName: string, password: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/login', {\n            account_name: accountName,\n            password: password,\n        })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body) => {\n                dispatch(loginSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(loginFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface LoginSuccessAction {\n    type: typeof LOGIN_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function loginSuccessAction(newAuthState: AuthStatusState): LoginSuccessAction {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface LoginFailAction {\n    type: typeof LOGIN_FAIL,\n    payload: FormErrorState,\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n    return {\n        type: LOGIN_FAIL,\n        payload: newErros,\n    };\n}\n","import SignInPageFormComponent from \"../components/SignInFormComponent\";\nimport { connect } from 'react-redux';\nimport { postLoginAction } from \"../actions/authenticationActions\";\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSubmit: (accountName: string, password: string) => {\n        dispatch(postLoginAction(accountName, password));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPageFormComponent)","import React from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\n\nconst themeInstance = createMuiTheme({\n    palette: {\n        background: {\n            default: 'white'\n        },\n    },\n});\n\nconst BasePageComponent: React.FC = ({children}) => (\n    <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"lg\" children={children} />\n    </MuiThemeProvider>\n);\n\nexport { BasePageComponent }","import React, {ReactElement} from 'react';\nimport {BasePageComponent} from \"../components/BasePageComponent\";\n\nexport const withBaseComponent = (wrappedComponent: React.FC<any>): React.FC<any> => {\n    return () => (\n        <BasePageComponent>\n            {wrappedComponent}\n        </BasePageComponent>\n    );\n};","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from \"../containers/SignInFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignInPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignInFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SignInPage);","import React from 'react';\nimport {Avatar, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {RegisterReq} from \"../types/appApiTypes\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n    register: (params: RegisterReq) => void\n    errors: string[]\n}\n\ninterface SignUpFormComponentState {\n    accountName: string,\n    address: string,\n    password: string,\n}\n\nclass SignUpFormComponent extends React.Component<SignUpFormComponentProps, SignUpFormComponentState> {\n    constructor(props: SignUpFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            address: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangeAddress = this._onChangeAddress.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.register({\n            account_name: this.state.accountName,\n            address: this.state.address,\n            password: this.state.password,\n        });\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { accountName, address, password } = this.state;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    新規登録\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"ユーザ名\"\n                        name=\"name\"\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"address\"\n                        label=\"住所\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this._onChangeAddress}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        新規登録\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.login.path}>すでにアカウントをお持ちの方はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {RegisterReq, RegisterRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\ntype State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/register', payload)\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: RegisterRes) => {\n                dispatch(registerSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(registerFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface RegisterSuccessAction {\n    type: typeof REGISTER_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function registerSuccessAction(newAuthState: AuthStatusState): RegisterSuccessAction {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface RegisterFailAction {\n    type: typeof REGISTER_FAIL,\n    payload: FormErrorState,\n}\n\nexport function registerFailAction(newErros: FormErrorState): RegisterFailAction {\n    return {\n        type: REGISTER_FAIL,\n        payload: newErros,\n    };\n}\n","import SignUpPageFormComponent from \"../components/SignUpFormComponent\";\nimport { connect } from 'react-redux';\nimport {postRegisterAction} from \"../actions/registerAction\";\nimport {RegisterReq} from \"../types/appApiTypes\";\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    register: (params: RegisterReq) => {\n        dispatch(postRegisterAction(params));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPageFormComponent)","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SignUpFormContainer from \"../containers/SignUpFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignUpPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SignUpFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SignUpPage);","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport { Camera } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    upload: {\n        display: 'none',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n}\n\ninterface ItemImageUploadComponentState {\n    file?: File,\n    imagePreviewUrl: string,\n}\n\nclass ItemImageUploadComponent extends React.Component<ItemImageUploadComponentProps, ItemImageUploadComponentState> {\n    constructor(props: ItemImageUploadComponentProps) {\n        super(props);\n\n        this.state = {\n            imagePreviewUrl: ''\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (e.target.files === null) {\n            return;\n        }\n\n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if (typeof reader.result !== 'string') {\n                throw new Error();\n            }\n\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { imagePreviewUrl } = this.state;\n        let imagePreview = null;\n        console.log(imagePreviewUrl);\n\n        if (imagePreviewUrl) {\n            imagePreview = (<img alt=\"プレビュー\" src={imagePreviewUrl} />);\n        } else {\n            imagePreview = (\n                <Paper>\n                    <Avatar className={classes.avatar}>\n                        <Camera />\n                    </Avatar>\n                    <Typography>商品画像</Typography>\n                </Paper>\n            )\n        }\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={8}>\n                    {imagePreview}\n                </Grid>\n                <Grid item xs={4}>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.upload}\n                        id=\"outlined-button-file\"\n                        type=\"file\"\n                        onChange={this._handleImageChange}\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                            Upload\n                        </Button>\n                    </label>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\n\nimport {Typography, TextField, Button, createStyles, Theme, WithStyles} from '@material-ui/core';\nimport ItemImageUploadComponent from \"../components/ItemImageUploadComponent\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n    sellItem: (name: string, description: string, price: number) => void\n    errors: string[]\n}\n\ninterface SellFormComponentState {\n    name: string,\n    description: string,\n    price: number,\n}\n\nclass SellFormComponent extends React.Component<SellFormComponentProps, SellFormComponentState> {\n    constructor(props: SellFormComponentProps) {\n        super(props);\n\n        this.state = {\n            name: '',\n            description: '',\n            price: 0,\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeDescription = this._onChangeDescription.bind(this);\n        this._onChangePrice = this._onChangePrice.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { name, description, price } = this.state;\n        this.props.sellItem(name, description, price);\n    }\n\n    _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n        const input = e.target.value;\n\n        // Only allow number\n        if (!validator.isNumeric(input, { no_symbols: true })) {\n            e.preventDefault();\n            return;\n        }\n\n        this.setState({\n            price: Number(input),\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { name, description, price } = this.state;\n\n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h5\">\n                    出品ページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <ItemImageUploadComponent/>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"商品名\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this._onChangeName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"商品説明\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this._onChangeDescription}\n                        multiline\n                        rows={5}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"値段\"\n                        name=\"price\"\n                        value={price}\n                        onChange={this._onChangePrice}\n                    />\n                    {\n                        this.props.errors.length !== 0 &&\n                        <ErrorMessageComponent errMsg={this.props.errors}/>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        出品する\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SellFormComponent)\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {SellReq, SellRes, SettingsRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function listItemAction(name: string, description: string, price: number): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.get('/settings')\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('CSRF tokenの取得に失敗しました');\n                }\n                return response.json();\n            })\n            .then((body: SettingsRes) => {\n                const payload: SellReq = {\n                    name, description, price,\n                    csrf_token: body.csrf_token,\n                };\n                return AppClient.post('/sell', payload);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('HTTP status not 200');\n                }\n                return response.json();\n            })\n            .then((body: SellRes) => {\n                dispatch(sellingSuccessAction(body.id));\n                dispatch(push(routes.top.path)); // TODO\n            })\n            .catch((err: Error) => {\n                dispatch(sellingFailAction({\n                    errorMsg: [err.message]\n                }))\n            })\n    };\n}\n\nexport interface SellingSuccessAction {\n    type: typeof SELLING_ITEM_SUCCESS,\n    payload: {\n        itemId: number,\n    },\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n    return {\n        type: SELLING_ITEM_SUCCESS,\n        payload: { itemId },\n    };\n}\n\nexport interface SellingFailAction {\n    type: typeof SELLING_ITEM_FAIL,\n    payload: FormErrorState,\n}\n\nexport function sellingFailAction(newErros: FormErrorState): SellingFailAction {\n    return {\n        type: SELLING_ITEM_FAIL,\n        payload: newErros,\n    };\n}\n","import {connect} from \"react-redux\";\nimport SellFormComponent from \"../components/SellFormComponent\";\nimport {listItemAction} from \"../actions/sellingItemAction\";\n\nconst mapStateToProps = (state: any) => ({\n    errors: state.formError.errorMsg,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    sellItem: (name: string, description: string, price: number) => {\n        dispatch(listItemAction(name, description, price));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellFormComponent);\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) => combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n});\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from \"../containers/SellFormContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SellPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <SellFormContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(SellPage);\n","import React from 'react';\nimport { ItemData } from \"../dataObjects/item\";\nimport {Typography} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        margin: theme.spacing(3),\n    },\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n    },\n    avatar: {\n        width: '50px',\n        height: '50px',\n    },\n    divider: {\n        margin: theme.spacing(1),\n    },\n    descSection: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    buyButton: {\n        margin: theme.spacing(1),\n    }\n}));\n\ninterface ItemPageProps {\n    item: ItemData\n}\n\nconst mockItem = {\n    id: 1,\n    name: 'いす',\n    price: 10000,\n    description: 'いすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすですいすです',\n    createdAt: '2日前',\n    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n};\n\nconst ItemPage: React.FC/*<ItemPageProps>*/ = (/*{ item }*/) => {\n    const classes = useStyles();\n\n    const item = mockItem;\n\n    return (\n        <div>\n            Item Page\n            <Typography className={classes.title} variant=\"h3\">{item.name}</Typography>\n            <Grid container spacing={2}>\n                <Grid item>\n                    <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl} />\n                </Grid>\n                <Grid item xs={12} sm container>\n                    <Grid item xs container direction=\"column\" spacing={2}>\n                        <Grid item xs>\n                            <div className={classes.descSection}>\n                                <Typography variant=\"h4\">商品説明</Typography>\n                                <Divider className={classes.divider} variant=\"middle\" />\n                                <Typography variant=\"body1\">{item.description}</Typography>\n                            </div>\n\n                            <div className={classes.descSection}>\n                                <Typography variant=\"h4\">出品者</Typography>\n                                <Divider className={classes.divider} variant=\"middle\" />\n                                <Grid\n                                    container\n                                    direction=\"row\"\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    wrap=\"nowrap\"\n                                    spacing={2}\n                                >\n                                    <Grid item>\n                                        {/* TODO: 固定でないuserId渡す */}\n                                        <RouteLink className={classes.link} to={routes.user.getPath(1)}>\n                                            <Avatar className={classes.avatar}>\"T\"</Avatar>\n                                        </RouteLink>\n                                    </Grid>\n                                    <Grid item xs>\n                                        <Typography variant=\"body1\">\"TODO\"</Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    alignItems=\"center\"\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\">¥{item.price}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Button variant=\"contained\" className={classes.buyButton}>購入</Button>\n                    </Grid>\n                </Grid>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default withBaseComponent(ItemPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst ItemEditPage: React.FC = () => (\n    <div>Item Edit Page</div>\n);\n\nexport default withBaseComponent(ItemEditPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst ItemBuyPage: React.FC = () => (\n    <div>Item buying Page</div>\n);\n\nexport default withBaseComponent(ItemBuyPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst TransactionPage: React.FC = () => (\n    <div>Transaction Page</div>\n);\n\nexport default withBaseComponent(TransactionPage);","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link as RouteLink } from 'react-router-dom'\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {routes} from \"../routes/Route\";\n\nconst useStyles = makeStyles(theme => ({\n    itemImage: {\n        height: '100%',\n    },\n}));\n\ninterface ItemComponentProps {\n    itemId: number\n    imageUrl: string\n    title: string\n    price: number\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n    itemId, imageUrl, title, price\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <RouteLink to={routes.item.getPath(itemId)}>\n                <img className={classes.itemImage} src={imageUrl} alt={title}/>\n            </RouteLink>\n            <GridListTileBar\n                title={title}\n                subtitle={`¥${price}`}\n            />\n        </Card>\n    );\n};\n\nexport { ItemComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        width: '300px',\n        height: '300px',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    const itemComponents = [];\n\n    for (const item of items) {\n        itemComponents.push(\n            <GridListTile className={classes.grid} key={item.id}>\n                <ItemComponent itemId={item.id} imageUrl={item.thumbnailUrl} title={item.name} price={item.price}/>\n            </GridListTile>\n        )\n    }\n\n    return (\n        <GridList cols={3}>\n            {itemComponents}\n        </GridList>\n    );\n};\n\nexport { ItemListComponent }","import React from 'react';\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Edit} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n        position: 'fixed',\n        top: 'auto',\n        bottom: '30px',\n        right: '30px',\n        width: '100px',\n        height: '100px',\n    },\n}));\n\ninterface SellingButtonComponentProps {\n    onClick: (e: React.MouseEvent) => void\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n        <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            onClick={onClick}\n        >\n            <Edit fontSize=\"large\" />\n        </Fab>\n    );\n};\n\nexport { SellingButonComponent }","import { push } from 'connected-react-router';\nimport {SellingButonComponent} from \"../components/SellingButtonComponent\";\nimport {connect} from \"react-redux\";\nimport {routes} from \"../routes/Route\";\n\nconst mapStateToProps = (state: any) => ({});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onClick: (e: React.MouseEvent) => {\n        e.preventDefault();\n        dispatch(push(routes.sell.path));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellingButonComponent);","import React from 'react';\nimport { ItemListComponent } from \"../components/ItemListComponent\";\nimport { ItemData } from \"../dataObjects/item\";\nimport { UserData } from \"../dataObjects/user\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    avatar: {\n        margin: theme.spacing(3),\n        width: '100px',\n        height: '100px',\n    },\n    itemList: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\ninterface UserPageProps {\n    items: ItemData[]\n    user: UserData\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n};\n\nconst UserPage: React.FC/*<UserPageProps>*/ = (/*{ items, user }*/) => {\n    const classes = useStyles();\n    const user = mockUser;\n    const items = mockItems;\n\n    return (\n        <div>\n            <p>User Page</p>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={2}\n            >\n                <Grid item>\n                    <Avatar className={classes.avatar}>{user.accountName.charAt(0)}</Avatar>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h3\">{user.accountName}</Typography>\n                </Grid>\n            </Grid>\n            <Divider variant=\"middle\" />\n            <div className={classes.itemList}>\n                <ItemListComponent items={items}/>\n            </div>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(UserPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst UserSettingPage: React.FC = () => (\n    <div>User setting Page</div>\n);\n\nexport default withBaseComponent(UserSettingPage);","import React from 'react';\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst BuyCompletePage: React.FC = () => (\n    <div>Item buying Page</div>\n);\n\nexport default withBaseComponent(BuyCompletePage);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {withBaseComponent} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(1),\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst mockItems: ItemData[] = [\n    {\n        id: 1,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        createdAt: '2日前',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];\n\nconst ItemListPage: React.FC/*<ItemListPageProps>*/ = (/*{ items }: ItemListPageProps*/) => {\n    const classes = useStyles();\n    const items = mockItems;\n\n    return (\n        <div className={classes.root}>\n            <ItemListComponent items={items}/>\n            <SellingButtonContainer />\n        </div>\n    );\n};\n\nexport default withBaseComponent(ItemListPage);","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SignInPage from \"../pages/SignInPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport SellPage from \"../pages/SellPage\";\nimport ItemPage from \"../pages/ItemPage\";\nimport ItemEditPage from \"../pages/ItemEditPage\";\nimport ItemBuyPage from \"../pages/ItemBuyPage\";\nimport TransactionPage from \"../pages/TransactionPage\";\nimport UserPage from \"../pages/UserPage\";\nimport UserSettingPage from \"../pages/UserSettingPage\";\nimport BuyCompletePage from \"../pages/BuyComplete\";\nimport ItemListPage from \"../pages/ItemListPage\";\n\ninterface route {\n    [name: string]: {\n        path: string,\n        getPath: (...params: any) => string, // TODO: optionalにしたい\n    }\n}\n\nexport const routes: route = {\n    top: {\n        path: '/',\n        getPath: () => '/',\n    },\n    login: {\n        path: '/login',\n        getPath: () => '/login',\n    },\n    register: {\n        path: '/register',\n        getPath: () => 'register',\n    },\n    sell: {\n        path: '/sell',\n        getPath: () => '/sell',\n    },\n    item: {\n        path: '/items/:item_id',\n        getPath: (itemId: number) => `/items/${itemId}`,\n    },\n    itemEdit: {\n        path: '/items/:item_id/edit',\n        getPath: (itemId: number) => `/items/${itemId}/edit`\n    },\n    buy: {\n        path: '/items/:item_id/buy',\n        getPath: (itemId: number) => `/items${itemId}/buy`,\n    },\n    buyComplete: {\n        path: '/buy/complete',\n        getPath: () => '/buy/complete',\n    },\n    transaction: {\n        path: '/transactions/:transaction_id',\n        getPath: (transactionId: number) => `/transactions/${transactionId}`,\n    },\n    user: {\n        path: '/users/:user_id',\n        getPath: (userId: number) => `/users/${userId}`,\n    },\n    userSetting: {\n        path: '/users/setting',\n        getPath: () => '/users/setting',\n    },\n};\n\nexport const AppRoute: React.FC = () => {\n    return (\n        <Switch>\n            <Route exact path={routes.top.path}         component={ItemListPage} />\n            <Route exact path={routes.login.path}       component={SignInPage} />\n            <Route exact path={routes.register.path}    component={SignUpPage}/>\n            <Route exact path={routes.sell.path}        component={SellPage} />\n            <Route exact path={routes.item.path}        component={ItemPage} />\n            <Route exact path={routes.itemEdit.path}    component={ItemEditPage} />\n            <Route exact path={routes.buy.path}         component={ItemBuyPage} />\n            <Route exact path={routes.buyComplete.path} component={BuyCompletePage} />\n            <Route exact path={routes.transaction.path} component={TransactionPage} />\n            <Route exact path={routes.user.path}        component={UserPage} />\n            <Route exact path={routes.userSetting.path} component={UserSettingPage} />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport {AppRoute} from \"./routes/Route\";\n\nconst routes: Array<{\n    path: string,\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        pageName: 'Top page'\n    },\n    {\n        path: '/login',\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/register',\n        pageName: 'Sign up page',\n    },\n    {\n        path: '/items/:item_id',\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/items/:item_id/buy',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/buy/complete',\n        pageName: 'Buying complete page',\n    },\n    {\n        path: '/sell',\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        pageName: 'User page',\n    },\n    {\n        path: '/users/:user_id/setting',\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => any[] = () => {\n    const routeComponents: React.ReactNode[] = []; // TODO\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC = () => {\n    return (\n        <React.Fragment>\n            <div>\n                <ul>\n                    {getLinks()}\n                </ul>\n            </div>\n            <hr />\n            <AppRoute/>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import {LOGIN_SUCCESS} from \"../actions/authenticationActions\";\nimport {REGISTER_SUCCESS} from \"../actions/registerAction\";\nimport {AnyAction} from \"redux\";\n\n\nexport interface AuthStatusState {\n    userId?: number\n    accountName?: string\n    address?: string,\n}\n\nconst authStatus = (state: AuthStatusState = {}, action: AnyAction): AuthStatusState => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default authStatus;","import {LOGIN_FAIL} from \"../actions/authenticationActions\";\nimport { AnyAction } from \"redux\";\nimport {REGISTER_FAIL} from \"../actions/registerAction\";\nimport {SELLING_ITEM_FAIL} from \"../actions/sellingItemAction\";\n\nexport interface FormErrorState {\n    errorMsg: string[],\n}\n\nconst initialState: FormErrorState = {\n    errorMsg: []\n};\n\nconst formError = (state: FormErrorState = initialState, action: AnyAction): FormErrorState => {\n    switch (action.type) {\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case SELLING_ITEM_FAIL: {\n            return {\n                ...action.payload,\n            }\n        }\n        default:\n            return initialState;\n    }\n};\n\nexport default formError;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport createRootReducer from './reducers/index';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst history = createBrowserHistory();\n\nconst store = createStore(\n    createRootReducer(history),\n    composeWithDevTools(\n        applyMiddleware(\n            thunk,\n            routerMiddleware(history),\n        ),\n    ),\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}