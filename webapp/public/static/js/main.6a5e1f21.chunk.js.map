{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","components/LoadingComponent.tsx","components/Header.tsx","containers/HeaderContainer.tsx","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemAction.ts","actions/settingsAction.ts","actions/postShippedAction.ts","actions/postShippedDoneAction.ts","actions/postCompleteAction.ts","actions/fetchTransactionsAction.ts","actions/fetchUserItemsAction.ts","actions/fetchUserPageDataAction.ts","actions/fetchTimelineAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","pages/ItemBuyPage.tsx","components/ItemFooterComponent.tsx","pages/ItemPage.tsx","actions/postBumpAction.ts","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","containers/ItemListPageContainer.tsx","components/Transaction/Seller/Initial.tsx","components/Transaction/Seller/WaitShipping.tsx","components/Transaction/Seller/WaitDone.tsx","components/Transaction/Seller/Done.tsx","components/Transaction/SellerComponent.tsx","containers/SellerTransactionContainer.tsx","components/Transaction/Buyer/Initial.tsx","components/Transaction/Buyer/WaitShipping.tsx","components/Transaction/Buyer/WaitDone.tsx","components/Transaction/Buyer/Done.tsx","components/Transaction/BuyerComponent.tsx","containers/BuyerTransactionContainer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","components/TransactionLabelComponent.tsx","components/TransactionComponent.tsx","components/TransactionListComponent.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","pages/UserSettingPage.tsx","containers/UserSettingPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","pages/TopPage.tsx","pages/CategoryItemListPage.tsx","containers/CategoryItemListPageContainer.tsx","pages/BuyComplete.tsx","containers/BuyCompleteContainer.tsx","actions/postItemEditAction.ts","pages/ItemEditPage.tsx","reducers/index.ts","containers/ItemEditPageContainer.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/viewingUserReducer.ts","reducers/pageReducuer.ts","reducers/buyPageReducer.ts","reducers/categoriesReducer.ts","reducers/timelineReducer.ts","reducers/transactionsReducer.ts","reducers/userItemsReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","baseUrl","defaultHeaders","params","getParams","URLSearchParams","undefined","set","url","toString","concat","fetch","method","headers","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","append","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","asyncToGenerator","regenerator_default","mark","_callee","errRes","wrap","_context","prev","next","status","sent","abrupt","stop","_x","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","isLoggedIn","authStatus","ownUserId","goToTopPage","timeline","goToUserPage","user","getPath","goToSettingPage","userSetting","_React$useState","open","_React$useState2","slicedToArray","toggleDrawer","event","objectSpread","react","Drawer","onClose","List","ListItem","button","ListItemText","primary","AppBar","Toolbar","IconButton","edge","Menu_default","noWrap","themeInstance","createMuiTheme","background","default","BasePageComponent","MuiThemeProvider","Container","maxWidth","HeaderContainer","loading","components_LoadingComponent","children","paddingTop","page","isLoading","alreadyLoaded","checked","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","numSellItems","num_sell_items","newErrors","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","onImageChange","readAsDataURL","imagePreview","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","SellFormComponent","description","price","selectedCategoryId","_onImageChange","_onChangeName","_onChangeDescription","_onChangeCategory","_onChangePrice","image","sellItem","categoryError","child","Number","input","validator","isNumeric","no_symbols","_this$props","categories","components_ItemImageUploadComponent","multiline","rows","InputLabel","Select","selectForm","inputProps","MenuItem","map","category","categoryName","minWidth","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","categoryId","FormData","postFormData","itemId","filter","parentId","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemAction","Promise","resolve","fetchItemStartAction","get","fetchItemSuccessAction","sellerId","seller_id","seller","buyerId","buyer_id","buyer","thumbnailUrl","image_url","parent_id","category_name","parentCategoryName","parent_category_name","transactionEvidenceId","transaction_evidence_id","transactionEvidenceStatus","transaction_evidence_status","shippingStatus","shipping_status","createdAt","created_at","fetchItemFailAction","newError","fetchSettings","fetchSettingStartAction","fetchSettingsSuccessAction","csrfToken","fetchItemPageFailAction","settings","POST_SHIPPED_START","POST_SHIPPED_SUCCESS","POST_SHIPPED_FAIL","postShippedAction","item_id","POST_SHIPPED_DONE_START","POST_SHIPPED_DONE_SUCCESS","POST_SHIPPED_DONE_FAIL","postShippedDoneAction","POST_COMPLETE_START","POST_COMPLETE_SUCCESS","POST_COMPLETE_FAIL","postCompleteAction","fetchTransactionsStartAction","fetchTransactionsSuccessAction","fetchTransactionsFailAction","fetchUserItemsStartAction","fetchUserItemsSuccessAction","fetchUserItemsFailAction","isMyPage","userDataRes","userData","transactions","transactionRes","_errRes","fetchUserPageDataAction","fetchUserPageDataStartAction","fetchUserPageData","userPageData","items","itemsHasNext","has_next","transactionsHasNext","fetchUserPageDataSuccessAction","fetchUserPageDataFailAction","fetchTimelineAction","fetchTimelineStartAction","fetchTimelineSuccessAction","hasNext","root_category_id","root_category_name","fetchTimelineFailAction","length","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","LoadingButtonComponent","_onClick","buttonName","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","paymentClient","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","token","buyComplete","action","getResponse","usingCardFailAction","buyFailAction","buyFormError","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","appBar","buyButton","ItemFooterComponent","buttons","buttonText","ItemPage","load","match","_onClickItemEditButton","_onClickBumpButton","_onClickTransaction","onClickBuy","onClickItemEdit","onClickBump","onClickTransaction","viewer","title","sm","descSection","Divider","divider","categoryTimeline","link","charAt","components_ItemFooterComponent","marginBottom","textDecoration","POST_BUMP_START","POST_BUMP_SUCCESS","POST_BUMP_FAIL","postBumpAction","isItemLoading","buy","itemEdit","transaction","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","loadMore","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","GridListTile","ItemComponent_ItemComponent","return","react_infinite_scroller_default","pageStart","hasMore","loader","CircularProgress_default","GridList","cols","fab","sell","Fab_default","Edit","fontSize","ItemListPage","root","SellingButtonContainer","lastItem","loadMoreItems","ItemListComponent_ItemListComponent","flexWrap","justifyContent","overflow","isTimelineLoading","Initial","postShipped","WaitShipping","postShippedDone","qrCodeUrl","WaitDone","Done","SellerComponent","transactionStatus","Seller_Initial","Seller_WaitShipping","Seller_WaitDone","Seller_Done","postComplete","BuyerComponent","Buyer_Initial","Buyer_WaitShipping","Buyer_WaitDone","Buyer_Done","TransactionPage","TransactionComponent","auth","error_NotFoundPage","error_InternalServerErrorPage","SellerTransactionContainer","BuyerTransactionContainer","normalLabel","light","soldOutLabel","grey","A100","tradingLabel","TransactionLabel","itemStatus","_getLabelByStatus","getLabelByStatus","_getLabelByStatus2","labelName","card","CardMedia_default","CardContent_default","TransactionLabelComponent_TransactionLabel","TransactionListComponent","transactionsComponents","TransactionComponent_TransactionComponent","UserPage","ITEM_LIST_TAB","TRANSACTION_LIST_TAB","pageUserId","user_id","loggedInUserId","tabValue","_handleChange","newValue","itemsLoadMore","_this$props2","transactionsLoadMore","lastTransaction","TransactionListComponent_TransactionListComponent","_this$props3","Tabs_default","Tab_default","list","hidden","_getItemList","_getTransactionsList","tab","text","isUserPageLoading","userItems","viewingUser","fetchUserItemsAction","fetchTransactionsAction","UserSettingPage","rest","objectWithoutProperties","react_router","render","textarea","img","TopPage","LoginButtonLink","forwardRef","ref","innerRef","RegisterButtonLink","CategoryItemListPage","category_id","categoryIdIsValid","BuyCompletePage","POST_ITEM_EDIT_START","POST_ITEM_EDIT_SUCCESS","POST_ITEM_EDIT_FAIL","postItemEditAction","itemPrice","reqParams","item_price","itemEditFormError","history","ItemEditPage","_onClickEdit","onClickEdit","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","CategoryItemListPageContainer","SellPage","ItemEditPageContainer","BuyCompleteContainer","ItemPageContainer","TransactionPageContainer","UserSettingPageContainer","UserPageContainer","App","Route_AppRoute","middlewares","getState","console","group","info","log","groupEnd","initialState","userPayload","LOCATION_CHANGE","location","pathname","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6a5e1f21.chunk.js","sourcesContent":["import React from 'react';\nimport { FormHelperText } from '@material-ui/core';\n\ninterface ErrorMessageComponentProps {\n  id: string;\n  error: string;\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({\n  id,\n  error,\n}) => {\n  return (\n    <FormHelperText key={error} id={id} error={true}>\n      {error}\n    </FormHelperText>\n  );\n};\n\nexport { ErrorMessageComponent };\n","import React from 'react';\n\nimport {\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  createStyles,\n  WithStyles,\n} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n  onSubmit: (accountName: string, password: string) => void;\n  error?: string;\n}\n\ninterface SignInFormComponentState {\n  accountName: string;\n  password: string;\n}\n\nclass SignInPageFormComponent extends React.Component<\n  SignInFormComponentProps,\n  SignInFormComponentState\n> {\n  constructor(props: SignInFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { accountName, password } = this.state;\n    this.props.onSubmit(accountName, password);\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { accountName, password } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          ログインページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"accountName\"\n            label=\"ユーザ名\"\n            name=\"accountName\"\n            autoFocus\n            value={accountName}\n            onChange={this._onChangeAccountName}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signInButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signInButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this._onSubmit}\n            className={classes.submit}\n          >\n            ログイン\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n  apiUrl: 'http://localhost:8000', // TODO fix\n  paymentUrl: 'http://localhost:5555',\n};\n","export class ResponseError extends Error {\n  private readonly res: Response | undefined;\n\n  constructor(message: string, response?: Response) {\n    super(message);\n    this.res = response;\n  }\n\n  getResponse(): Response | undefined {\n    return this.res;\n  }\n}\n","import { ResponseError } from './ResponseError';\n\nexport class AppResponseError extends ResponseError {}\n","import config from '../config';\nimport { SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n  private baseUrl: string = config.apiUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string, params: Record<string, any> = {}): Promise<Response> {\n    let getParams = new URLSearchParams();\n    for (const key in params) {\n      const value = params[key];\n      if (value !== undefined) {\n        getParams.set(key, params[key]);\n      }\n    }\n\n    let url = `${this.baseUrl}${path}`;\n    if (getParams.toString() !== '') {\n      url = `${url}?${getParams.toString()}`;\n    }\n\n    return await fetch(url, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params: any = {}): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    params.csrf_token = await this.getCsrfToken();\n    requestOption.body = JSON.stringify(params);\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  async postFormData(path: string, body: FormData): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'same-origin',\n      // MEMO: The reason why we should not set Content-Type header by ourselves\n      // https://stackoverflow.com/questions/39280438/fetch-missing-boundary-in-multipart-form-data-post\n      headers: this.defaultHeaders,\n      credentials: 'same-origin',\n    };\n\n    body.append('csrf_token', await this.getCsrfToken());\n    requestOption.body = body;\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n\n  private async getCsrfToken(): Promise<string> {\n    const res: Response = await fetch('/settings', {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n\n    if (!res.ok) {\n      throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n    }\n\n    const body: SettingsRes = await res.json();\n\n    return body.csrf_token;\n  }\n}\n\nexport default new AppClient();\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { routes } from '../routes/Route';\nimport { AppState } from '../index';\nimport { ErrorRes, LoginRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function postLoginAction(\n  accountName: string,\n  password: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/login', {\n      account_name: accountName,\n      password: password,\n    })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: LoginRes) => {\n        dispatch(\n          loginSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          loginFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address?: string;\n  };\n}\n\nexport function loginSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address?: string;\n}): LoginSuccessAction {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface LoginFailAction {\n  type: typeof LOGIN_FAIL;\n  payload: FormErrorState;\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n  return {\n    type: LOGIN_FAIL,\n    payload: newErros,\n  };\n}\n","import SignInPageFormComponent from '../components/SignInFormComponent';\nimport { connect } from 'react-redux';\nimport { postLoginAction } from '../actions/authenticationActions';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onSubmit: (accountName: string, password: string) => {\n    dispatch(postLoginAction(accountName, password));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignInPageFormComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\nconst LoadingComponent: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CircularProgress size={80} className={classes.progress} />\n    </React.Fragment>\n  );\n};\n\nexport default LoadingComponent;\n","import * as React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { AppBar } from '@material-ui/core';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  //\n}));\n\ninterface Props {\n  isLoggedIn: boolean;\n  ownUserId: number;\n  goToTopPage: () => void;\n  goToUserPage: (userId: number) => void;\n  goToSettingPage: () => void;\n}\n\nconst Header: React.FC<Props> = ({\n  isLoggedIn,\n  ownUserId,\n  goToTopPage,\n  goToUserPage,\n  goToSettingPage,\n}) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n  });\n\n  const onClickTop = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToTopPage();\n  };\n\n  const onClickMyPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToUserPage(ownUserId);\n  };\n\n  const onClickMySettingPage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    goToSettingPage();\n  };\n\n  const toggleDrawer = (open: boolean) => (event: React.MouseEvent) => {\n    event.preventDefault();\n    setState({ ...state, open });\n  };\n\n  return (\n    <React.Fragment>\n      {isLoggedIn && (\n        <Drawer open={state.open} onClose={toggleDrawer(false)}>\n          <List>\n            <ListItem button onClick={onClickTop}>\n              <ListItemText primary=\"新着商品\" />\n            </ListItem>\n            <ListItem button onClick={onClickMyPage}>\n              <ListItemText primary=\"マイページ\" />\n            </ListItem>\n            <ListItem button onClick={onClickMySettingPage}>\n              <ListItemText primary=\"設定\" />\n            </ListItem>\n          </List>\n        </Drawer>\n      )}\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          {isLoggedIn && (\n            <IconButton\n              color=\"inherit\"\n              onClick={toggleDrawer(true)}\n              edge=\"start\"\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography variant=\"h6\" noWrap>\n            ヘッダー\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n\nexport { Header };\n","import { AppState } from '../index';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { Header } from '../components/Header';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  ownUserId: state.authStatus.userId || 0,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  goToTopPage: () => {\n    dispatch(push(routes.timeline.path));\n  },\n  goToUserPage: (userId: number) => {\n    dispatch(push(routes.user.getPath(userId)));\n  },\n  goToSettingPage: () => {\n    dispatch(push(routes.userSetting.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Header);\n","import React, { PropsWithChildren } from 'react';\n\nimport {\n  Container,\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport LoadingComponent from './LoadingComponent';\nimport HeaderContainer from '../containers/HeaderContainer';\nimport { StyleRules } from '@material-ui/core/styles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst themeInstance = createMuiTheme({\n  palette: {\n    background: {\n      default: 'white',\n    },\n  },\n});\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    container: {\n      paddingTop: theme.spacing(7),\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n}\n\nexport type Props = PropsWithChildren<BaseProps>;\n\nclass BasePageComponent extends React.Component<Props> {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <MuiThemeProvider theme={themeInstance}>\n        <Container maxWidth=\"md\" className={classes.container}>\n          <HeaderContainer />\n          {this.props.loading ? (\n            <LoadingComponent />\n          ) : (\n            this.props.children || null\n          )}\n        </Container>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(BasePageComponent);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport BasePageComponent from '../components/BasePageComponent';\nimport {Dispatch} from \"redux\";\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isLoading,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from '../containers/SignInFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignInFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport {\n  Avatar,\n  createStyles,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { LockOutlined } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    paper: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n  register: (params: RegisterReq) => void;\n  error?: string;\n}\n\ninterface SignUpFormComponentState {\n  accountName: string;\n  address: string;\n  password: string;\n}\n\nclass SignUpFormComponent extends React.Component<\n  SignUpFormComponentProps,\n  SignUpFormComponentState\n> {\n  constructor(props: SignUpFormComponentProps) {\n    super(props);\n\n    this.state = {\n      accountName: '',\n      address: '',\n      password: '',\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onChangeAccountName = this._onChangeAccountName.bind(this);\n    this._onChangeAddress = this._onChangeAddress.bind(this);\n    this._onChangePassword = this._onChangePassword.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.register({\n      account_name: this.state.accountName,\n      address: this.state.address,\n      password: this.state.password,\n    });\n  }\n\n  _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      accountName: e.target.value,\n    });\n  }\n\n  _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      address: e.target.value,\n    });\n  }\n\n  _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { accountName, address, password } = this.state;\n\n    return (\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlined />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          新規登録\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"ユーザ名\"\n            name=\"name\"\n            value={accountName}\n            onChange={this._onChangeAccountName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"address\"\n            label=\"住所\"\n            name=\"address\"\n            value={address}\n            onChange={this._onChangeAddress}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"password\"\n            label=\"パスワード\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={this._onChangePassword}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"signUpButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"signUpButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            新規登録\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <RouteLink to={routes.login.path}>\n                すでにアカウントをお持ちの方はこちら\n              </RouteLink>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from '../reducers/authStatusReducer';\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { ErrorRes, RegisterReq, RegisterRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    AppClient.post('/register', payload)\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: RegisterRes) => {\n        dispatch(\n          registerSuccessAction({\n            userId: body.id,\n            accountName: body.account_name,\n            address: body.address,\n            numSellItems: body.num_sell_items,\n          }),\n        );\n        dispatch(push(routes.top.path));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          registerFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface RegisterSuccessAction {\n  type: typeof REGISTER_SUCCESS;\n  payload: {\n    userId: number;\n    accountName: string;\n    address: string;\n  };\n}\n\nexport function registerSuccessAction(newAuthState: {\n  userId: number;\n  accountName: string;\n  address: string;\n  numSellItems: number;\n}): RegisterSuccessAction {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: newAuthState,\n  };\n}\n\nexport interface RegisterFailAction {\n  type: typeof REGISTER_FAIL;\n  payload: FormErrorState;\n}\n\nexport function registerFailAction(\n  newErrors: FormErrorState,\n): RegisterFailAction {\n  return {\n    type: REGISTER_FAIL,\n    payload: newErrors,\n  };\n}\n","import SignUpPageFormComponent from '../components/SignUpFormComponent';\nimport { connect } from 'react-redux';\nimport { postRegisterAction, State } from '../actions/registerAction';\nimport { RegisterReq } from '../types/appApiTypes';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  error: state.formError.error,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<State, undefined, AnyAction>,\n) => ({\n  register: (params: RegisterReq) => {\n    dispatch(postRegisterAction(params));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignUpPageFormComponent);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport SignUpFormContainer from '../containers/SignUpFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nconst SignUpPage: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SignUpFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport { Camera } from '@material-ui/icons';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport withStyles, {\n  WithStyles,\n  StyleRules,\n} from '@material-ui/core/styles/withStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Button from '@material-ui/core/Button/Button';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    upload: {\n      display: 'none',\n    },\n    avatar: {\n      margin: theme.spacing(1),\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n  });\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n  onImageChange: (image: Blob) => void;\n}\n\ninterface ItemImageUploadComponentState {\n  file?: File;\n  imagePreviewUrl: string;\n}\n\nclass ItemImageUploadComponent extends React.Component<\n  ItemImageUploadComponentProps,\n  ItemImageUploadComponentState\n> {\n  constructor(props: ItemImageUploadComponentProps) {\n    super(props);\n\n    this.state = {\n      imagePreviewUrl: '',\n    };\n    this._handleImageChange = this._handleImageChange.bind(this);\n  }\n\n  _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n\n    if (e.target.files === null) {\n      return;\n    }\n\n    const reader = new FileReader();\n    const file = e.target.files[0];\n\n    reader.onloadend = () => {\n      if (typeof reader.result !== 'string') {\n        throw new Error();\n      }\n\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result,\n      });\n\n      this.props.onImageChange(file);\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { imagePreviewUrl } = this.state;\n    let imagePreview = null;\n\n    if (imagePreviewUrl) {\n      imagePreview = <img alt=\"プレビュー\" src={imagePreviewUrl} />;\n    } else {\n      imagePreview = (\n        <Paper>\n          <Avatar className={classes.avatar}>\n            <Camera />\n          </Avatar>\n          <Typography>商品画像</Typography>\n        </Paper>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={8}>\n          {imagePreview}\n        </Grid>\n        <Grid item xs={4}>\n          <input\n            accept=\"image/*\"\n            className={classes.upload}\n            id=\"outlined-button-file\"\n            type=\"file\"\n            onChange={this._handleImageChange}\n          />\n          <label htmlFor=\"outlined-button-file\">\n            <Button\n              variant=\"outlined\"\n              component=\"span\"\n              className={classes.button}\n            >\n              Upload\n            </Button>\n          </label>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React, { ReactNode } from 'react';\n\nimport {\n  Typography,\n  TextField,\n  Button,\n  createStyles,\n  Theme,\n  WithStyles,\n} from '@material-ui/core';\nimport ItemImageUploadComponent from '../components/ItemImageUploadComponent';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    form: {\n      width: '80%',\n      marginTop: theme.spacing(1),\n    },\n    selectForm: {\n      minWidth: '200px',\n      margin: theme.spacing(1, 0, 2),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  });\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => void;\n  error?: string;\n  categories: {\n    id: number;\n    categoryName: string;\n  }[];\n}\n\ninterface SellFormComponentState {\n  name: string;\n  description: string;\n  price: number;\n  selectedCategoryId: number;\n  image?: Blob;\n  categoryError?: string;\n}\n\nclass SellFormComponent extends React.Component<\n  SellFormComponentProps,\n  SellFormComponentState\n> {\n  constructor(props: SellFormComponentProps) {\n    super(props);\n\n    this.state = {\n      name: '',\n      description: '',\n      price: 0,\n      selectedCategoryId: 0,\n    };\n\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onImageChange = this._onImageChange.bind(this);\n    this._onChangeName = this._onChangeName.bind(this);\n    this._onChangeDescription = this._onChangeDescription.bind(this);\n    this._onChangeCategory = this._onChangeCategory.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onSubmit(e: React.MouseEvent) {\n    e.preventDefault();\n    const { name, description, price, selectedCategoryId, image } = this.state;\n\n    if (!selectedCategoryId) {\n      this.setState({\n        categoryError: 'カテゴリを選択してください',\n      });\n      return;\n    }\n\n    if (image === undefined) {\n      this.setState({\n        categoryError: '画像をアップロードしてください',\n      });\n      return;\n    }\n\n    this.props.sellItem(name, description, price, selectedCategoryId, image);\n  }\n\n  _onImageChange(image: Blob) {\n    this.setState({\n      image,\n    });\n  }\n\n  _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      name: e.target.value,\n    });\n  }\n\n  _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n    this.setState({\n      description: e.target.value,\n    });\n  }\n\n  _onChangeCategory(e: React.ChangeEvent<any>, child: ReactNode) {\n    this.setState({\n      selectedCategoryId: Number(e.target.value),\n    });\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { classes, categories } = this.props;\n    const {\n      name,\n      description,\n      price,\n      selectedCategoryId,\n      categoryError,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <Typography component=\"h1\" variant=\"h5\">\n          出品ページ\n        </Typography>\n        <form className={classes.form} noValidate>\n          <ItemImageUploadComponent onImageChange={this._onImageChange} />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"商品名\"\n            name=\"name\"\n            value={name}\n            onChange={this._onChangeName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"description\"\n            label=\"商品説明\"\n            name=\"description\"\n            value={description}\n            onChange={this._onChangeDescription}\n            multiline\n            rows={5}\n          />\n\n          <InputLabel htmlFor=\"choose-category\">カテゴリ</InputLabel>\n          <Select\n            className={classes.selectForm}\n            value={selectedCategoryId}\n            onChange={this._onChangeCategory}\n            inputProps={{\n              name: 'category',\n              id: 'choose-category',\n            }}\n          >\n            <MenuItem value={0}>\n              <em>-</em>\n            </MenuItem>\n            {categories.map(category => (\n              <MenuItem value={category.id}>{category.categoryName}</MenuItem>\n            ))}\n          </Select>\n          {categoryError && (\n            <ErrorMessageComponent id=\"choose-category\" error={categoryError} />\n          )}\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {this.props.error && (\n            <ErrorMessageComponent id=\"sellButton\" error={this.props.error} />\n          )}\n          <Button\n            id=\"sellButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onSubmit}\n          >\n            出品する\n          </Button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(SellFormComponent);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { AnyAction } from 'redux';\nimport { ErrorRes, SellRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function listItemAction(\n  name: string,\n  description: string,\n  price: number,\n  categoryId: number,\n  image: Blob,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    const body = new FormData();\n    body.append('name', name);\n    body.append('description', description);\n    body.append('price', price.toString());\n    body.append('category_id', categoryId.toString());\n    body.append('image', image);\n    AppClient.postFormData('/sell', body)\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n        return await response.json();\n      })\n      .then((body: SellRes) => {\n        dispatch(sellingSuccessAction(body.id));\n        dispatch(push(routes.top.path)); // TODO\n      })\n      .catch((err: Error) => {\n        dispatch(\n          sellingFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface SellingSuccessAction {\n  type: typeof SELLING_ITEM_SUCCESS;\n  payload: {\n    itemId: number;\n  };\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n  return {\n    type: SELLING_ITEM_SUCCESS,\n    payload: { itemId },\n  };\n}\n\nexport interface SellingFailAction {\n  type: typeof SELLING_ITEM_FAIL;\n  payload: FormErrorState;\n}\n\nexport function sellingFailAction(\n  newErrors: FormErrorState,\n): SellingFailAction {\n  return {\n    type: SELLING_ITEM_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport SellFormComponent from '../components/SellFormComponent';\nimport { listItemAction } from '../actions/sellingItemAction';\nimport { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { CategorySimple } from '../dataObjects/category';\n\nconst mapStateToProps = (state: AppState) => {\n  // Note: Parent category's parent_id is 0\n  const categories = state.categories.categories.filter(\n    (category: CategorySimple) => category.parentId !== 0,\n  );\n\n  return {\n    error: state.formError.error,\n    categories,\n  };\n};\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  sellItem: (\n    name: string,\n    description: string,\n    price: number,\n    categoryId: number,\n    image: Blob,\n  ) => {\n    dispatch(listItemAction(name, description, price, categoryId, image));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellFormComponent);\n","import { Action } from 'redux';\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR> {}\n\nexport function notFoundError(): NotFoundErrorAction {\n  return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction\n  extends Action<typeof INTERNAL_SERVER_ERROR> {}\n\nexport function internalServerError(): InternalServerErrorAction {\n  return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { ErrorRes, GetItemRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ItemData } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_ITEM_START = 'FETCH_ITEM_START';\nexport const FETCH_ITEM_SUCCESS = 'FETCH_ITEM_SUCCESS';\nexport const FETCH_ITEM_FAIL = 'FETCH_ITEM_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function fetchItemAction(itemId: string): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchItemStartAction());\n      })\n      .then(() => AppClient.get(`/items/${itemId}.json`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: GetItemRes) => {\n        dispatch(\n          fetchItemSuccessAction({\n            id: body.id,\n            status: body.status,\n            sellerId: body.seller_id,\n            seller: {\n              id: body.seller.id,\n              accountName: body.seller.account_name,\n              numSellItems: body.seller.num_sell_items,\n            },\n            buyerId: body.buyer_id,\n            buyer: body.buyer,\n            name: body.name,\n            price: body.price,\n            thumbnailUrl: body.image_url,\n            description: body.description,\n            category: {\n              id: body.category.id,\n              parentId: body.category.parent_id,\n              categoryName: body.category.category_name,\n              parentCategoryName: body.category.parent_category_name,\n            },\n            transactionEvidenceId: body.transaction_evidence_id,\n            transactionEvidenceStatus: body.transaction_evidence_status,\n            shippingStatus: body.shipping_status,\n            createdAt: body.created_at,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchItemStartAction extends Action<typeof FETCH_ITEM_START> {}\n\nconst fetchItemStartAction = (): FetchItemStartAction => {\n  return {\n    type: FETCH_ITEM_START,\n  };\n};\n\nexport interface FetchItemSuccessAction\n  extends Action<typeof FETCH_ITEM_SUCCESS> {\n  payload: {\n    item: ItemData;\n  };\n}\n\nconst fetchItemSuccessAction = (item: ItemData): FetchItemSuccessAction => {\n  return {\n    type: FETCH_ITEM_SUCCESS,\n    payload: {\n      item,\n    },\n  };\n};\n\nexport interface FetchItemFailAction extends Action<typeof FETCH_ITEM_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemFailAction = (newError: FormErrorState): FetchItemFailAction => {\n  return {\n    type: FETCH_ITEM_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action, AnyAction } from 'redux';\nimport { ErrorRes, SettingsRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { AppState } from '../index';\nimport { Settings } from '../dataObjects/settings';\nimport { UserData } from '../dataObjects/user';\nimport { CategorySimple } from '../dataObjects/category';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>;\n\nexport function fetchSettings(): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<AppState, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(fetchSettingStartAction());\n    })\n      .then(() => AppClient.get(`/settings`))\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: SettingsRes) => {\n        let user: UserData | undefined = undefined;\n\n        if (body.user) {\n          user = {\n            id: body.user.id,\n            accountName: body.user.account_name,\n            address: body.user.address,\n            numSellItems: body.user.num_sell_items,\n          };\n        }\n\n        dispatch(\n          fetchSettingsSuccessAction({\n            csrfToken: body.csrf_token,\n            categories: body.categories.map<CategorySimple>(category => ({\n              id: category.id,\n              parentId: category.parent_id,\n              categoryName: category.category_name,\n            })),\n            user: user,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchItemPageFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchSettingsStartAction\n  extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n  type: 'FETCH_SETTINGS_START',\n});\n\nexport interface FetchSettingsSuccessAction\n  extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n  payload: {\n    settings: Settings;\n  };\n}\n\nconst fetchSettingsSuccessAction = (\n  settings: Settings,\n): FetchSettingsSuccessAction => ({\n  type: 'FETCH_SETTINGS_SUCCESS',\n  payload: {\n    settings,\n  },\n});\n\nexport interface FetchSettingsFailAction\n  extends Action<typeof FETCH_SETTINGS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchItemPageFailAction = (\n  newError: FormErrorState,\n): FetchSettingsFailAction => ({\n  type: 'FETCH_SETTINGS_FAIL',\n  payload: newError,\n});\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ErrorRes, ShipReq, ShipRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const POST_SHIPPED_START = 'POST_SHIPPED_START';\nexport const POST_SHIPPED_SUCCESS = 'POST_SHIPPED_SUCCESS';\nexport const POST_SHIPPED_FAIL = 'POST_SHIPPED_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship', {\n          item_id: itemId,\n        } as ShipReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipRes) => {\n        dispatch(postShippedSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedStartAction\n  extends Action<typeof POST_SHIPPED_START> {}\n\nexport function postShippedStartAction(): PostShippedStartAction {\n  return {\n    type: POST_SHIPPED_START,\n  };\n}\n\nexport interface PostShippedSuccessAction\n  extends Action<typeof POST_SHIPPED_SUCCESS> {}\n\nexport function postShippedSuccessAction(): PostShippedSuccessAction {\n  return {\n    type: POST_SHIPPED_SUCCESS,\n  };\n}\n\nexport interface PostShippedFailAction\n  extends Action<typeof POST_SHIPPED_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedFailAction(\n  newErrors: FormErrorState,\n): PostShippedFailAction {\n  return {\n    type: POST_SHIPPED_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ErrorRes, ShipDoneReq, ShipDoneRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const POST_SHIPPED_DONE_START = 'POST_SHIPPED_DONE_START';\nexport const POST_SHIPPED_DONE_SUCCESS = 'POST_SHIPPED_DONE_SUCCESS';\nexport const POST_SHIPPED_DONE_FAIL = 'POST_SHIPPED_DONE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postShippedDoneAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postShippedDoneStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/ship_done', {\n          item_id: itemId,\n        } as ShipDoneReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ShipDoneRes) => {\n        dispatch(postShippedDoneSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postShippedDoneFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostShippedDoneStartAction\n  extends Action<typeof POST_SHIPPED_DONE_START> {}\n\nexport function postShippedDoneStartAction(): PostShippedDoneStartAction {\n  return {\n    type: POST_SHIPPED_DONE_START,\n  };\n}\n\nexport interface PostShippedDoneSuccessAction\n  extends Action<typeof POST_SHIPPED_DONE_SUCCESS> {}\n\nexport function postShippedDoneSuccessAction(): PostShippedDoneSuccessAction {\n  return {\n    type: POST_SHIPPED_DONE_SUCCESS,\n  };\n}\n\nexport interface PostShippedDoneFailAction\n  extends Action<typeof POST_SHIPPED_DONE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postShippedDoneFailAction(\n  newErrors: FormErrorState,\n): PostShippedDoneFailAction {\n  return {\n    type: POST_SHIPPED_DONE_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { CompleteReq, CompleteRes, ErrorRes } from '../types/appApiTypes';\nimport { fetchItemAction } from './fetchItemAction';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const POST_COMPLETE_START = 'POST_COMPLETE_START';\nexport const POST_COMPLETE_SUCCESS = 'POST_COMPLETE_SUCCESS';\nexport const POST_COMPLETE_FAIL = 'POST_COMPLETE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postCompleteAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postCompleteStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/complete', {\n          item_id: itemId,\n        } as CompleteReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: CompleteRes) => {\n        dispatch(postCompleteSuccessAction());\n      })\n      .then(() => {\n        dispatch(fetchItemAction(itemId.toString())); // FIXME: 異常系のハンドリングが取引ページ向けでない\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postCompleteFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostCompleteStartAction\n  extends Action<typeof POST_COMPLETE_START> {}\n\nexport function postCompleteStartAction(): PostCompleteStartAction {\n  return {\n    type: POST_COMPLETE_START,\n  };\n}\n\nexport interface PostCompleteSuccessAction\n  extends Action<typeof POST_COMPLETE_SUCCESS> {}\n\nexport function postCompleteSuccessAction(): PostCompleteSuccessAction {\n  return {\n    type: POST_COMPLETE_SUCCESS,\n  };\n}\n\nexport interface PostCompleteFailAction\n  extends Action<typeof POST_COMPLETE_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postCompleteFailAction(\n  newErrors: FormErrorState,\n): PostCompleteFailAction {\n  return {\n    type: POST_COMPLETE_FAIL,\n    payload: newErrors,\n  };\n}\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  UserTransactionsReq,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TransactionItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_TRANSACTIONS_START = 'FETCH_TRANSACTIONS_START';\nexport const FETCH_TRANSACTIONS_SUCCESS = 'FETCH_TRANSACTIONS_SUCCESS';\nexport const FETCH_TRANSACTIONS_FAIL = 'FETCH_TRANSACTIONS_FAIL';\n\ntype Actions =\n  | FetchTransactionsStartAction\n  | FetchTransactionsSuccessAction\n  | FetchTransactionsFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTransactionsAction(\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTransactionsStartAction());\n      })\n      .then(() => {\n        return AppClient.get('/users/transactions.json', {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserTransactionsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Transactions not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserTransactionsRes) => {\n        dispatch(\n          fetchTransactionsSuccessAction({\n            items: body.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTransactionsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTransactionsStartAction\n  extends Action<typeof FETCH_TRANSACTIONS_START> {}\n\nconst fetchTransactionsStartAction = (): FetchTransactionsStartAction => {\n  return {\n    type: FETCH_TRANSACTIONS_START,\n  };\n};\n\nexport interface FetchTransactionsSuccessAction\n  extends Action<typeof FETCH_TRANSACTIONS_SUCCESS> {\n  payload: {\n    items: TransactionItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchTransactionsSuccessAction = (payload: {\n  items: TransactionItem[];\n  hasNext: boolean;\n}): FetchTransactionsSuccessAction => {\n  return {\n    type: FETCH_TRANSACTIONS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTransactionsFailAction\n  extends Action<typeof FETCH_TRANSACTIONS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTransactionsFailAction = (\n  newErrors: FormErrorState,\n): FetchTransactionsFailAction => {\n  return {\n    type: FETCH_TRANSACTIONS_FAIL,\n    payload: newErrors,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  UserItemsReq,\n  UserItemsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_USER_ITEMS_START = 'FETCH_USER_ITEMS_START';\nexport const FETCH_USER_ITEMS_SUCCESS = 'FETCH_USER_ITEMS_SUCCESS';\nexport const FETCH_USER_ITEMS_FAIL = 'FETCH_USER_ITEMS_FAIL';\n\ntype Actions =\n  | FetchUserItemsStartAction\n  | FetchUserItemsSuccessAction\n  | FetchUserItemsFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchUserItemsAction(\n  userId: number,\n  itemId?: number,\n  createdAt?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserItemsStartAction());\n      })\n      .then(() => {\n        return AppClient.get(`/users/${userId}.json`, {\n          item_id: itemId,\n          created_at: createdAt,\n        } as UserItemsReq);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('UserItems not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: UserItemsRes) => {\n        dispatch(\n          fetchUserItemsSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserItemsFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserItemsStartAction\n  extends Action<typeof FETCH_USER_ITEMS_START> {}\n\nconst fetchUserItemsStartAction = (): FetchUserItemsStartAction => {\n  return {\n    type: FETCH_USER_ITEMS_START,\n  };\n};\n\nexport interface FetchUserItemsSuccessAction\n  extends Action<typeof FETCH_USER_ITEMS_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n  };\n}\n\nconst fetchUserItemsSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n}): FetchUserItemsSuccessAction => {\n  return {\n    type: FETCH_USER_ITEMS_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserItemsFailAction\n  extends Action<typeof FETCH_USER_ITEMS_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserItemsFailAction = (\n  newError: FormErrorState,\n): FetchUserItemsFailAction => {\n  return {\n    type: FETCH_USER_ITEMS_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemDetail,\n  ItemSimple,\n  UserItemsRes,\n  UserTransactionsRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport { ShippingStatus } from '../dataObjects/shipping';\nimport { TransactionStatus } from '../dataObjects/transaction';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_USER_PAGE_DATA_START = 'FETCH_USER_PAGE_DATA_START';\nexport const FETCH_USER_PAGE_DATA_SUCCESS = 'FETCH_USER_PAGE_DATA_SUCCESS';\nexport const FETCH_USER_PAGE_DATA_FAIL = 'FETCH_USER_PAGE_DATA_FAIL';\n\nexport type Actions =\n  | FetchUserPageDataStartAction\n  | FetchUserPageDataSuccessAction\n  | FetchUserPageDataFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nasync function fetchUserPageData(\n  userId: number,\n  isMyPage: boolean,\n): Promise<[UserItemsRes, UserTransactionsRes | undefined]> {\n  const userDataRes: Response = await AppClient.get(`/users/${userId}.json`);\n\n  if (!userDataRes.ok) {\n    const errRes: ErrorRes = await userDataRes.json();\n    throw new AppResponseError(errRes.error, userDataRes);\n  }\n\n  const userData: UserItemsRes = await userDataRes.json();\n\n  let transactions: UserTransactionsRes | undefined;\n\n  if (isMyPage) {\n    const transactionRes: Response = await AppClient.get(\n      '/users/transactions.json',\n    );\n\n    if (!transactionRes.ok) {\n      const errRes: ErrorRes = await userDataRes.json();\n      throw new AppResponseError(errRes.error, transactionRes);\n    }\n\n    transactions = await transactionRes.json();\n  }\n\n  return [userData, transactions];\n}\n\nexport function fetchUserPageDataAction(\n  userId: number,\n  isMyPage: boolean,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchUserPageDataStartAction());\n      })\n      .then(() => {\n        return fetchUserPageData(userId, isMyPage);\n      })\n      .then((res: [UserItemsRes, UserTransactionsRes | undefined]) => {\n        const userPageData = res[0];\n        const payload = {\n          user: {\n            id: userPageData.user.id,\n            accountName: userPageData.user.account_name,\n            numSellItems: userPageData.user.num_sell_items,\n          },\n          items: userPageData.items.map((item: ItemSimple) => ({\n            id: item.id,\n            status: item.status,\n            name: item.name,\n            price: item.price,\n            thumbnailUrl: item.image_url,\n            createdAt: item.created_at,\n          })),\n          itemsHasNext: userPageData.has_next,\n        };\n        let transactions: {\n          transactions: TransactionItem[];\n          transactionsHasNext: boolean;\n        } = {\n          transactions: [],\n          transactionsHasNext: false,\n        };\n\n        if (isMyPage && res[1] !== undefined) {\n          const transactionRes: UserTransactionsRes = res[1];\n          transactions = {\n            transactions: transactionRes.items.map((item: ItemDetail) => ({\n              id: item.id,\n              status: item.status,\n              transactionEvidenceStatus: item.transaction_evidence_status as TransactionStatus, // MEMO API will return this value for this endpoint\n              shippingStatus: item.shipping_status as ShippingStatus, // MEMO API will return this value for this endpoint\n              name: item.name,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            transactionsHasNext: transactionRes.has_next,\n          };\n        }\n\n        dispatch(\n          fetchUserPageDataSuccessAction({ ...payload, ...transactions }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchUserPageDataFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchUserPageDataStartAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_START> {}\n\nconst fetchUserPageDataStartAction = (): FetchUserPageDataStartAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_START,\n  };\n};\n\nexport interface FetchUserPageDataSuccessAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_SUCCESS> {\n  payload: {\n    user: UserData;\n    items: TimelineItem[];\n    itemsHasNext: boolean;\n    transactions: TransactionItem[];\n    transactionsHasNext: boolean;\n  };\n}\n\nconst fetchUserPageDataSuccessAction = (payload: {\n  user: UserData;\n  items: TimelineItem[];\n  itemsHasNext: boolean;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n}): FetchUserPageDataSuccessAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchUserPageDataFailAction\n  extends Action<typeof FETCH_USER_PAGE_DATA_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchUserPageDataFailAction = (\n  newError: FormErrorState,\n): FetchUserPageDataFailAction => {\n  return {\n    type: FETCH_USER_PAGE_DATA_FAIL,\n    payload: newError,\n  };\n};\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport {\n  ErrorRes,\n  ItemSimple,\n  NewCategoryItemRes,\n  NewItemReq,\n  NewItemRes,\n} from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { TimelineItem } from '../dataObjects/item';\nimport { NotFoundError } from '../errors/NotFoundError';\nimport { FormErrorState } from '../reducers/formErrorReducer';\n\nexport const FETCH_TIMELINE_START = 'FETCH_TIMELINE_START';\nexport const FETCH_TIMELINE_SUCCESS = 'FETCH_TIMELINE_SUCCESS';\nexport const FETCH_TIMELINE_FAIL = 'FETCH_TIMELINE_FAIL';\n\ntype Actions =\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction;\ntype ThunkResult<R> = ThunkAction<R, void, undefined, Actions>;\n\nexport function fetchTimelineAction(\n  createdAt?: number,\n  itemId?: number,\n  categoryId?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, Actions>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(fetchTimelineStartAction());\n      })\n      .then(() => {\n        let getParams: NewItemReq = {\n          item_id: itemId,\n          created_at: createdAt,\n        };\n\n        if (categoryId) {\n          return AppClient.get(`/new_items/${categoryId}.json`, getParams);\n        }\n\n        return AppClient.get(`/new_items.json`, getParams);\n      })\n      .then(async (response: Response) => {\n        if (!response.ok) {\n          if (response.status === 404) {\n            throw new NotFoundError('Item not found');\n          }\n\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: NewItemRes | NewCategoryItemRes) => {\n        dispatch(\n          fetchTimelineSuccessAction({\n            items: body.items.map((item: ItemSimple) => ({\n              id: item.id,\n              status: item.status,\n              name: item.name,\n              price: item.price,\n              thumbnailUrl: item.image_url,\n              createdAt: item.created_at,\n            })),\n            hasNext: body.has_next,\n            categoryId: body.root_category_id,\n            categoryName: body.root_category_name,\n          }),\n        );\n      })\n      .catch((err: Error) => {\n        dispatch(\n          fetchTimelineFailAction({\n            error: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface FetchTimelineStartAction\n  extends Action<typeof FETCH_TIMELINE_START> {}\n\nconst fetchTimelineStartAction = (): FetchTimelineStartAction => {\n  return {\n    type: FETCH_TIMELINE_START,\n  };\n};\n\nexport interface FetchTimelineSuccessAction\n  extends Action<typeof FETCH_TIMELINE_SUCCESS> {\n  payload: {\n    items: TimelineItem[];\n    hasNext: boolean;\n    categoryId?: number;\n    categoryName?: string;\n  };\n}\n\nconst fetchTimelineSuccessAction = (payload: {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}): FetchTimelineSuccessAction => {\n  return {\n    type: FETCH_TIMELINE_SUCCESS,\n    payload,\n  };\n};\n\nexport interface FetchTimelineFailAction\n  extends Action<typeof FETCH_TIMELINE_FAIL> {\n  payload: FormErrorState;\n}\n\nconst fetchTimelineFailAction = (\n  newErrors: FormErrorState,\n): FetchTimelineFailAction => {\n  return {\n    type: FETCH_TIMELINE_FAIL,\n    payload: newErrors,\n  };\n};\n","import {\n  INTERNAL_SERVER_ERROR,\n  InternalServerErrorAction,\n  NOT_FOUND_ERROR,\n  NotFoundErrorAction,\n} from '../actions/errorAction';\nimport {\n  FETCH_ITEM_FAIL,\n  FetchItemFailAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FetchSettingsFailAction,\n} from '../actions/settingsAction';\nimport {\n  POST_SHIPPED_FAIL,\n  PostShippedFailAction,\n} from '../actions/postShippedAction';\nimport {\n  POST_SHIPPED_DONE_FAIL,\n  PostShippedDoneFailAction,\n} from '../actions/postShippedDoneAction';\nimport {\n  POST_COMPLETE_FAIL,\n  PostCompleteFailAction,\n} from '../actions/postCompleteAction';\nimport {\n  FETCH_TRANSACTIONS_FAIL,\n  FetchTransactionsFailAction,\n} from '../actions/fetchTransactionsAction';\nimport {\n  FETCH_USER_ITEMS_FAIL,\n  FetchUserItemsFailAction,\n} from '../actions/fetchUserItemsAction';\nimport {\n  FETCH_USER_PAGE_DATA_FAIL,\n  FetchUserPageDataFailAction,\n} from '../actions/fetchUserPageDataAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FetchTimelineFailAction,\n} from '../actions/fetchTimelineAction';\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType =\n  | typeof NoError\n  | typeof NotFoundError\n  | typeof InternalServerError;\n\nexport interface ErrorState {\n  errorType: ErrorType;\n  errorCode?: number;\n}\n\nconst initialState: ErrorState = {\n  errorType: NoError,\n};\n\ntype errorActions =\n  | NotFoundErrorAction\n  | InternalServerErrorAction\n  | FetchItemFailAction\n  | FetchTimelineFailAction\n  | FetchTransactionsFailAction\n  | FetchUserItemsFailAction\n  | FetchUserPageDataFailAction\n  | FetchSettingsFailAction\n  | PostShippedFailAction\n  | PostShippedDoneFailAction\n  | PostCompleteFailAction;\n\nconst error = (\n  state: ErrorState = initialState,\n  action: errorActions,\n): ErrorState => {\n  switch (action.type) {\n    case NOT_FOUND_ERROR:\n      return { errorType: NotFoundError, errorCode: 404 };\n    case INTERNAL_SERVER_ERROR:\n    case FETCH_ITEM_FAIL:\n    case FETCH_TIMELINE_FAIL:\n    case FETCH_TRANSACTIONS_FAIL:\n    case FETCH_USER_ITEMS_FAIL:\n    case FETCH_USER_PAGE_DATA_FAIL:\n    case FETCH_SETTINGS_FAIL:\n    case POST_SHIPPED_FAIL:\n    case POST_SHIPPED_DONE_FAIL:\n    case POST_COMPLETE_FAIL:\n      return { errorType: InternalServerError, errorCode: 500 };\n    default:\n      return { errorType: NoError };\n  }\n};\n\nexport default error;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => <div>404 Not Found</div>;\n\nexport default NotFoundPage;\n","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n  <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;\n","import {\n  ErrorType,\n  InternalServerError,\n  NotFoundError,\n} from '../reducers/errorReducer';\nimport { branch, renderComponent, withProps, compose } from 'recompose';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport InternalServerErrorPage from '../pages/error/InternalServerErrorPage';\n\nexport interface ErrorProps {\n  errorType: ErrorType;\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n  compose<Props, Props>(\n    withProps((props: Props) => ({\n      errorType: props.errorType,\n    })),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === NotFoundError,\n      renderComponent(NotFoundPage),\n    ),\n    branch<BaseProps>(\n      (props: BaseProps) => props.errorType === InternalServerError,\n      renderComponent(InternalServerErrorPage),\n    ),\n  );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from '../containers/SellFormContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <SellFormContainer />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import * as React from 'react';\nimport { Button, createStyles, Theme, WithStyles } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    button: {\n      margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      marginTop: -12,\n      marginLeft: -12,\n    },\n  });\n\ninterface Props extends WithStyles<typeof styles> {\n  onClick: (e: React.MouseEvent) => void;\n  buttonName: string;\n  loading: boolean;\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this._onClick = this._onClick.bind(this);\n  }\n\n  _onClick(e: React.MouseEvent) {\n    e.preventDefault();\n\n    this.props.onClick(e);\n  }\n\n  render() {\n    const { loading, buttonName, classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button\n          className={classes.button}\n          disabled={loading}\n          onClick={this._onClick}\n        >\n          {buttonName}\n        </Button>\n        {loading && (\n          <CircularProgress size={24} className={classes.buttonProgress} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(LoadingButtonComponent);\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport { BuyFormErrorState } from '../reducers/formErrorReducer';\nimport { ErrorMessageComponent } from './ErrorMessageComponent';\nimport {\n  createStyles,\n  StyleRules,\n  Theme,\n  WithStyles,\n} from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport validator from 'validator';\nimport LoadingButton from './LoadingButtonComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n      textAlign: 'center',\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(3, 0, 1),\n    },\n  });\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n  item: ItemData;\n  onBuyAction: (itemId: number, cardNumber: string) => void;\n  loadingBuy: boolean;\n  errors: BuyFormErrorState;\n}\n\ninterface ItemBuyFormState {\n  cardNumber: string;\n}\n\nclass ItemBuyFormComponent extends React.Component<\n  ItemBuyFormProps,\n  ItemBuyFormState\n> {\n  constructor(props: ItemBuyFormProps) {\n    super(props);\n\n    this.state = {\n      cardNumber: '',\n    };\n\n    this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n  }\n\n  _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n    const cardNumber = e.target.value;\n\n    if (cardNumber.length > 8) {\n      return;\n    }\n\n    if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n      return;\n    }\n\n    this.setState({\n      cardNumber: cardNumber.toUpperCase(),\n    });\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    const {\n      item: { id },\n    } = this.props;\n    const { cardNumber } = this.state;\n    this.props.onBuyAction(id, cardNumber);\n  }\n\n  render() {\n    const { item, errors, classes, loadingBuy } = this.props;\n    const cardError = errors.cardError;\n    const appError = errors.buyError;\n\n    return (\n      <React.Fragment>\n        <img\n          className={classes.itemImage}\n          alt={item.name}\n          src={item.thumbnailUrl}\n        />\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{`${item.price}ｲｽｺｲﾝ`}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"cardNumber\"\n            label=\"カード番号\"\n            name=\"cardNumber\"\n            helperText=\"16進数大文字で入力してください\"\n            error={!!cardError}\n            value={this.state.cardNumber}\n            onChange={this._onChangeCardNumber}\n            autoFocus\n          />\n          {cardError && (\n            <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n          )}\n          <LoadingButton\n            onClick={this._onClickBuyButton}\n            buttonName={'購入'}\n            loading={loadingBuy}\n          />\n          {appError && (\n            <ErrorMessageComponent id=\"buyButton\" error={appError} />\n          )}\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n  private baseUrl: string = config.paymentUrl;\n  private defaultHeaders: HeadersInit = {};\n\n  async get(path: string): Promise<Response> {\n    return await fetch(`${this.baseUrl}${path}`, {\n      method: 'GET',\n      headers: this.defaultHeaders,\n    });\n  }\n\n  async post(path: string, params?: Object): Promise<Response> {\n    let requestOption: RequestInit = {\n      method: 'POST',\n      mode: 'cors',\n      headers: Object.assign({}, this.defaultHeaders, {\n        'Content-Type': 'application/json',\n      }),\n      credentials: 'same-origin',\n    };\n\n    if (params) {\n      requestOption.body = JSON.stringify(params);\n    }\n\n    return await fetch(`${this.baseUrl}${path}`, requestOption);\n  }\n}\n\nexport default new PaymentClient();\n","import { ResponseError } from './ResponseError';\n\nexport class PaymentResponseError extends ResponseError {}\n","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { push } from 'connected-react-router';\nimport { Action, AnyAction } from 'redux';\nimport { BuyReq, ErrorRes } from '../types/appApiTypes';\nimport { routes } from '../routes/Route';\nimport { CardReq, CardRes } from '../types/paymentApiTypes';\nimport { PaymentResponseError } from '../errors/PaymentResponseError';\nimport { AppResponseError } from '../errors/AppResponseError';\nimport { ResponseError } from '../errors/ResponseError';\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>;\n\nexport function buyItemAction(\n  itemId: number,\n  cardNumber: string,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve(() => {\n      dispatch(buyStartAction());\n    })\n      .then(() => {\n        return PaymentClient.post('/card', {\n          card_number: cardNumber,\n          shop_id: '11', // TODO getting from /settings\n        } as CardReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new PaymentResponseError(\n            'request to /card of payment service was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .catch((err: Error) => {\n        // Wrapping to judge kinds of error\n        throw new PaymentResponseError(err.message);\n      })\n      .then((body: CardRes) => {\n        return AppClient.post('/buy', {\n          item_id: itemId,\n          token: body.token,\n        } as BuyReq);\n      })\n      .then((response: Response) => {\n        if (!response.ok) {\n          throw new AppResponseError(\n            'request to /buy of app was failed',\n            response,\n          );\n        }\n\n        return response.json();\n      })\n      .then(() => {\n        dispatch(buySuccessAction());\n        dispatch(push(routes.buyComplete.path));\n      })\n      .catch(async (err: Error) => {\n        if (err instanceof ResponseError) {\n          const res = err.getResponse();\n          let action: Function;\n\n          if (err instanceof PaymentResponseError) {\n            action = usingCardFailAction;\n          } else if (err instanceof AppResponseError) {\n            action = buyFailAction;\n          } else {\n            action = buyFailAction;\n          }\n\n          if (res) {\n            const errRes: ErrorRes = await res.json();\n\n            if (errRes) {\n              return dispatch(action(errRes.error));\n            }\n          }\n\n          dispatch(action(err.message));\n          return;\n        }\n\n        dispatch(buyFailAction(err.message));\n      });\n  };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction {\n  return {\n    type: BUY_START,\n  };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS> {}\n\nexport function buySuccessAction(): BuySuccessAction {\n  return {\n    type: BUY_SUCCESS,\n  };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction {\n  return {\n    type: USING_CARD_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        cardError: error,\n      },\n    },\n  };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n  return {\n    type: BUY_FAIL,\n    payload: {\n      error: undefined,\n      buyFormError: {\n        buyError: error,\n      },\n    },\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemBuyFormComponent from '../components/ItemBuyFormComponent';\nimport { buyItemAction } from '../actions/buyAction';\n\nconst mapStateToProps = (state: any) => ({\n  item: state.viewingItem.item,\n  errors: state.formError.buyFormError,\n  loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  onBuyAction: (itemId: number, cardNumber: string) => {\n    dispatch(buyItemAction(itemId, cardNumber));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemBuyFormComponent);\n","import React from 'react';\nimport ItemBuyFormContainer from '../containers/ItemBuyFormContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\n\nconst ItemBuyPage: React.FC = () => {\n  return (\n    <BasePageContainer>\n      <ItemBuyFormContainer />\n    </BasePageContainer>\n  );\n};\n\nexport default ItemBuyPage;\n","import { AppBar } from '@material-ui/core';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Grid from '@material-ui/core/Grid';\nimport * as React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n  },\n  buyButton: {\n    margin: theme.spacing(1),\n  },\n}));\n\ntype Props = {\n  price: number;\n  buttons: {\n    onClick: (e: React.MouseEvent) => void;\n    buttonText: string;\n    disabled: boolean;\n  }[];\n};\n\nconst ItemFooterComponent: React.FC<Props> = ({ price, buttons }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n      <Grid container spacing={2} direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\">{price}ｲｽｺｲﾝ</Typography>\n        </Grid>\n        {buttons.map(button => {\n          return (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                className={classes.buyButton}\n                onClick={button.onClick}\n                disabled={button.disabled}\n              >\n                {button.buttonText}\n              </Button>\n            </Grid>\n          );\n        })}\n      </Grid>\n    </AppBar>\n  );\n};\n\nexport default ItemFooterComponent;\n","import React from 'react';\nimport { ItemData } from '../dataObjects/item';\nimport { createStyles, Theme, Typography, WithStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link, Link as RouteLink, RouteComponentProps } from 'react-router-dom';\nimport { routes } from '../routes/Route';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport LoadingComponent from '../components/LoadingComponent';\nimport ItemFooterComponent from '../components/ItemFooterComponent';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    title: {\n      margin: theme.spacing(3),\n    },\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    avatar: {\n      width: '50px',\n      height: '50px',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item: ItemData;\n  viewer: {\n    userId: number;\n  };\n  load: (itemId: string) => void;\n  onClickBuy: (itemId: number) => void;\n  onClickItemEdit: (itemId: number) => void;\n  onClickBump: (itemId: number) => void;\n  onClickTransaction: (itemId: number) => void;\n}\n\ntype Props = ItemPageProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass ItemPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n    this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    this._onClickItemEditButton = this._onClickItemEditButton.bind(this);\n    this._onClickBumpButton = this._onClickBumpButton.bind(this);\n    this._onClickTransaction = this._onClickTransaction.bind(this);\n  }\n\n  _onClickBuyButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBuy(this.props.item.id);\n  }\n\n  _onClickItemEditButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickItemEdit(this.props.item.id);\n  }\n\n  _onClickBumpButton(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickBump(this.props.item.id);\n  }\n\n  _onClickTransaction(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickTransaction(this.props.item.id);\n  }\n\n  render() {\n    const { classes, item, loading, viewer } = this.props;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    let buttons: {\n      onClick: (e: React.MouseEvent) => void;\n      buttonText: string;\n      disabled: boolean;\n    }[] = [\n      {\n        onClick: this._onClickBuyButton,\n        buttonText: '購入',\n        disabled: false,\n      },\n    ];\n\n    // 自分の商品で出品中なら編集画面へ遷移 / Bumpボタンを表示\n    if (viewer.userId === item.sellerId && item.status === 'on_sale') {\n      buttons = [\n        {\n          onClick: this._onClickBumpButton,\n          buttonText: 'Bump',\n          disabled: false,\n        },\n        {\n          onClick: this._onClickItemEditButton,\n          buttonText: '商品編集',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 出品者 or 購入者で取引中か売り切れなら取引画面へのボタンを追加\n    if (\n      (viewer.userId === item.sellerId || viewer.userId === item.buyerId) &&\n      (item.status === 'trading' || item.status === 'sold_out')\n    ) {\n      buttons = [\n        {\n          onClick: this._onClickTransaction,\n          buttonText: '取引画面',\n          disabled: false,\n        },\n      ];\n    }\n\n    // 商品が出品中でなく、出品者でも購入者でもない場合は売り切れ\n    if (\n      item.status !== 'on_sale' &&\n      viewer.userId !== item.sellerId &&\n      viewer.userId !== item.buyerId\n    ) {\n      buttons = [\n        {\n          onClick(e: React.MouseEvent) {},\n          buttonText: '売り切れ',\n          disabled: true,\n        },\n      ];\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography className={classes.title} variant=\"h3\">\n          {item.name}\n        </Typography>\n        <Grid container spacing={2}>\n          <Grid item>\n            <img\n              className={classes.itemImage}\n              alt={item.name}\n              src={item.thumbnailUrl}\n            />\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">商品説明</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">{item.description}</Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">カテゴリ</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Typography variant=\"body1\">\n                    <Link\n                      to={routes.categoryTimeline.getPath(\n                        item.category.parentId,\n                      )}\n                    >\n                      {item.category.parentCategoryName}\n                    </Link>{' '}\n                    > {item.category.categoryName}\n                  </Typography>\n                </div>\n\n                <div className={classes.descSection}>\n                  <Typography variant=\"h4\">出品者</Typography>\n                  <Divider className={classes.divider} variant=\"middle\" />\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    wrap=\"nowrap\"\n                    spacing={2}\n                  >\n                    <Grid item>\n                      <RouteLink\n                        className={classes.link}\n                        to={routes.user.getPath(item.sellerId)}\n                      >\n                        <Avatar className={classes.avatar}>\n                          {item.seller.accountName.charAt(0)}\n                        </Avatar>\n                      </RouteLink>\n                    </Grid>\n                    <Grid item xs>\n                      <Typography variant=\"body1\">\n                        {item.seller.accountName}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <ItemFooterComponent price={item.price} buttons={buttons} />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ErrorRes, BumpReq, BumpRes } from '../types/appApiTypes';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const POST_BUMP_START = 'POST_BUMP_START';\nexport const POST_BUMP_SUCCESS = 'POST_BUMP_SUCCESS';\nexport const POST_BUMP_FAIL = 'POST_BUMP_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postBumpAction(itemId: number): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postBumpStartAction());\n      })\n      .then(() => {\n        return AppClient.post('/bump', { item_id: itemId } as BumpReq);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: BumpRes) => {\n        dispatch(postBumpSuccessAction());\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postBumpFailAction({\n            error: err.message, // TODO\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostBumpStartAction extends Action<typeof POST_BUMP_START> {}\n\nexport function postBumpStartAction(): PostBumpStartAction {\n  return {\n    type: POST_BUMP_START,\n  };\n}\n\nexport interface PostBumpSuccessAction\n  extends Action<typeof POST_BUMP_SUCCESS> {}\n\nexport function postBumpSuccessAction(): PostBumpSuccessAction {\n  return {\n    type: POST_BUMP_SUCCESS,\n  };\n}\n\nexport interface PostBumpFailAction extends Action<typeof POST_BUMP_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postBumpFailAction(\n  newErrors: FormErrorState,\n): PostBumpFailAction {\n  return {\n    type: POST_BUMP_FAIL,\n    payload: newErrors,\n  };\n}\n","import { connect } from 'react-redux';\nimport ItemPage from '../pages/ItemPage';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { postBumpAction } from '../actions/postBumpAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  viewer: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickBuy: (itemId: number) => {\n    dispatch(push(routes.buy.getPath(itemId)));\n  },\n  onClickItemEdit: (itemId: number) => {\n    dispatch(push(routes.itemEdit.getPath(itemId)));\n  },\n  onClickBump: (itemId: number) => {\n    dispatch(postBumpAction(itemId));\n  },\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemPage);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\n\nconst useStyles = makeStyles(theme => ({\n  itemImage: {\n    height: '100%',\n  },\n}));\n\ninterface ItemComponentProps {\n  itemId: number;\n  imageUrl: string;\n  title: string;\n  price: number;\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n  itemId,\n  imageUrl,\n  title,\n  price,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card>\n      <RouteLink to={routes.item.getPath(itemId)}>\n        <img className={classes.itemImage} src={imageUrl} alt={title} />\n      </RouteLink>\n      <GridListTileBar title={title} subtitle={`${price}ｲｽｺｲﾝ`} />\n    </Card>\n  );\n};\n\nexport { ItemComponent };\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '300px',\n    height: '300px',\n  },\n}));\n\ninterface ItemListPageProps {\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (page: number) => void;\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = function({\n  items,\n  hasNext,\n  loadMore,\n}: ItemListPageProps) {\n  const classes = useStyles();\n\n  const itemComponents = [];\n\n  for (const item of items) {\n    itemComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <ItemComponent\n          itemId={item.id}\n          imageUrl={item.thumbnailUrl}\n          title={item.name}\n          price={item.price}\n        />\n      </GridListTile>,\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={3}>{itemComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { ItemListComponent };\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab/Fab';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Edit } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n    position: 'fixed',\n    top: 'auto',\n    bottom: '30px',\n    right: '30px',\n    width: '100px',\n    height: '100px',\n  },\n}));\n\ninterface SellingButtonComponentProps {\n  onClick: (e: React.MouseEvent) => void;\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({\n  onClick,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Fab className={classes.fab} color=\"secondary\" onClick={onClick}>\n      <Edit fontSize=\"large\" />\n    </Fab>\n  );\n};\n\nexport { SellingButonComponent };\n","import { push } from 'connected-react-router';\nimport { SellingButonComponent } from '../components/SellingButtonComponent';\nimport { connect } from 'react-redux';\nimport { routes } from '../routes/Route';\nimport * as React from 'react';\nimport { AppState } from '../index';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  onClick: (e: React.MouseEvent) => {\n    e.preventDefault();\n    dispatch(push(routes.sell.path));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellingButonComponent);\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface ItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: () => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\ntype Props = ItemListPageProps & ErrorProps;\n\nclass ItemListPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load();\n  }\n\n  render() {\n    const { classes, loading, items, loadMore, hasNext } = this.props;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n      );\n      return (\n        <div className={classes.root}>\n          <ItemListComponent\n            items={items}\n            loadMore={loadMoreItems}\n            hasNext={hasNext}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {loading ? <LoadingComponent /> : <Content />}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemListPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport ItemListPage from '../pages/ItemListPage';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: () => {\n    dispatch(fetchTimelineAction());\n  },\n  loadMore: (createdAt: number, itemId: number, page: number) => {\n    dispatch(fetchTimelineAction(createdAt, itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemListPage);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postShipped: (itemId: number) => void;\n};\n\nconst Initial: React.FC<Props> = ({ itemId, postShipped }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postShipped(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品が購入されました</Typography>\n      <Typography variant=\"h6\">発送予約の手続きをしてください</Typography>\n      <Button onClick={onClick}>発送予約</Button>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShippedDone: (itemId: number) => void;\n};\n\nconst WaitShipping: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShippedDone,\n}) => {\n  const classes = useStyles();\n\n  const qrCodeUrl = `/transactions/${transactionEvidenceId}.png`;\n  const onClick = (e: React.MouseEvent) => {\n    postShippedDone(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">購入者の発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">\n        配達員にこちらのQRコードを見せて発送した後、下記の発送完了を押してください\n      </Typography>\n      <img src={qrCodeUrl} alt=\"QRコード\" />\n      <Button onClick={onClick}>発送完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitDone: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を発送しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が商品を受け取るのをお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Seller/Initial';\nimport WaitShipping from './Seller/WaitShipping';\nimport WaitDone from './Seller/WaitDone';\nimport Done from './Seller/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  transactionEvidenceId: number;\n  postShipped: (itemId: number) => void;\n  postShippedDone: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst SellerComponent: React.FC<Props> = ({\n  itemId,\n  transactionEvidenceId,\n  postShipped,\n  postShippedDone,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial itemId={itemId} postShipped={postShipped} />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return (\n      <WaitShipping\n        itemId={itemId}\n        transactionEvidenceId={transactionEvidenceId}\n        postShippedDone={postShippedDone}\n      />\n    );\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone />;\n  }\n\n  return <Done />;\n};\n\nexport default SellerComponent;\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport SellerComponent from '../components/Transaction/SellerComponent';\nimport { postShippedDoneAction } from '../actions/postShippedDoneAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { postShippedAction } from '../actions/postShippedAction';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postShipped: (itemId: number) => {\n    dispatch(postShippedAction(itemId));\n  },\n  postShippedDone: (itemId: number) => {\n    dispatch(postShippedDoneAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SellerComponent);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Initial: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">商品を購入しました</Typography>\n      <Typography variant=\"h6\">\n        購入者が発送予約をするまでお待ち下さい\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Initial;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst WaitShipping: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">発送予約が完了しました</Typography>\n      <Typography variant=\"h6\">出品者からの発送をお待ちください</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default WaitShipping;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n};\n\nconst WaitDone: React.FC<Props> = ({ itemId, postComplete }) => {\n  const classes = useStyles();\n\n  const onClick = (e: React.MouseEvent) => {\n    postComplete(itemId);\n  };\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">出品者により商品が発送されました</Typography>\n      <Typography variant=\"h6\">\n        商品が届き次第、受取完了ボタンを押してください\n      </Typography>\n      <Button onClick={onClick}>受取完了</Button>\n    </React.Fragment>\n  );\n};\n\nexport default WaitDone;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({}));\n\ntype Props = {};\n\nconst Done: React.FC<Props> = () => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\">取引が完了しました</Typography>\n    </React.Fragment>\n  );\n};\n\nexport default Done;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TransactionStatus } from '../../dataObjects/transaction';\nimport { ShippingStatus } from '../../dataObjects/shipping';\nimport Initial from './Buyer/Initial';\nimport WaitShipping from './Buyer/WaitShipping';\nimport WaitDone from './Buyer/WaitDone';\nimport Done from './Buyer/Done';\n\nconst useStyles = makeStyles(theme => ({\n  progress: {\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    margin: 'auto',\n    position: 'absolute',\n  },\n}));\n\ntype Props = {\n  itemId: number;\n  postComplete: (itemId: number) => void;\n  transactionStatus: TransactionStatus;\n  shippingStatus: ShippingStatus;\n};\n\nconst BuyerComponent: React.FC<Props> = ({\n  itemId,\n  postComplete,\n  transactionStatus,\n  shippingStatus,\n}) => {\n  const classes = useStyles();\n\n  if (shippingStatus === 'initial' && transactionStatus === 'wait_shipping') {\n    return <Initial />;\n  }\n\n  if (\n    shippingStatus === 'wait_pickup' &&\n    transactionStatus === 'wait_shipping'\n  ) {\n    return <WaitShipping />;\n  }\n\n  if (transactionStatus === 'wait_done') {\n    return <WaitDone itemId={itemId} postComplete={postComplete} />;\n  }\n\n  return <Done />;\n};\n\nexport default BuyerComponent;\n","import { AppState } from '../index';\nimport { AnyAction } from 'redux';\nimport { connect } from 'react-redux';\nimport BuyerComponent from '../components/Transaction/BuyerComponent';\nimport { postCompleteAction } from '../actions/postCompleteAction';\nimport { ThunkDispatch } from 'redux-thunk';\n\nconst mapStateToProps = (state: AppState) => ({});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  postComplete: (itemId: number) => {\n    dispatch(postCompleteAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyerComponent);\n","import React, { ReactElement } from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport { ItemData } from '../dataObjects/item';\nimport LoadingComponent from '../components/LoadingComponent';\nimport NotFoundPage from './error/NotFoundPage';\nimport SellerTransactionContainer from '../containers/SellerTransactionContainer';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport BuyerTransactionContainer from '../containers/BuyerTransactionContainer';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { routes } from '../routes/Route';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    itemImage: {\n      width: '100%',\n      maxWidth: '500px',\n      height: 'auto',\n    },\n    divider: {\n      margin: theme.spacing(1),\n    },\n    descSection: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n    },\n  });\n\ninterface TransactionProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  item?: ItemData;\n  load: (itemId: string) => void;\n  // Logged in user info\n  auth: {\n    userId: number;\n  };\n}\n\ntype Props = TransactionProps &\n  RouteComponentProps<{ item_id: string }> &\n  ErrorProps;\n\nclass TransactionPage extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n\n    this.props.load(this.props.match.params.item_id);\n  }\n\n  render() {\n    const {\n      loading,\n      item,\n      auth: { userId },\n      classes,\n    } = this.props;\n\n    if (loading) {\n      return (\n        <BasePageContainer>\n          <LoadingComponent />\n        </BasePageContainer>\n      );\n    }\n\n    if (item === undefined) {\n      return <NotFoundPage />;\n    }\n\n    if (\n      item.shippingStatus === undefined ||\n      item.transactionEvidenceStatus === undefined ||\n      item.transactionEvidenceId === undefined\n    ) {\n      return (\n        // TODO: pass error message\n        <InternalServerErrorPage />\n      );\n    }\n\n    let TransactionComponent: ReactElement | undefined;\n\n    if (userId === item.sellerId) {\n      TransactionComponent = (\n        <SellerTransactionContainer\n          itemId={item.id}\n          transactionEvidenceId={item.transactionEvidenceId}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (userId === item.buyerId) {\n      TransactionComponent = (\n        <BuyerTransactionContainer\n          itemId={item.id}\n          transactionStatus={item.transactionEvidenceStatus}\n          shippingStatus={item.shippingStatus}\n        />\n      );\n    }\n\n    if (TransactionComponent === undefined) {\n      return <NotFoundPage />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {TransactionComponent}\n          </Grid>\n          <Grid item xs={12}>\n            <Typography className={classes.descSection} variant=\"h4\">\n              取引情報\n            </Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n          </Grid>\n          <Grid item xs={3}>\n            <RouteLink to={routes.item.getPath(item.id)}>\n              <img\n                className={classes.itemImage}\n                alt={item.name}\n                src={item.thumbnailUrl}\n              />\n            </RouteLink>\n          </Grid>\n          <Grid item xs={9} container>\n            <Grid item>\n              <Typography variant=\"h5\">{item.name}</Typography>\n              <Typography variant=\"h6\">{item.price}ｲｽｺｲﾝ</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(TransactionPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport TransactionPage from '../pages/TransactionPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  auth: {\n    userId: state.authStatus.userId || 0,\n  },\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TransactionPage);\n","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Paper from '@material-ui/core/Paper/Paper';\nimport { ItemStatus } from '../dataObjects/item';\n\nconst useStyles = makeStyles(theme => ({\n  normalLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.secondary.light,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  soldOutLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.grey.A100,\n  },\n  tradingLabel: {\n    width: '30px',\n    height: '30px',\n    color: theme.palette.primary.light,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\ntype Props = {\n  itemStatus: ItemStatus;\n};\n\nfunction getLabelByStatus(\n  status: ItemStatus,\n): [string, 'normalLabel' | 'soldOutLabel' | 'tradingLabel'] {\n  switch (status) {\n    case 'on_sale':\n      return ['出品中', 'normalLabel'];\n    case 'trading':\n      return ['取引中', 'tradingLabel'];\n    case 'sold_out':\n      return ['売却済', 'soldOutLabel'];\n    case 'stop':\n      return ['出品停止中', 'normalLabel'];\n    case 'cancel':\n      return ['キャンセル', 'normalLabel'];\n  }\n}\n\nconst TransactionLabel: React.FC<Props> = ({ itemStatus }) => {\n  const classes = useStyles();\n  const [labelName, classKey] = getLabelByStatus(itemStatus);\n  const className = classes[classKey];\n\n  return <Paper className={className}>{labelName}</Paper>;\n};\n\nexport { TransactionLabel };\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { Link as RouteLink } from 'react-router-dom';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { routes } from '../routes/Route';\nimport { TransactionItem } from '../dataObjects/item';\nimport CardMedia from '@material-ui/core/CardMedia/CardMedia';\nimport CardContent from '@material-ui/core/CardContent/CardContent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { TransactionLabel } from './TransactionLabelComponent';\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    display: 'flex',\n  },\n}));\n\ninterface Props {\n  item: TransactionItem;\n}\n\nconst TransactionComponent: React.FC<Props> = ({ item }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <RouteLink to={routes.transaction.getPath(item.id)}>\n        <Card>\n          <CardMedia image={item.thumbnailUrl} title={item.name} />\n          <CardContent>\n            <Typography>{item.name}</Typography>\n            <TransactionLabel itemStatus={item.status} />\n          </CardContent>\n        </Card>\n      </RouteLink>\n    </Card>\n  );\n};\n\nexport { TransactionComponent };\n","import React from 'react';\nimport { TransactionItem } from '../dataObjects/item';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport CircularProgress from '@material-ui/core/CircularProgress/CircularProgress';\nimport { TransactionComponent } from './TransactionComponent';\n\nconst useStyles = makeStyles(theme => ({\n  grid: {\n    width: '900px',\n    height: '300px',\n  },\n}));\n\ninterface Props {\n  items: TransactionItem[];\n  hasNext: boolean;\n  loadMore: (createdAt: number, itemId: number, page: number) => void;\n}\n\nconst TransactionListComponent: React.FC<Props> = function({\n  items,\n  hasNext,\n  loadMore,\n}: Props) {\n  const classes = useStyles();\n\n  const transactionsComponents = [];\n\n  for (const item of items) {\n    transactionsComponents.push(\n      <GridListTile className={classes.grid} key={item.id}>\n        <TransactionComponent item={item} />\n      </GridListTile>,\n    );\n  }\n\n  const lastItem = items[items.length - 1];\n\n  return (\n    <InfiniteScroll\n      pageStart={0}\n      loadMore={loadMore.bind(null, lastItem.createdAt, lastItem.id)}\n      hasMore={hasNext}\n      loader={<CircularProgress />}\n    >\n      <GridList cols={1}>{transactionsComponents}</GridList>\n    </InfiniteScroll>\n  );\n};\n\nexport { TransactionListComponent };\n","import React, { ReactElement } from 'react';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport { ItemData, TransactionItem } from '../dataObjects/item';\nimport { UserData } from '../dataObjects/user';\nimport Avatar from '@material-ui/core/Avatar';\nimport { createStyles, Grid, Theme, WithStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { TransactionListComponent } from '../components/TransactionListComponent';\nimport Tabs from '@material-ui/core/Tabs/Tabs';\nimport Tab from '@material-ui/core/Tab/Tab';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(3),\n      width: '100px',\n      height: '100px',\n    },\n    tab: {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.primary.light,\n    },\n    list: {\n      marginTop: theme.spacing(4),\n    },\n  });\n\ninterface UserPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (userId: number, isMyPage: boolean) => void;\n  loggedInUserId: number;\n  items: ItemData[];\n  itemsHasNext: boolean;\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  transactions: TransactionItem[];\n  transactionsHasNext: boolean;\n  transactionsLoadMore: (\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => void;\n  user: UserData;\n}\n\ntype Props = UserPageProps &\n  ErrorProps &\n  RouteComponentProps<{ user_id: string }>;\n\ntype State = {\n  tabValue: any;\n};\n\nclass UserPage extends React.Component<Props, State> {\n  private ITEM_LIST_TAB = 0;\n  private TRANSACTION_LIST_TAB = 1;\n  private readonly isMyPage: boolean;\n\n  constructor(props: Props) {\n    super(props);\n\n    const pageUserId = Number(this.props.match.params.user_id);\n    this.isMyPage = this.props.loggedInUserId === pageUserId;\n    this.props.load(pageUserId, this.isMyPage);\n    this.state = {\n      tabValue: this.ITEM_LIST_TAB,\n    };\n\n    this._handleChange = this._handleChange.bind(this);\n  }\n\n  _handleChange(e: React.ChangeEvent<{}>, newValue: any) {\n    this.setState({\n      tabValue: newValue,\n    });\n  }\n\n  _getItemList(): ReactElement {\n    const { items } = this.props;\n\n    if (items.length === 0) {\n      return <Typography>現在出品されている商品はありません</Typography>;\n    }\n\n    const { itemsHasNext, itemsLoadMore, user } = this.props;\n    const lastItem = items[items.length - 1];\n\n    return (\n      <ItemListComponent\n        items={items}\n        hasNext={itemsHasNext}\n        loadMore={itemsLoadMore.bind(\n          null,\n          user.id,\n          lastItem.id,\n          lastItem.createdAt,\n        )}\n      />\n    );\n  }\n\n  _getTransactionsList(): ReactElement {\n    const { transactions } = this.props;\n\n    if (transactions.length === 0) {\n      return <Typography>取引はありません</Typography>;\n    }\n\n    const { transactionsHasNext, transactionsLoadMore } = this.props;\n    const lastTransaction = transactions[transactions.length - 1];\n\n    return (\n      <TransactionListComponent\n        items={transactions}\n        hasNext={transactionsHasNext}\n        loadMore={transactionsLoadMore.bind(\n          null,\n          lastTransaction.id,\n          lastTransaction.createdAt,\n        )}\n      />\n    );\n  }\n\n  render() {\n    const { loading, user, classes } = this.props;\n    const { tabValue } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          spacing={2}\n        >\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              {user.accountName.charAt(0)}\n            </Avatar>\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"h3\">{user.accountName}</Typography>\n          </Grid>\n        </Grid>\n        <Divider variant=\"middle\" />\n        <Tabs value={tabValue} onChange={this._handleChange}>\n          <Tab label=\"出品商品\" id=\"tab--item-list\" />\n          {this.isMyPage && <Tab label=\"取引一覧\" id=\"tab--item-list\" />}\n        </Tabs>\n        <div\n          className={classes.list}\n          id=\"tab--item-list\"\n          hidden={tabValue !== this.ITEM_LIST_TAB}\n        >\n          {this._getItemList()}\n        </div>\n        {this.isMyPage && (\n          <div\n            className={classes.list}\n            id=\"tab--transactions-list\"\n            hidden={tabValue !== this.TRANSACTION_LIST_TAB}\n          >\n            {this._getTransactionsList()}\n          </div>\n        )}\n        <SellingButtonContainer />\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(UserPage));\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserPage from '../pages/UserPage';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport { fetchTransactionsAction } from '../actions/fetchTransactionsAction';\nimport { fetchUserItemsAction } from '../actions/fetchUserItemsAction';\nimport { fetchUserPageDataAction } from '../actions/fetchUserPageDataAction';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isUserPageLoading,\n  loggedInUserId: state.authStatus.userId,\n  items: state.userItems.items,\n  itemsHasNext: state.userItems.hasNext,\n  transactions: state.transactions.items,\n  transactionsHasNext: state.transactions.hasNext,\n  user: state.viewingUser.user,\n  errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (userId: number, isMyPage: boolean) => {\n    dispatch(fetchUserPageDataAction(userId, isMyPage));\n  },\n  itemsLoadMore: (\n    userId: number,\n    itemId: number,\n    createdAt: number,\n    page: number,\n  ) => {\n    dispatch(fetchUserItemsAction(userId, itemId, createdAt));\n  },\n  transactionsLoadMore: (itemId: number, createdAt: number, page: number) => {\n    dispatch(fetchTransactionsAction(itemId, createdAt));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Grid } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Divider from '@material-ui/core/Divider';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport SellingButtonComponent from '../containers/SellingButtonContainer';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(3),\n    width: '100px',\n    height: '100px',\n  },\n  divider: {\n    margin: theme.spacing(1),\n  },\n  descSection: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\ntype Props = {\n  id?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n};\n\nconst UserSettingPage: React.FC<Props> = ({\n  id,\n  accountName,\n  address,\n  numSellItems,\n}) => {\n  const classes = useStyles();\n\n  if (\n    id === undefined ||\n    accountName === undefined ||\n    address === undefined ||\n    numSellItems === undefined\n  ) {\n    return <InternalServerErrorPage />;\n  }\n\n  return (\n    <BasePageContainer>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n        spacing={2}\n      >\n        <Grid item xs={3}>\n          <Avatar className={classes.avatar}>{accountName.charAt(0)}</Avatar>\n        </Grid>\n        <Grid item xs={9}>\n          <Typography variant=\"h3\">{accountName}</Typography>\n        </Grid>\n      </Grid>\n      <Grid container>\n        <Grid item xs={12}>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">住所</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{address}</Typography>\n          </div>\n          <div className={classes.descSection}>\n            <Typography variant=\"h4\">出品数</Typography>\n            <Divider className={classes.divider} variant=\"middle\" />\n            <Typography variant=\"body1\">{numSellItems}</Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <SellingButtonComponent />\n    </BasePageContainer>\n  );\n};\n\nexport default UserSettingPage;\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport UserSettingPage from '../pages/UserSettingPage';\nimport { Dispatch } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  id: state.authStatus.userId,\n  accountName: state.authStatus.accountName,\n  address: state.authStatus.address,\n  numSellItems: state.authStatus.numSellItems,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(UserSettingPage);\n","import { AppState } from '../index';\nimport { connect } from 'react-redux';\nimport { AuthRoute } from '../components/Route/AuthRoute';\nimport {fetchSettings} from \"../actions/settingsAction\";\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from \"../LoadingComponent\";\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst AuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for AuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : (\n          isLoggedIn ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to={routes.login.path} />\n          )\n        )\n      }\n    />\n  );\n};\n\nexport { AuthRoute };\n","import { AppState } from '../index';\nimport {AnyAction, Dispatch} from 'redux';\nimport { connect } from 'react-redux';\nimport { NonAuthRoute } from '../components/Route/NonAuthRoute';\nimport {fetchSettings} from \"../actions/settingsAction\";\nimport {ThunkDispatch} from \"redux-thunk\";\n\nconst mapStateToProps = (state: AppState) => ({\n  isLoggedIn: !!state.authStatus.userId,\n  loading: !state.authStatus.checked,\n  alreadyLoaded: state.authStatus.checked,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction> ) => ({\n  load: () => {\n    dispatch(fetchSettings());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NonAuthRoute);\n","import React from 'react';\nimport { Redirect, Route, RouteProps } from 'react-router';\nimport { routes } from '../../routes/Route';\nimport LoadingComponent from \"../LoadingComponent\";\n\ntype Props = {\n  isLoggedIn: boolean;\n  loading: boolean;\n  load: () => void;\n  alreadyLoaded: boolean;\n} & RouteProps;\n\nconst NonAuthRoute: React.FC<Props> = ({\n  component: Component,\n  isLoggedIn,\n  loading,\n  load,\n  alreadyLoaded,\n  ...rest\n}) => {\n  if (!Component) {\n    throw new Error('component attribute required for NonAuthRoute component');\n  }\n\n  if (!alreadyLoaded) {\n    load();\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <LoadingComponent />\n        ) : (\n          !isLoggedIn ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to={routes.timeline.path} />\n          )\n        )\n      }\n    />\n  );\n};\n\nexport { NonAuthRoute };\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { routes } from '../routes/Route';\nimport { Button } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Link, LinkProps } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  textarea: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  img: {\n    width: '70%',\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst TopPage: React.FC = () => {\n  const classes = useStyles();\n  const LoginButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        ログイン\n      </Link>\n    ),\n  );\n  const RegisterButtonLink = React.forwardRef(\n    (props: LinkProps, ref: React.Ref<any>) => (\n      <Link innerRef={ref} {...props}>\n        新規会員登録\n      </Link>\n    ),\n  );\n\n  return (\n    <BasePageContainer>\n      <div className={classes.paper}>\n        <img className={classes.img} src={'/logo.png'} alt={'ISUCARI'} />\n        <div className={classes.textarea}>\n          <Typography variant=\"h6\">ついにリリース！</Typography>\n          <Typography variant=\"h6\">\n            椅子限定C2CのECサービス カードで簡単決済。\n          </Typography>\n          <Typography variant=\"h6\">\n            もちろんセキュリティも万全。 お互いの住所を知らなくても配送可能。\n          </Typography>\n        </div>\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"contained\"\n          size=\"medium\"\n          component={LoginButtonLink}\n          to={routes.login.path}\n        />\n        <Button\n          color=\"primary\"\n          fullWidth\n          className={classes.button}\n          variant=\"outlined\"\n          size=\"medium\"\n          component={RegisterButtonLink}\n          to={routes.register.path}\n        />\n      </div>\n    </BasePageContainer>\n  );\n};\n\nexport default TopPage;\n","import React from 'react';\nimport { TimelineItem } from '../dataObjects/item';\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from '../containers/SellingButtonContainer';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { createStyles, Theme, WithStyles } from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport { RouteComponentProps } from 'react-router';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport validator from 'validator';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginTop: theme.spacing(1),\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n    },\n  });\n\ninterface CategoryItemListPageProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (categoryId: number) => void;\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId: number;\n  categoryName: string;\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => void;\n}\n\ntype Props = CategoryItemListPageProps &\n  RouteComponentProps<{ category_id: string }> &\n  ErrorProps;\n\ntype State = {\n  categoryIdIsValid: boolean;\n};\n\nclass CategoryItemListPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const categoryId = this.props.match.params.category_id;\n    const categoryIdIsValid = validator.isNumeric(categoryId);\n\n    if (categoryIdIsValid) {\n      this.props.load(Number(categoryId));\n    }\n\n    this.state = {\n      categoryIdIsValid,\n    };\n  }\n\n  render() {\n    const {\n      classes,\n      loading,\n      items,\n      categoryId,\n      categoryName,\n      loadMore,\n      hasNext,\n    } = this.props;\n    const { categoryIdIsValid } = this.state;\n\n    const Content: React.FC<{}> = () => {\n      if (items.length === 0) {\n        return (\n          <div className={classes.root}>\n            <Typography variant=\"h5\">出品されている商品はありません</Typography>\n            <SellingButtonContainer />\n          </div>\n        );\n      }\n\n      const lastItem = items[items.length - 1];\n      const loadMoreItems = loadMore.bind(\n        null,\n        lastItem.createdAt,\n        lastItem.id,\n        categoryId,\n      );\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{categoryName}の新着商品</Typography>\n          <ItemListComponent\n            items={items}\n            hasNext={hasNext}\n            loadMore={loadMoreItems}\n          />\n          <SellingButtonContainer />\n        </div>\n      );\n    };\n\n    return (\n      <BasePageContainer>\n        {!categoryIdIsValid ? (\n          <InternalServerErrorPage />\n        ) : loading ? (\n          <LoadingComponent />\n        ) : (\n          <Content />\n        )}\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(\n  withStyles(styles)(CategoryItemListPage),\n);\n","import { connect } from 'react-redux';\nimport { AppState } from '../index';\nimport { fetchTimelineAction } from '../actions/fetchTimelineAction';\nimport CategoryItemListPage from '../pages/CategoryItemListPage';\n\nconst mapStateToProps = (state: AppState) => {\n  return {\n    items: state.timeline.items,\n    hasNext: state.timeline.hasNext,\n    categoryId: state.timeline.categoryId,\n    categoryName: state.timeline.categoryName,\n    errorType: state.error.errorType,\n    loading: state.page.isTimelineLoading,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => ({\n  load: (categoryId: number) => {\n    dispatch(fetchTimelineAction(undefined, undefined, categoryId));\n  },\n  loadMore: (\n    createdAt: number,\n    itemId: number,\n    categoryId: number,\n    page: number,\n  ) => {\n    dispatch(fetchTimelineAction(createdAt, itemId, categoryId));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(CategoryItemListPage);\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  itemId: number;\n  onClickTransaction: (itemId: number) => void;\n};\n\nconst BuyCompletePage: React.FC<Props> = ({ itemId, onClickTransaction }) => (\n  <BasePageContainer>\n    <div>購入が完了しました</div>\n    <Button\n      onClick={(e: React.MouseEvent) => {\n        onClickTransaction(itemId);\n      }}\n    >\n      取引画面へ\n    </Button>\n  </BasePageContainer>\n);\n\nexport default BuyCompletePage;\n","import { connect } from 'react-redux';\nimport BuyCompletePage from '../pages/BuyComplete';\nimport { Dispatch } from 'redux';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\n\nconst mapStateToProps = (state: any) => ({\n  itemId: state.viewingItem.item.id || 0,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  onClickTransaction: (itemId: number) => {\n    dispatch(push(routes.transaction.getPath(itemId)));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(BuyCompletePage);\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\nimport { FormErrorState } from '../reducers/formErrorReducer';\nimport { Action, AnyAction } from 'redux';\nimport { ErrorRes, ItemEditReq, ItemEditRes } from '../types/appApiTypes';\nimport { push } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport { AppResponseError } from '../errors/AppResponseError';\n\nexport const POST_ITEM_EDIT_START = 'POST_ITEM_EDIT_START';\nexport const POST_ITEM_EDIT_SUCCESS = 'POST_ITEM_EDIT_SUCCESS';\nexport const POST_ITEM_EDIT_FAIL = 'POST_ITEM_EDIT_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>;\n\nexport function postItemEditAction(\n  itemId: number,\n  itemPrice?: number,\n): ThunkResult<void> {\n  return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n    Promise.resolve()\n      .then(() => {\n        dispatch(postItemEditStartAction());\n      })\n      .then(() => {\n        const reqParams = {\n          item_id: itemId,\n        } as ItemEditReq;\n\n        if (itemPrice) {\n          reqParams.item_price = itemPrice;\n        }\n        return AppClient.post('/items/edit', reqParams);\n      })\n      .then(async (response: Response) => {\n        if (response.status !== 200) {\n          const errRes: ErrorRes = await response.json();\n          throw new AppResponseError(errRes.error, response);\n        }\n\n        return await response.json();\n      })\n      .then((body: ItemEditRes) => {\n        dispatch(postItemEditSuccessAction());\n      })\n      .then(() => {\n        dispatch(push(routes.item.getPath(itemId)));\n      })\n      .catch((err: Error) => {\n        dispatch(\n          postItemEditFailAction({\n            itemEditFormError: err.message,\n          }),\n        );\n      });\n  };\n}\n\nexport interface PostItemEditStartAction\n  extends Action<typeof POST_ITEM_EDIT_START> {}\n\nexport function postItemEditStartAction(): PostItemEditStartAction {\n  return {\n    type: POST_ITEM_EDIT_START,\n  };\n}\n\nexport interface PostItemEditSuccessAction\n  extends Action<typeof POST_ITEM_EDIT_SUCCESS> {}\n\nexport function postItemEditSuccessAction(): PostItemEditSuccessAction {\n  return {\n    type: POST_ITEM_EDIT_SUCCESS,\n  };\n}\n\nexport interface PostItemEditFailAction\n  extends Action<typeof POST_ITEM_EDIT_FAIL> {\n  payload: FormErrorState;\n}\n\nexport function postItemEditFailAction(\n  newErrors: FormErrorState,\n): PostItemEditFailAction {\n  return {\n    type: POST_ITEM_EDIT_FAIL,\n    payload: newErrors,\n  };\n}\n","import React from 'react';\nimport BasePageContainer from '../containers/BasePageContainer';\nimport {\n  Button,\n  createStyles,\n  TextField,\n  Theme,\n  Typography,\n  WithStyles,\n} from '@material-ui/core';\nimport { StyleRules } from '@material-ui/core/styles';\nimport { ItemData } from '../dataObjects/item';\nimport { RouteComponentProps } from 'react-router';\nimport { ErrorProps, PageComponentWithError } from '../hoc/withBaseComponent';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport LoadingComponent from '../components/LoadingComponent';\nimport { ErrorMessageComponent } from '../components/ErrorMessageComponent';\nimport validator from 'validator';\nimport InternalServerErrorPage from './error/InternalServerErrorPage';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { routes } from '../routes/Route';\n\nconst styles = (theme: Theme): StyleRules =>\n  createStyles({\n    link: {\n      textDecoration: 'none',\n    },\n  });\n\ninterface BaseProps extends WithStyles<typeof styles> {\n  loading: boolean;\n  load: (itemId: number) => void;\n  item?: ItemData;\n  formError?: string;\n  onClickEdit: (itemId: number, price: number) => void;\n}\n\ntype Props = BaseProps & RouteComponentProps<{ item_id: string }> & ErrorProps;\n\ninterface State {\n  price: number;\n}\n\nclass ItemEditPage extends React.Component<Props, State> {\n  private readonly itemId: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.itemId = Number(this.props.match.params.item_id);\n    this.props.load(this.itemId);\n\n    const { item } = this.props;\n\n    this.state = {\n      price: item ? item.price : 0,\n    };\n\n    this._onClickEdit = this._onClickEdit.bind(this);\n    this._onChangePrice = this._onChangePrice.bind(this);\n  }\n\n  _onClickEdit(e: React.MouseEvent) {\n    e.preventDefault();\n    this.props.onClickEdit(this.itemId, this.state.price);\n  }\n\n  _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n    const input = e.target.value;\n\n    // Only allow number\n    if (!validator.isNumeric(input, { no_symbols: true })) {\n      e.preventDefault();\n      return;\n    }\n\n    this.setState({\n      price: Number(input),\n    });\n  }\n\n  render() {\n    const { loading, item, formError, classes } = this.props;\n    const { price } = this.state;\n\n    if (loading) {\n      return <LoadingComponent />;\n    }\n\n    if (!item) {\n      return <InternalServerErrorPage />;\n    }\n\n    return (\n      <BasePageContainer>\n        <Typography component=\"h1\" variant=\"h5\">\n          商品編集ページ\n        </Typography>\n        <Typography component=\"h2\">{item.name}</Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"price\"\n            label=\"値段\"\n            name=\"price\"\n            value={price}\n            onChange={this._onChangePrice}\n          />\n          {formError && (\n            <ErrorMessageComponent id=\"sellButton\" error={formError} />\n          )}\n          <Button\n            id=\"editButton\"\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this._onClickEdit}\n          >\n            編集する\n          </Button>\n          <RouteLink to={routes.item.getPath(item.id)}>\n            商品ページへ戻る\n          </RouteLink>\n        </form>\n      </BasePageContainer>\n    );\n  }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemEditPage));\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport viewingUser from './viewingUserReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport buyPage from './buyPageReducer';\nimport categories from './categoriesReducer';\nimport timeline from './timelineReducer';\nimport transactions from './transactionsReducer';\nimport userItems from './userItemsReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) =>\n  combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    viewingUser,\n    error,\n    page,\n    buyPage,\n    categories,\n    timeline,\n    transactions,\n    userItems,\n  });\n","import { connect } from 'react-redux';\nimport { fetchItemAction } from '../actions/fetchItemAction';\nimport { AppState } from '../index';\nimport { postItemEditAction } from '../actions/postItemEditAction';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport ItemEditPage from '../pages/ItemEditPage';\n\nconst mapStateToProps = (state: AppState) => ({\n  loading: state.page.isItemLoading,\n  item: state.viewingItem.item,\n  errorType: state.error.errorType,\n  formError: state.formError.itemEditFormError,\n});\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<AppState, undefined, AnyAction>,\n) => ({\n  load: (itemId: string) => {\n    dispatch(fetchItemAction(itemId));\n  },\n  onClickEdit: (itemId: number, price: number) => {\n    dispatch(postItemEditAction(itemId, price));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ItemEditPage);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\nimport SellPage from '../pages/SellPage';\nimport ItemBuyPage from '../pages/ItemBuyPage';\nimport ItemPageContainer from '../containers/ItemPageContainer';\nimport ItemListPageContainer from '../containers/ItemListPageContainer';\nimport TransactionPageContainer from '../containers/TransactionPageContainer';\nimport UserPageContainer from '../containers/UserPageContainer';\nimport UserSettingPageContainer from '../containers/UserSettingPageContainer';\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from '../pages/error/NotFoundPage';\nimport TopPage from '../pages/TopPage';\nimport CategoryItemListPageContainer from '../containers/CategoryItemListPageContainer';\nimport BuyCompleteContainer from '../containers/BuyCompleteContainer';\nimport ItemEditPageContainer from '../containers/ItemEditPageContainer';\n\ninterface route {\n  [name: string]: {\n    path: string;\n    getPath: (...params: any) => string; // TODO: optionalにしたい\n  };\n}\n\nexport const routes: route = {\n  top: {\n    path: '/',\n    getPath: () => '/',\n  },\n  login: {\n    path: '/login',\n    getPath: () => '/login',\n  },\n  register: {\n    path: '/register',\n    getPath: () => 'register',\n  },\n  timeline: {\n    path: '/timeline',\n    getPath: () => '/timeline',\n  },\n  categoryTimeline: {\n    path: '/categories/:category_id/items',\n    getPath: (categoryId: number) => `/categories/${categoryId}/items`,\n  },\n  sell: {\n    path: '/sell',\n    getPath: () => '/sell',\n  },\n  item: {\n    path: '/items/:item_id',\n    getPath: (itemId: number) => `/items/${itemId}`,\n  },\n  itemEdit: {\n    path: '/items/:item_id/edit',\n    getPath: (itemId: number) => `/items/${itemId}/edit`,\n  },\n  buy: {\n    path: '/items/:item_id/buy',\n    getPath: (itemId: number) => `/items/${itemId}/buy`,\n  },\n  buyComplete: {\n    path: '/buy/complete',\n    getPath: () => '/buy/complete',\n  },\n  transaction: {\n    path: '/transactions/:item_id',\n    getPath: (itemId: number) => `/transactions/${itemId}`,\n  },\n  user: {\n    path: '/users/:user_id',\n    getPath: (userId: number) => `/users/${userId}`,\n  },\n  userSetting: {\n    path: '/users/setting',\n    getPath: () => '/users/setting',\n  },\n};\n\nexport const AppRoute: React.FC = () => {\n  return (\n    <Switch>\n      <NonAuthRoute exact path={routes.top.path} component={TopPage} />\n      <NonAuthRoute exact path={routes.login.path} component={SignInPage} />\n      <NonAuthRoute exact path={routes.register.path} component={SignUpPage} />\n      <AuthRoute\n        exact\n        path={routes.timeline.path}\n        component={ItemListPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.categoryTimeline.path}\n        component={CategoryItemListPageContainer}\n      />\n      <AuthRoute exact path={routes.sell.path} component={SellPage} />\n      <AuthRoute\n        exact\n        path={routes.itemEdit.path}\n        component={ItemEditPageContainer}\n      />\n      <AuthRoute exact path={routes.buy.path} component={ItemBuyPage} />\n      <AuthRoute\n        exact\n        path={routes.buyComplete.path}\n        component={BuyCompleteContainer}\n      />\n      <AuthRoute exact path={routes.item.path} component={ItemPageContainer} />{' '}\n      <AuthRoute\n        exact\n        path={routes.transaction.path}\n        component={TransactionPageContainer}\n      />\n      <AuthRoute\n        exact\n        path={routes.userSetting.path}\n        component={UserSettingPageContainer}\n      />\n      <AuthRoute exact path={routes.user.path} component={UserPageContainer} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './routes/Route';\n\nconst App: React.FC<{}> = () => (\n  <React.Fragment>\n    <AppRoute />\n  </React.Fragment>\n);\n\nexport default App;\n","import logger from './logger';\nimport { Middleware } from 'redux';\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;\n","import { AnyAction, Dispatch, Middleware, MiddlewareAPI } from 'redux';\nimport { AppState } from '../index';\n\nconst logger: Middleware = <S extends AppState>({\n  getState,\n}: MiddlewareAPI<Dispatch, S>) => (next: Dispatch<AnyAction>) => (\n  action: any,\n): any => {\n  console.group(action.type);\n  console.info('dispatching', action);\n  const result = next(action);\n  console.log('next state', getState());\n  console.groupEnd();\n  return result;\n};\n\nexport default logger;\n","import {\n  LOGIN_SUCCESS,\n  LoginSuccessAction,\n} from '../actions/authenticationActions';\nimport {\n  REGISTER_SUCCESS,\n  RegisterSuccessAction,\n} from '../actions/registerAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport { UserData } from '../dataObjects/user';\n\nexport interface AuthStatusState {\n  userId?: number;\n  accountName?: string;\n  address?: string;\n  numSellItems?: number;\n  checked: boolean; // 初回のsettings取得が完了したかどうか\n}\n\nconst initialState: AuthStatusState = {\n  checked: false,\n};\n\ntype Actions =\n  | LoginSuccessAction\n  | RegisterSuccessAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction;\n\nconst authStatus = (\n  state: AuthStatusState = initialState,\n  action: Actions,\n): AuthStatusState => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case FETCH_SETTINGS_SUCCESS: {\n      const user: UserData | undefined = action.payload.settings.user;\n      let userPayload:\n        | {\n            userId: number;\n            accountName: string;\n            address?: string;\n            numSellItems: number;\n          }\n        | {} = {};\n\n      if (user) {\n        userPayload = {\n          userId: user.id,\n          accountName: user.accountName,\n          address: user.address || undefined,\n          numSellItems: user.numSellItems,\n        };\n      }\n\n      return {\n        ...state,\n        ...userPayload,\n        checked: true,\n      };\n    }\n    case FETCH_SETTINGS_FAIL: {\n      return {\n        ...state,\n        checked: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default authStatus;\n","import { LOGIN_FAIL, LoginFailAction } from '../actions/authenticationActions';\nimport { AnyAction } from 'redux';\nimport { REGISTER_FAIL, RegisterFailAction } from '../actions/registerAction';\nimport {\n  SELLING_ITEM_FAIL,\n  SellingFailAction,\n} from '../actions/sellingItemAction';\nimport {\n  BUY_FAIL,\n  BuyFailAction,\n  USING_CARD_FAIL,\n  UsingCardFailAction,\n} from '../actions/buyAction';\nimport {\n  POST_ITEM_EDIT_FAIL,\n  PostItemEditFailAction,\n} from '../actions/postItemEditAction';\n\nexport interface FormErrorState {\n  error?: string;\n  buyFormError?: BuyFormErrorState;\n  itemEditFormError?: string;\n}\n\nexport interface BuyFormErrorState {\n  cardError?: string; // Error from payment service\n  buyError?: string; // Error from app\n}\n\nconst initialState: FormErrorState = {\n  error: undefined,\n  buyFormError: {},\n  itemEditFormError: undefined,\n};\n\ntype Actions =\n  | AnyAction\n  | PostItemEditFailAction\n  | LoginFailAction\n  | RegisterFailAction\n  | UsingCardFailAction\n  | BuyFailAction\n  | SellingFailAction;\n\nconst formError = (\n  state: FormErrorState = initialState,\n  action: Actions,\n): FormErrorState => {\n  switch (action.type) {\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case USING_CARD_FAIL:\n    case BUY_FAIL:\n    case SELLING_ITEM_FAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    case POST_ITEM_EDIT_FAIL:\n      return {\n        ...state,\n        itemEditFormError: action.payload.itemEditFormError,\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default formError;\n","import { AnyAction } from 'redux';\nimport { ItemData } from '../dataObjects/item';\nimport {\n  FETCH_ITEM_SUCCESS,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\n\nexport interface ViewingItemState {\n  item?: ItemData;\n}\n\nconst initialState: ViewingItemState = {};\n\ntype actions = AnyAction | FetchItemSuccessAction;\n\nconst viewingItem = (\n  state: ViewingItemState = initialState,\n  action: actions,\n): ViewingItemState => {\n  switch (action.type) {\n    case FETCH_ITEM_SUCCESS:\n      return { ...state, item: action.payload.item };\n    default:\n      return state;\n  }\n};\n\nexport default viewingItem;\n","import { AnyAction } from 'redux';\nimport { UserData } from '../dataObjects/user';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\n\n// ユーザページに表示するユーザ情報のstate\nexport interface ViewingUserState {\n  user?: UserData;\n}\n\nconst initialState: ViewingUserState = {};\n\ntype actions = FetchUserPageDataSuccessAction | AnyAction;\n\nconst viewingUser = (\n  state: ViewingUserState = initialState,\n  action: actions,\n): ViewingUserState => {\n  switch (action.type) {\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return { ...state, user: action.payload.user };\n    default:\n      return { ...state };\n  }\n};\n\nexport default viewingUser;\n","import { AnyAction } from 'redux';\nimport {\n  FETCH_ITEM_FAIL,\n  FETCH_ITEM_START,\n  FETCH_ITEM_SUCCESS,\n  FetchItemFailAction,\n  FetchItemStartAction,\n  FetchItemSuccessAction,\n} from '../actions/fetchItemAction';\nimport {\n  FETCH_SETTINGS_FAIL,\n  FETCH_SETTINGS_START,\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsFailAction,\n  FetchSettingsStartAction,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\nimport {\n  FETCH_TIMELINE_FAIL,\n  FETCH_TIMELINE_START,\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineFailAction,\n  FetchTimelineStartAction,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\nimport { routes } from '../routes/Route';\nimport {\n  Actions as FetchUserPageActions,\n  FETCH_USER_PAGE_DATA_FAIL,\n  FETCH_USER_PAGE_DATA_START,\n  FETCH_USER_PAGE_DATA_SUCCESS,\n} from '../actions/fetchUserPageDataAction';\n\ntype Actions =\n  | LocationChangeAction\n  | FetchItemStartAction\n  | FetchItemSuccessAction\n  | FetchItemFailAction\n  | FetchTimelineStartAction\n  | FetchTimelineSuccessAction\n  | FetchTimelineFailAction\n  | FetchSettingsStartAction\n  | FetchSettingsSuccessAction\n  | FetchSettingsFailAction\n  | FetchUserPageActions\n  | AnyAction;\n\nexport interface PageState {\n  isLoading: boolean;\n  isItemLoading: boolean;\n  isTimelineLoading: boolean;\n  isUserPageLoading: boolean;\n}\n\nconst initialState: PageState = {\n  isLoading: true,\n  isItemLoading: true,\n  isTimelineLoading: true,\n  isUserPageLoading: true,\n};\n\nconst page = (state: PageState = initialState, action: Actions): PageState => {\n  switch (action.type) {\n    // Item page\n    case FETCH_ITEM_START:\n      return { ...state, isItemLoading: true };\n    case FETCH_ITEM_SUCCESS:\n    case FETCH_ITEM_FAIL:\n      return { ...state, isItemLoading: false };\n    // Timeline\n    case FETCH_TIMELINE_START:\n      return { ...state, isTimelineLoading: true };\n    case FETCH_TIMELINE_SUCCESS:\n    case FETCH_TIMELINE_FAIL:\n      return { ...state, isTimelineLoading: false };\n    // Settings\n    case FETCH_SETTINGS_START:\n      return { ...state, isLoading: true };\n    case FETCH_SETTINGS_SUCCESS:\n    case FETCH_SETTINGS_FAIL:\n      return { ...state, isLoading: false };\n    // User page\n    case FETCH_USER_PAGE_DATA_START:\n      return { ...state, isUserPageLoading: true };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n    case FETCH_USER_PAGE_DATA_FAIL:\n      return { ...state, isUserPageLoading: false };\n    // Location change\n    case LOCATION_CHANGE:\n      const {\n        payload: {\n          location: { pathname },\n        },\n      } = action as LocationChangeAction; // TODO なんでasつけないと動かないん？\n\n      switch (pathname) {\n        case routes.timeline.path:\n          // TODO カテゴリ新着, ユーザページのチェックもここに入る\n          return { ...state, isTimelineLoading: true };\n        default:\n          return { ...state };\n      }\n    default:\n      return { ...state };\n  }\n};\n\nexport default page;\n","import { AnyAction } from 'redux';\nimport {\n  BUY_FAIL,\n  BUY_START,\n  BUY_SUCCESS,\n  USING_CARD_FAIL,\n} from '../actions/buyAction';\n\nexport interface BuyPageState {\n  loadingBuy: boolean;\n}\n\nconst initialState: BuyPageState = {\n  loadingBuy: false,\n};\n\nconst buyPage = (\n  state: BuyPageState = initialState,\n  action: AnyAction,\n): BuyPageState => {\n  switch (action.type) {\n    case BUY_START:\n      return { ...state, loadingBuy: true };\n    case BUY_SUCCESS:\n    case BUY_FAIL:\n    case USING_CARD_FAIL:\n      return { ...state, loadingBuy: false };\n    default:\n      return { ...state };\n  }\n};\n\nexport default buyPage;\n","import { AnyAction } from 'redux';\nimport { CategorySimple } from '../dataObjects/category';\nimport {\n  FETCH_SETTINGS_SUCCESS,\n  FetchSettingsSuccessAction,\n} from '../actions/settingsAction';\n\nexport interface CategoriesState {\n  categories: CategorySimple[];\n}\n\nconst initialState: CategoriesState = {\n  categories: [],\n};\n\ntype Actions = FetchSettingsSuccessAction | AnyAction;\n\nconst categories = (\n  state: CategoriesState = initialState,\n  action: Actions,\n): CategoriesState => {\n  switch (action.type) {\n    case FETCH_SETTINGS_SUCCESS:\n      return {\n        categories: action.payload.settings.categories,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default categories;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_TIMELINE_SUCCESS,\n  FetchTimelineSuccessAction,\n} from '../actions/fetchTimelineAction';\nimport { LOCATION_CHANGE } from 'connected-react-router';\n\nexport interface TimelineState {\n  items: TimelineItem[];\n  hasNext: boolean;\n  categoryId?: number;\n  categoryName?: string;\n}\n\nconst initialState: TimelineState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions = FetchTimelineSuccessAction | AnyAction;\n\nconst timeline = (\n  state: TimelineState = initialState,\n  action: Actions,\n): TimelineState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TIMELINE_SUCCESS:\n      const { payload } = action;\n      return {\n        items: state.items.concat(payload.items),\n        hasNext: payload.hasNext,\n        categoryId: payload.categoryId,\n        categoryName: payload.categoryName,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default timeline;\n","import { AnyAction } from 'redux';\nimport { TransactionItem } from '../dataObjects/item';\nimport {\n  FETCH_TRANSACTIONS_SUCCESS,\n  FetchTransactionsSuccessAction,\n} from '../actions/fetchTransactionsAction';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n\nexport interface TransactionsState {\n  items: TransactionItem[];\n  hasNext: boolean;\n}\n\nconst initialState: TransactionsState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions =\n  | FetchTransactionsSuccessAction\n  | LocationChangeAction\n  | FetchUserPageDataSuccessAction\n  | AnyAction;\n\nconst transactions = (\n  state: TransactionsState = initialState,\n  action: Actions,\n): TransactionsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_TRANSACTIONS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.transactions),\n        hasNext: action.payload.transactionsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default transactions;\n","import { AnyAction } from 'redux';\nimport { TimelineItem } from '../dataObjects/item';\nimport {\n  FETCH_USER_ITEMS_SUCCESS,\n  FetchUserItemsSuccessAction,\n} from '../actions/fetchUserItemsAction';\nimport {\n  FETCH_USER_PAGE_DATA_SUCCESS,\n  FetchUserPageDataSuccessAction,\n} from '../actions/fetchUserPageDataAction';\nimport { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n\nexport interface UserItemsState {\n  items: TimelineItem[];\n  hasNext: boolean;\n}\n\nconst initialState: UserItemsState = {\n  items: [],\n  hasNext: false,\n};\n\ntype Actions =\n  | FetchUserItemsSuccessAction\n  | FetchUserPageDataSuccessAction\n  | LocationChangeAction\n  | AnyAction;\n\nconst userItems = (\n  state: UserItemsState = initialState,\n  action: Actions,\n): UserItemsState => {\n  switch (action.type) {\n    case LOCATION_CHANGE:\n      // MEMO: ページ遷移したら再度APIを叩かせるようにリセットする\n      return initialState;\n    case FETCH_USER_ITEMS_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.hasNext,\n      };\n    case FETCH_USER_PAGE_DATA_SUCCESS:\n      return {\n        items: state.items.concat(action.payload.items),\n        hasNext: action.payload.itemsHasNext,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default userItems;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { getStore } from './configureStore';\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n","import { applyMiddleware, createStore, Reducer, Store } from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n  return createStore(\n    reducer,\n    composeWithDevTools(\n      applyMiddleware(thunk, routerMiddleware(history), ...middlewares),\n    ),\n  );\n};\n"],"sourceRoot":""}