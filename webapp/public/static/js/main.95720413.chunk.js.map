{"version":3,"sources":["components/ErrorMessageComponent.tsx","components/SignInFormComponent.tsx","config.ts","errors/ResponseError.ts","errors/AppResponseError.ts","httpClients/appClient.ts","actions/authenticationActions.ts","containers/SignInFormContainer.tsx","actions/settingsAction.ts","components/LoadingComponent.tsx","components/BasePageComponent.tsx","containers/BasePageContainer.tsx","pages/SignInPage.tsx","components/SignUpFormComponent.tsx","actions/registerAction.ts","containers/SignUpFormContainer.tsx","pages/SignUpPage.tsx","components/ItemImageUploadComponent.tsx","components/SellFormComponent.tsx","actions/sellingItemAction.ts","containers/SellFormContainer.tsx","actions/errorAction.ts","errors/NotFoundError.ts","actions/fetchItemPageAction.ts","reducers/errorReducer.ts","pages/error/NotFoundPage.tsx","pages/error/InternalServerErrorPage.tsx","hoc/withBaseComponent.tsx","pages/SellPage.tsx","pages/ItemEditPage.tsx","components/LoadingButtonComponent.tsx","components/ItemBuyFormComponent.tsx","httpClients/paymentClient.ts","errors/PaymentResponseError.ts","actions/buyAction.ts","containers/ItemBuyFormContainer.tsx","reducers/index.ts","pages/ItemBuyPage.tsx","pages/UserSettingPage.tsx","pages/BuyComplete.tsx","pages/ItemPage.tsx","containers/ItemPageContainer.tsx","components/ItemComponent.tsx","components/ItemListComponent.tsx","components/SellingButtonComponent.tsx","containers/SellingButtonContainer.tsx","pages/ItemListPage.tsx","mocks.ts","containers/ItemListPageContainer.tsx","pages/TransactionPage.tsx","containers/TransactionPageContainer.tsx","pages/UserPage.tsx","containers/UserPageContainer.tsx","containers/AuthContainer.tsx","components/Route/AuthRoute.tsx","containers/NonAuthContainer.tsx","components/Route/NonAuthRoute.tsx","routes/Route.tsx","App.tsx","middlewares/index.ts","middlewares/logger.ts","reducers/authStatusReducer.ts","reducers/formErrorReducer.ts","reducers/viewingItemReducer.ts","reducers/pageReducuer.ts","reducers/buyPageReducer.ts","index.tsx","configureStore.ts"],"names":["ErrorMessageComponent","_ref","id","error","react_default","a","createElement","FormHelperText","key","SignInPageFormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","accountName","password","_onSubmit","bind","assertThisInitialized","_onChangeAccountName","_onChangePassword","e","preventDefault","_this$state","onSubmit","setState","target","value","_this$state2","classes","className","paper","Avatar","avatar","LockOutlined","Typography","component","variant","form","noValidate","TextField","margin","required","fullWidth","label","name","autoFocus","onChange","type","autoComplete","ErrorMessageComponent_ErrorMessageComponent","Button","color","onClick","submit","Grid","container","item","xs","react_router_dom","to","routes","register","path","React","Component","withStyles","theme","createStyles","display","flexDirection","alignItems","spacing","backgroundColor","palette","secondary","main","width","marginTop","config","apiUrl","paymentUrl","ResponseError","_Error","message","response","res","inherits","createClass","wrapNativeSuper","Error","AppResponseError","_ResponseError","apply","arguments","appClient","baseUrl","defaultHeaders","fetch","concat","method","headers","params","requestOption","mode","assign","Content-Type","credentials","getCsrfToken","csrf_token","body","JSON","stringify","ok","json","LOGIN_SUCCESS","LOGIN_FAIL","postLoginAction","dispatch","AppClient","post","account_name","then","status","newAuthState","userId","address","payload","push","top","catch","err","newErros","connect","formError","fetchSettingStartAction","fetchSettingsSuccessAction","settings","fetchItemPageFailAction","useStyles","makeStyles","progress","bottom","right","left","position","LoadingComponent","Fragment","CircularProgress","size","themeInstance","createMuiTheme","background","default","BasePageComponent","load","MuiThemeProvider","Container","maxWidth","loading","components_LoadingComponent","children","page","isLoading","Promise","resolve","get","user","undefined","numSellItems","num_sell_items","csrfToken","SignInPage","BasePageContainer","SignInFormContainer","SignUpFormComponent","_onChangeAddress","login","REGISTER_SUCCESS","REGISTER_FAIL","postRegisterAction","SignUpPageFormComponent","SignUpPage","SignUpFormContainer","ItemImageUploadComponent","imagePreviewUrl","_handleImageChange","_this2","files","reader","FileReader","file","onloadend","result","readAsDataURL","imagePreview","console","log","alt","src","Paper_default","Avatar_default","Camera","Typography_default","Grid_default","direction","justify","accept","upload","htmlFor","Button_default","button","SellFormComponent","description","price","_onChangeName","_onChangeDescription","_onChangePrice","sellItem","input","validator","isNumeric","no_symbols","Number","components_ItemImageUploadComponent","multiline","rows","SELLING_ITEM_SUCCESS","SELLING_ITEM_FAIL","listItemAction","itemId","newErrors","NOT_FOUND_ERROR","INTERNAL_SERVER_ERROR","NotFoundError","fetchItemPageStartAction","fetchItemPageSuccessAction","length","errorType","errorCode","NotFoundPage","InternalServerErrorPage","PageComponentWithError","compose","withProps","branch","renderComponent","SellFormContainer","ItemEditPage","LoadingButtonComponent","_onClick","_this$props","buttonName","react","disabled","buttonProgress","marginLeft","ItemBuyFormComponent","cardNumber","_onChangeCardNumber","_onClickBuyButton","isHexadecimal","toUpperCase","onBuyAction","errors","loadingBuy","cardError","appError","buyError","itemImage","thumbnailUrl","TextField_default","helperText","components_LoadingButtonComponent","height","textAlign","paymentClient","PaymentResponseError","BUY_START","BUY_SUCCESS","BUY_FAIL","USING_CARD_FAIL","buyItemAction","PaymentClient","card_number","shop_id","item_id","token","buyComplete","action","getResponse","usingCardFailAction","buyFailAction","buyFormError","history","viewingItem","buyPage","ItemBuyPage","ItemBuyFormContainer","UserSettingPage","BuyCompletePage","ItemPage","match","onClickBuy","title","sm","descSection","Divider","divider","wrap","link","getPath","sellerId","seller","charAt","AppBar","appBar","buyButton","marginBottom","textDecoration","seller_id","buyerId","buyer_id","buyer","fetchItemPageAction","buy","ItemComponent","imageUrl","Card","GridListTileBar","subtitle","grid","ItemListComponent","items","itemComponents","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","GridListTile","ItemComponent_ItemComponent","return","GridList","cols","fab","sell","Fab_default","Edit","fontSize","root","flexWrap","justifyContent","overflow","ItemListComponent_ItemListComponent","SellingButtonContainer","mockUser","mockItems","ItemListPage","TransactionPage","itemList","UserPage","isLoggedIn","authStatus","rest","objectWithoutProperties","react_router","render","timeline","itemEdit","transaction","transactionId","userSetting","AppRoute","NonAuthContainer","exact","AuthContainer","ItemListPageContainer","SellPage","ItemPageContainer","TransactionPageContainer","UserPageContainer","pageName","App","routeComponents","_i","_routes","route","getLinks","Route_AppRoute","middlewares","getState","group","info","groupEnd","objectSpread","initialState","createBrowserHistory","store","reducer","createStore","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","toConsumableArray","getStore","combineReducers","router","connectRouter","ReactDOM","es","esm","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.95720413.chunk.js","sourcesContent":["import React from 'react';\nimport {FormHelperText} from \"@material-ui/core\";\n\ninterface ErrorMessageComponentProps {\n    id: string,\n    error: string,\n}\n\nconst ErrorMessageComponent: React.FC<ErrorMessageComponentProps> = ({ id, error}) => {\n    return (\n        <FormHelperText\n            key={error}\n            id={id}\n            error={true}\n        >\n            {error}\n        </FormHelperText>\n    );\n};\n\nexport { ErrorMessageComponent }","import React from 'react';\n\nimport {Avatar, Typography, TextField, Button, Grid, createStyles, WithStyles} from '@material-ui/core';\nimport { Theme } from '@material-ui/core/styles/createMuiTheme';\nimport { LockOutlined } from '@material-ui/icons';\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignInFormComponentProps extends WithStyles<typeof styles> {\n    onSubmit: (accountName: string, password: string) => void\n    error?: string,\n}\n\ninterface SignInFormComponentState {\n    accountName: string,\n    password: string,\n}\n\nclass SignInPageFormComponent extends React.Component<SignInFormComponentProps, SignInFormComponentState> {\n    constructor(props: SignInFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { accountName, password } = this.state;\n        this.props.onSubmit(accountName, password);\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { accountName, password } = this.state;\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    ログインページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"accountName\"\n                        label=\"ユーザ名\"\n                        name=\"accountName\"\n                        autoFocus\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"signInButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"signInButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this._onSubmit}\n                        className={classes.submit}\n                    >\n                        ログイン\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.register.path}>新規登録はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignInPageFormComponent);\n","/**\n * Config\n */\nexport default {\n    apiUrl: 'http://localhost:8000', // TODO fix\n    paymentUrl: 'http://localhost:5555',\n}","export class ResponseError extends Error {\n    private readonly res: Response | undefined;\n\n    constructor(message: string, response?: Response) {\n        super(message);\n        this.res = response;\n    }\n\n    getResponse(): Response | undefined {\n        return this.res;\n    }\n}","import {ResponseError} from \"./ResponseError\";\n\nexport class AppResponseError extends ResponseError {}","import config from '../config';\nimport {SettingsRes} from \"../types/appApiTypes\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\n\n/**\n * HTTP client for main app\n */\nclass AppClient {\n    private baseUrl: string = config.apiUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params: any = {}): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'same-origin',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        params.csrf_token = await this.getCsrfToken();\n\n        if (params) {\n            requestOption.body = JSON.stringify(params);\n        }\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n\n    private async getCsrfToken(): Promise<string> {\n        const res: Response = await fetch('/settings', {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n\n        if (!res.ok) {\n            throw new AppResponseError('CSRF tokenの取得に失敗しました', res);\n        }\n\n        const body: SettingsRes = await res.json();\n\n        return body.csrf_token;\n    }\n}\n\nexport default new AppClient();","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {routes} from \"../routes/Route\";\nimport {AppState} from \"../index\";\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>\n\nexport function postLoginAction(accountName: string, password: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/login', {\n            account_name: accountName,\n            password: password,\n        })\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body) => {\n                dispatch(loginSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(loginFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface LoginSuccessAction {\n    type: typeof LOGIN_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function loginSuccessAction(newAuthState: AuthStatusState): LoginSuccessAction {\n    return {\n        type: LOGIN_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface LoginFailAction {\n    type: typeof LOGIN_FAIL,\n    payload: FormErrorState,\n}\n\nexport function loginFailAction(newErros: FormErrorState): LoginFailAction {\n    return {\n        type: LOGIN_FAIL,\n        payload: newErros,\n    };\n}\n","import SignInPageFormComponent from \"../components/SignInFormComponent\";\nimport { connect } from 'react-redux';\nimport { postLoginAction } from \"../actions/authenticationActions\";\nimport {AppState} from \"../index\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\n\nconst mapStateToProps = (state: AppState) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => ({\n    onSubmit: (accountName: string, password: string) => {\n        dispatch(postLoginAction(accountName, password));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPageFormComponent)","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport {Action, AnyAction} from \"redux\";\nimport {SettingsRes} from \"../types/appApiTypes\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {AppState} from \"../index\";\nimport {Settings} from \"../dataObjects/settings\";\nimport {UserData} from \"../dataObjects/user\";\n\nexport const FETCH_SETTINGS_START = 'FETCH_SETTINGS_START';\nexport const FETCH_SETTINGS_SUCCESS = 'FETCH_SETTINGS_SUCCESS';\nexport const FETCH_SETTINGS_FAIL = 'FETCH_SETTINGS_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, AppState, undefined, AnyAction>\n\nexport function fetchSettings(): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<AppState, any, AnyAction>) => {\n        Promise.resolve(() => {\n            dispatch(fetchSettingStartAction());\n        })\n            .then(() => AppClient.get(`/settings`))\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new AppResponseError('Request for getting settings data was failed', response);\n                }\n\n                return response.json();\n            })\n            .then((body: SettingsRes) => {\n                let user: UserData | undefined = undefined;\n\n                if (body.user) {\n                    user = {\n                        id: body.user.id,\n                        accountName: body.user.account_name,\n                        address: body.user.address,\n                        numSellItems: body.user.num_sell_items,\n                    }\n                }\n\n                dispatch(fetchSettingsSuccessAction({\n                    csrfToken: body.csrf_token,\n                    user: user,\n                }));\n            })\n            .catch((err: Error) => {\n                dispatch(fetchItemPageFailAction());\n            });\n    };\n}\n\nexport interface FetchSettingsStartAction extends Action<typeof FETCH_SETTINGS_START> {}\n\nconst fetchSettingStartAction = (): FetchSettingsStartAction => ({\n    type: \"FETCH_SETTINGS_START\",\n});\n\nexport interface FetchSettingsSuccessAction extends Action<typeof FETCH_SETTINGS_SUCCESS> {\n    payload: {\n        settings: Settings,\n    },\n}\n\nconst fetchSettingsSuccessAction = (settings: Settings): FetchSettingsSuccessAction => ({\n    type: \"FETCH_SETTINGS_SUCCESS\",\n    payload: {\n        settings,\n    },\n});\n\nexport interface FetchSettingsFailAction extends Action<typeof FETCH_SETTINGS_FAIL> {}\n\nconst fetchItemPageFailAction = (): FetchSettingsFailAction => ({\n    type: \"FETCH_SETTINGS_FAIL\",\n});\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n        top: 0,\n        bottom: 0,\n        right: 0,\n        left: 0,\n        margin: 'auto',\n        position: 'absolute',\n    },\n}));\n\nconst LoadingComponent: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CircularProgress\n                size={80}\n                className={classes.progress}\n            />\n        </React.Fragment>\n    );\n};\n\nexport default LoadingComponent;\n","import React, {PropsWithChildren} from 'react';\n\nimport { Container, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport LoadingComponent from \"./LoadingComponent\";\n\nconst themeInstance = createMuiTheme({\n    palette: {\n        background: {\n            default: 'white'\n        },\n    },\n});\n\nexport type Props = PropsWithChildren<{\n    load: () => void;\n    loading: boolean,\n}>\n\nclass BasePageComponent extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n\n        this.props.load();\n    }\n\n    render() {\n        return (\n            <MuiThemeProvider theme={themeInstance}>\n                <Container maxWidth=\"lg\">\n                    {\n                        this.props.loading ? (\n                            <LoadingComponent />\n                        ) : (\n                            this.props.children || null\n                        )\n                    }\n                </Container>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport { BasePageComponent }","import {connect} from \"react-redux\";\nimport {AppState} from \"../index\";\nimport {fetchSettings} from \"../actions/settingsAction\";\nimport {BasePageComponent} from \"../components/BasePageComponent\";\n\nconst mapStateToProps = (state: AppState) => ({\n    loading: state.page.isLoading,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    load: () => {\n        dispatch(fetchSettings());\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BasePageComponent);\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SignInFormContainer from \"../containers/SignInFormContainer\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\ntype Props = {};\n\nconst SignInPage: React.FC<Props> = () => {\n    const classes = useStyles();\n\n    return (\n        <BasePageContainer>\n            <div className={classes.paper}>\n                <SignInFormContainer />\n            </div>\n        </BasePageContainer>\n    );\n};\n\nexport default SignInPage;","import React from 'react';\nimport {Avatar, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport { LockOutlined } from \"@material-ui/icons\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link as RouteLink } from 'react-router-dom';\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {RegisterReq} from \"../types/appApiTypes\";\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\nimport {routes} from \"../routes/Route\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SignUpFormComponentProps extends WithStyles<typeof styles> {\n    register: (params: RegisterReq) => void\n    error?: string,\n}\n\ninterface SignUpFormComponentState {\n    accountName: string,\n    address: string,\n    password: string,\n}\n\nclass SignUpFormComponent extends React.Component<SignUpFormComponentProps, SignUpFormComponentState> {\n    constructor(props: SignUpFormComponentProps) {\n        super(props);\n\n        this.state = {\n            accountName: '',\n            address: '',\n            password: '',\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeAccountName = this._onChangeAccountName.bind(this);\n        this._onChangeAddress = this._onChangeAddress.bind(this);\n        this._onChangePassword = this._onChangePassword.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.register({\n            account_name: this.state.accountName,\n            address: this.state.address,\n            password: this.state.password,\n        });\n    }\n\n    _onChangeAccountName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            accountName: e.target.value\n        })\n    }\n\n    _onChangeAddress(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    _onChangePassword(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            password: e.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { accountName, address, password } = this.state;\n\n        return (\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    新規登録\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"ユーザ名\"\n                        name=\"name\"\n                        value={accountName}\n                        onChange={this._onChangeAccountName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"address\"\n                        label=\"住所\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this._onChangeAddress}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"パスワード\"\n                        name=\"password\"\n                        type=\"password\"\n                        value={password}\n                        onChange={this._onChangePassword}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"signUpButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"signUpButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        新規登録\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <RouteLink to={routes.login.path}>すでにアカウントをお持ちの方はこちら</RouteLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUpFormComponent);\n","import { AuthStatusState } from \"../reducers/authStatusReducer\";\nimport AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {RegisterReq, RegisterRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport type State = void | AuthStatusState;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function postRegisterAction(payload: RegisterReq): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        AppClient.post('/register', payload)\n            .then((response: Response) => {\n                if (response.status !== 200) {\n                    throw new Error('HTTP status not 200');\n                }\n\n                return response.json();\n            })\n            .then((body: RegisterRes) => {\n                dispatch(registerSuccessAction({\n                    userId: body.id,\n                    accountName: body.account_name,\n                    address: body.address,\n                }));\n                dispatch(push(routes.top.path))\n            })\n            .catch((err: Error) => {\n                dispatch(registerFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface RegisterSuccessAction {\n    type: typeof REGISTER_SUCCESS,\n    payload: AuthStatusState,\n}\n\nexport function registerSuccessAction(newAuthState: AuthStatusState): RegisterSuccessAction {\n    return {\n        type: REGISTER_SUCCESS,\n        payload: newAuthState,\n    };\n}\n\nexport interface RegisterFailAction {\n    type: typeof REGISTER_FAIL,\n    payload: FormErrorState,\n}\n\nexport function registerFailAction(newErros: FormErrorState): RegisterFailAction {\n    return {\n        type: REGISTER_FAIL,\n        payload: newErros,\n    };\n}\n","import SignUpPageFormComponent from \"../components/SignUpFormComponent\";\nimport { connect } from 'react-redux';\nimport {postRegisterAction, State} from \"../actions/registerAction\";\nimport {RegisterReq} from \"../types/appApiTypes\";\nimport {AppState} from \"../index\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\n\nconst mapStateToProps = (state: AppState) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<State, undefined, AnyAction>) => ({\n    register: (params: RegisterReq) => {\n        dispatch(postRegisterAction(params));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPageFormComponent)","import React from 'react';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport SignUpFormContainer from \"../containers/SignUpFormContainer\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\nconst SignUpPage: React.FC = () => {\n    const classes = useStyles();\n\n    return (\n        <BasePageContainer>\n            <div className={classes.paper}>\n                <SignUpFormContainer />\n            </div>\n        </BasePageContainer>\n    );\n};\n\nexport default SignUpPage;","import React from 'react';\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport { Camera } from \"@material-ui/icons\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\nimport withStyles, { WithStyles, StyleRules } from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid/Grid\";\nimport Button from \"@material-ui/core/Button/Button\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    upload: {\n        display: 'none',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n});\n\ninterface ItemImageUploadComponentProps extends WithStyles<typeof styles> {\n}\n\ninterface ItemImageUploadComponentState {\n    file?: File,\n    imagePreviewUrl: string,\n}\n\nclass ItemImageUploadComponent extends React.Component<ItemImageUploadComponentProps, ItemImageUploadComponentState> {\n    constructor(props: ItemImageUploadComponentProps) {\n        super(props);\n\n        this.state = {\n            imagePreviewUrl: ''\n        };\n        this._handleImageChange = this._handleImageChange.bind(this);\n    }\n\n    _handleImageChange(e: React.ChangeEvent<HTMLInputElement>) {\n        e.preventDefault();\n\n        if (e.target.files === null) {\n            return;\n        }\n\n        const reader = new FileReader();\n        const file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if (typeof reader.result !== 'string') {\n                throw new Error();\n            }\n\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        };\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { imagePreviewUrl } = this.state;\n        let imagePreview = null;\n        console.log(imagePreviewUrl);\n\n        if (imagePreviewUrl) {\n            imagePreview = (<img alt=\"プレビュー\" src={imagePreviewUrl} />);\n        } else {\n            imagePreview = (\n                <Paper>\n                    <Avatar className={classes.avatar}>\n                        <Camera />\n                    </Avatar>\n                    <Typography>商品画像</Typography>\n                </Paper>\n            )\n        }\n\n        return (\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"space-between\"\n                alignItems=\"center\"\n            >\n                <Grid item xs={8}>\n                    {imagePreview}\n                </Grid>\n                <Grid item xs={4}>\n                    <input\n                        accept=\"image/*\"\n                        className={classes.upload}\n                        id=\"outlined-button-file\"\n                        type=\"file\"\n                        onChange={this._handleImageChange}\n                    />\n                    <label htmlFor=\"outlined-button-file\">\n                        <Button variant=\"outlined\" component=\"span\" className={classes.button}>\n                            Upload\n                        </Button>\n                    </label>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default withStyles(styles)(ItemImageUploadComponent);\n","import React from 'react';\n\nimport {Typography, TextField, Button, createStyles, Theme, WithStyles} from '@material-ui/core';\nimport ItemImageUploadComponent from \"../components/ItemImageUploadComponent\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\nimport {ErrorMessageComponent} from \"./ErrorMessageComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    form: {\n        width: '80%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\ninterface SellFormComponentProps extends WithStyles<typeof styles> {\n    sellItem: (name: string, description: string, price: number) => void\n    error?: string,\n}\n\ninterface SellFormComponentState {\n    name: string,\n    description: string,\n    price: number,\n}\n\nclass SellFormComponent extends React.Component<SellFormComponentProps, SellFormComponentState> {\n    constructor(props: SellFormComponentProps) {\n        super(props);\n\n        this.state = {\n            name: '',\n            description: '',\n            price: 0,\n        };\n\n        this._onSubmit = this._onSubmit.bind(this);\n        this._onChangeName = this._onChangeName.bind(this);\n        this._onChangeDescription = this._onChangeDescription.bind(this);\n        this._onChangePrice = this._onChangePrice.bind(this);\n    }\n\n    _onSubmit(e: React.MouseEvent) {\n        e.preventDefault();\n        const { name, description, price } = this.state;\n        this.props.sellItem(name, description, price);\n    }\n\n    _onChangeName(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    _onChangeDescription(e: React.ChangeEvent<HTMLInputElement>) {\n        this.setState({\n            description: e.target.value\n        })\n    }\n\n    _onChangePrice(e: React.ChangeEvent<HTMLInputElement>) {\n        const input = e.target.value;\n\n        // Only allow number\n        if (!validator.isNumeric(input, { no_symbols: true })) {\n            e.preventDefault();\n            return;\n        }\n\n        this.setState({\n            price: Number(input),\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { name, description, price } = this.state;\n\n        return (\n            <React.Fragment>\n                <Typography component=\"h1\" variant=\"h5\">\n                    出品ページ\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <ItemImageUploadComponent/>\n\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"商品名\"\n                        name=\"name\"\n                        value={name}\n                        onChange={this._onChangeName}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"description\"\n                        label=\"商品説明\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this._onChangeDescription}\n                        multiline\n                        rows={5}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"price\"\n                        label=\"値段\"\n                        name=\"price\"\n                        value={price}\n                        onChange={this._onChangePrice}\n                    />\n                    {\n                        this.props.error &&\n                        <ErrorMessageComponent id=\"sellButton\" error={this.props.error}/>\n                    }\n                    <Button\n                        id=\"sellButton\"\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={this._onSubmit}\n                    >\n                        出品する\n                    </Button>\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(SellFormComponent)\n","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {AnyAction} from \"redux\";\nimport {SellReq, SellRes} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\n\nexport const SELLING_ITEM_SUCCESS = 'SELLING_ITEM_SUCCESS';\nexport const SELLING_ITEM_FAIL = 'SELLING_ITEM_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function listItemAction(name: string, description: string, price: number): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        const payload: SellReq = {\n            name, description, price,\n        };\n        AppClient.post('/sell', payload)\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new Error('HTTP status not 200');\n                }\n                return response.json();\n            })\n            .then((body: SellRes) => {\n                dispatch(sellingSuccessAction(body.id));\n                dispatch(push(routes.top.path)); // TODO\n            })\n            .catch((err: Error) => {\n                dispatch(sellingFailAction({\n                    error: err.message,\n                }))\n            })\n    };\n}\n\nexport interface SellingSuccessAction {\n    type: typeof SELLING_ITEM_SUCCESS,\n    payload: {\n        itemId: number,\n    },\n}\n\nexport function sellingSuccessAction(itemId: number): SellingSuccessAction {\n    return {\n        type: SELLING_ITEM_SUCCESS,\n        payload: { itemId },\n    };\n}\n\nexport interface SellingFailAction {\n    type: typeof SELLING_ITEM_FAIL,\n    payload: FormErrorState,\n}\n\nexport function sellingFailAction(newErrors: FormErrorState): SellingFailAction {\n    return {\n        type: SELLING_ITEM_FAIL,\n        payload: newErrors,\n    };\n}\n","import {connect} from \"react-redux\";\nimport SellFormComponent from \"../components/SellFormComponent\";\nimport {listItemAction} from \"../actions/sellingItemAction\";\nimport {AppState} from \"../index\";\nimport {AnyAction} from \"redux\";\nimport {ThunkDispatch} from \"redux-thunk\";\n\nconst mapStateToProps = (state: AppState) => ({\n    error: state.formError.error,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => ({\n    sellItem: (name: string, description: string, price: number) => {\n        dispatch(listItemAction(name, description, price));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellFormComponent);\n","import {Action} from \"redux\";\n\nexport const NOT_FOUND_ERROR = 'NOT_FOUND_ERROR';\nexport const INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR';\n\nexport interface NotFoundErrorAction extends Action<typeof NOT_FOUND_ERROR>{}\n\nexport function notFoundError(): NotFoundErrorAction {\n    return { type: NOT_FOUND_ERROR };\n}\n\nexport interface InternalServerErrorAction extends Action<typeof INTERNAL_SERVER_ERROR>{}\n\nexport function internalServerError(): InternalServerErrorAction {\n    return { type: INTERNAL_SERVER_ERROR };\n}\n","// will be handled as HTTP 404 NotFound\nexport class NotFoundError extends Error {}","import AppClient from '../httpClients/appClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport {Action, AnyAction} from \"redux\";\nimport {GetItemRes} from \"../types/appApiTypes\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {ItemData} from \"../dataObjects/item\";\nimport {NotFoundError} from \"../errors/NotFoundError\";\n\nexport const FETCH_ITEM_PAGE_START = 'FETCH_ITEM_PAGE_START';\nexport const FETCH_ITEM_PAGE_SUCCESS = 'FETCH_ITEM_PAGE_SUCCESS';\nexport const FETCH_ITEM_PAGE_FAIL = 'FETCH_ITEM_PAGE_FAIL';\n\ntype ThunkResult<R> = ThunkAction<R, void, undefined, AnyAction>\n\nexport function fetchItemPageAction(itemId: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        Promise.resolve(() => {\n            dispatch(fetchItemPageStartAction());\n        })\n            .then(() => AppClient.get(`/items/${itemId}.json`))\n            .then((response: Response) => {\n                if (!response.ok) {\n                    if (response.status === 404) {\n                        throw new NotFoundError('Item not found');\n                    }\n\n                    throw new AppResponseError('Request for getting item data was failed', response);\n                }\n\n                return response.json();\n            })\n            .then((body: GetItemRes) => {\n                dispatch(fetchItemPageSuccessAction({\n                    id: body.id,\n                    status: body.status,\n                    sellerId: body.seller_id,\n                    seller: {\n                        id: body.seller.id,\n                        accountName: body.seller.account_name,\n                        numSellItems: body.seller.num_sell_items,\n                    },\n                    buyerId: body.buyer_id,\n                    buyer: body.buyer,\n                    name: body.name,\n                    price: body.price,\n                    thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png', // TODO\n                    description: body.description,\n                }));\n            })\n            .catch((err: Error) => {\n                dispatch(fetchItemPageFailAction());\n            });\n    };\n}\n\nexport interface FetchItemPageStartAction extends Action<typeof FETCH_ITEM_PAGE_START> {}\n\nconst fetchItemPageStartAction = (): FetchItemPageStartAction => {\n    return {\n        type: FETCH_ITEM_PAGE_START,\n    };\n};\n\nexport interface FetchItemPageSuccessAction extends Action<typeof FETCH_ITEM_PAGE_SUCCESS > {\n    payload: {\n        item: ItemData,\n    },\n}\n\nconst fetchItemPageSuccessAction = (item: ItemData): FetchItemPageSuccessAction => {\n    return {\n        type: FETCH_ITEM_PAGE_SUCCESS ,\n        payload: {\n            item\n        },\n    };\n};\n\nexport interface FetchItemPageFailAction extends Action<typeof FETCH_ITEM_PAGE_FAIL > {}\n\nconst fetchItemPageFailAction = (): FetchItemPageFailAction => {\n    return {\n        type: FETCH_ITEM_PAGE_FAIL ,\n    };\n};\n\n","import {\n    INTERNAL_SERVER_ERROR,\n    InternalServerErrorAction,\n    NOT_FOUND_ERROR,\n    NotFoundErrorAction\n} from \"../actions/errorAction\";\nimport {FETCH_ITEM_PAGE_FAIL, FetchItemPageFailAction} from \"../actions/fetchItemPageAction\";\nimport {FETCH_SETTINGS_FAIL, FetchSettingsFailAction} from \"../actions/settingsAction\";\n\nexport const NoError = 'NO_ERROR';\nexport const NotFoundError = 'NOT_FOUND';\nexport const InternalServerError = 'INTERNAL_SERVER_ERROR';\nexport type ErrorType = typeof NoError | typeof NotFoundError | typeof InternalServerError;\n\nexport interface ErrorState {\n    errorType: ErrorType,\n    errorCode?: number,\n}\n\nconst initialState: ErrorState = {\n    errorType: NoError,\n};\n\ntype errorActions = NotFoundErrorAction\n    | InternalServerErrorAction\n    | FetchItemPageFailAction\n    | FetchSettingsFailAction;\n\nconst error = (state: ErrorState = initialState, action: errorActions): ErrorState => {\n    switch (action.type) {\n        case NOT_FOUND_ERROR:\n            return { errorType: NotFoundError, errorCode: 404 };\n        case INTERNAL_SERVER_ERROR:\n        case FETCH_ITEM_PAGE_FAIL:\n        case FETCH_SETTINGS_FAIL:\n            return { errorType: InternalServerError, errorCode: 500 };\n        default:\n            return { errorType: NoError };\n    }\n};\n\nexport default error;","import React from 'react';\n\nconst NotFoundPage: React.FC = () => (\n    <div>404 Not Found</div>\n);\n\nexport default NotFoundPage;","import React from 'react';\n\nconst InternalServerErrorPage: React.FC = () => (\n    <div>Internal Server Error</div>\n);\n\nexport default InternalServerErrorPage;","import {ErrorType, InternalServerError, NotFoundError} from \"../reducers/errorReducer\";\nimport {branch, renderComponent, withProps, compose} from 'recompose';\nimport NotFoundPage from \"../pages/error/NotFoundPage\";\nimport InternalServerErrorPage from \"../pages/error/InternalServerErrorPage\";\n\nexport interface ErrorProps {\n    errorType: ErrorType,\n}\n\ntype BaseProps = ErrorProps;\n\nexport const PageComponentWithError = <Props extends ErrorProps>() =>\n    compose<Props, Props>(\n        withProps((props: Props) => ({\n            errorType: props.errorType,\n        })),\n        branch<BaseProps>(\n            (props: BaseProps) => props.errorType === NotFoundError,\n            renderComponent(NotFoundPage)\n        ),\n        branch<BaseProps>(\n            (props: BaseProps) => props.errorType === InternalServerError,\n            renderComponent(InternalServerErrorPage)\n        )\n    );\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core';\nimport SellFormContainer from \"../containers/SellFormContainer\";\nimport {ErrorProps, PageComponentWithError} from \"../hoc/withBaseComponent\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n}));\n\ntype Props = {} & ErrorProps;\n\nconst SellPage: React.FC<Props> = () => {\n    const classes = useStyles();\n\n    return (\n        <BasePageContainer>\n            <div className={classes.paper}>\n                <SellFormContainer />\n            </div>\n        </BasePageContainer>\n    );\n};\n\nexport default PageComponentWithError<Props>()(SellPage);\n","import React from 'react';\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst ItemEditPage: React.FC = () => (\n    <BasePageContainer>\n        <div>Item Edit Page</div>\n    </BasePageContainer>\n);\n\nexport default ItemEditPage;","import * as React from \"react\";\nimport {Button, createStyles, Theme, WithStyles} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    button: {\n        margin: theme.spacing(3, 0, 1),\n    },\n    buttonProgress: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    onClick: (e: React.MouseEvent) => void\n    buttonName: string\n    loading: boolean\n}\n\nclass LoadingButtonComponent extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n\n        this._onClick = this._onClick.bind(this);\n    }\n\n    _onClick(e: React.MouseEvent) {\n        e.preventDefault();\n\n        this.props.onClick(e);\n    }\n\n    render() {\n        const { loading, buttonName, classes } = this.props;\n\n        return (\n            <React.Fragment>\n                <Button\n                    className={classes.button}\n                    disabled={loading}\n                    onClick={this._onClick}\n                >\n                    {buttonName}\n                </Button>\n                {loading && <CircularProgress size={24} className={classes.buttonProgress}/>}\n            </React.Fragment>\n        );\n    }\n};\n\nexport default withStyles(styles)(LoadingButtonComponent);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport {BuyFormErrorState} from \"../reducers/formErrorReducer\";\nimport {ErrorMessageComponent} from './ErrorMessageComponent';\nimport {createStyles, StyleRules, Theme, WithStyles} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport validator from 'validator';\nimport LoadingButton from \"./LoadingButtonComponent\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n        textAlign: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(3,0, 1),\n    },\n});\n\ninterface ItemBuyFormProps extends WithStyles<typeof styles> {\n    item: ItemData,\n    onBuyAction: (itemId: number, cardNumber: string) => void,\n    loadingBuy: boolean,\n    errors: BuyFormErrorState,\n}\n\ninterface ItemBuyFormState {\n    cardNumber: string,\n}\n\nclass ItemBuyFormComponent extends React.Component<ItemBuyFormProps, ItemBuyFormState> {\n    constructor(props: ItemBuyFormProps) {\n        super(props);\n\n        this.state = {\n            cardNumber: '',\n        };\n\n        this._onChangeCardNumber = this._onChangeCardNumber.bind(this);\n        this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    }\n\n    _onChangeCardNumber(e: React.ChangeEvent<HTMLInputElement>) {\n        const cardNumber = e.target.value;\n\n        if (cardNumber.length > 8) {\n            return;\n        }\n\n        if (!validator.isHexadecimal(cardNumber) && cardNumber !== '') {\n            return;\n        }\n\n        this.setState({\n            cardNumber: cardNumber.toUpperCase(),\n        });\n    }\n\n    _onClickBuyButton(e: React.MouseEvent) {\n        const { item: { id } } = this.props;\n        const { cardNumber } = this.state;\n        this.props.onBuyAction(id, cardNumber);\n    }\n\n    render() {\n        const { item, errors, classes, loadingBuy } = this.props;\n        const cardError = errors.cardError;\n        const appError = errors.buyError;\n\n        return (\n            <React.Fragment>\n                <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl}/>\n                <Typography variant=\"h4\">{item.name}</Typography>\n                <Typography variant=\"h5\">{`¥${item.price}`}</Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"cardNumber\"\n                        label=\"カード番号\"\n                        name=\"cardNumber\"\n                        helperText=\"16進数大文字で入力してください\"\n                        error={!!cardError}\n                        value={this.state.cardNumber}\n                        onChange={this._onChangeCardNumber}\n                        autoFocus\n                    />\n                    {\n                        cardError &&\n                        <ErrorMessageComponent id=\"cardNumber\" error={cardError} />\n                    }\n                    <LoadingButton\n                        onClick={this._onClickBuyButton}\n                        buttonName={'購入'}\n                        loading={loadingBuy}\n                    />\n                    {\n                        appError &&\n                        <ErrorMessageComponent id=\"buyButton\" error={appError}/>\n                    }\n                </form>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withStyles(styles)(ItemBuyFormComponent);\n","import config from '../config';\n\n/**\n * HTTP client for payment service\n */\nclass PaymentClient {\n    private baseUrl: string = config.paymentUrl;\n    private defaultHeaders: HeadersInit = {};\n\n    async get(path: string): Promise<Response> {\n        return await fetch(`${this.baseUrl}${path}`, {\n            method: 'GET',\n            headers: this.defaultHeaders,\n        });\n    }\n\n    async post(path: string, params?: Object): Promise<Response> {\n        let requestOption: RequestInit = {\n            method: 'POST',\n            mode: 'cors',\n            headers: Object.assign({}, this.defaultHeaders, {\n                'Content-Type': 'application/json',\n            }),\n            credentials: 'same-origin',\n        };\n\n        if (params) {\n            requestOption.body = JSON.stringify(params);\n        }\n\n\n        return await fetch(`${this.baseUrl}${path}`, requestOption);\n    }\n}\n\nexport default new PaymentClient();","import {ResponseError} from \"./ResponseError\";\n\nexport class PaymentResponseError extends ResponseError {}","import AppClient from '../httpClients/appClient';\nimport PaymentClient from '../httpClients/paymentClient';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport { FormErrorState } from \"../reducers/formErrorReducer\";\nimport { push } from 'connected-react-router';\nimport {Action, AnyAction} from \"redux\";\nimport {BuyReq} from \"../types/appApiTypes\";\nimport {routes} from \"../routes/Route\";\nimport {CardReq, CardRes} from \"../types/paymentApiTypes\";\nimport {PaymentResponseError} from \"../errors/PaymentResponseError\";\nimport {AppResponseError} from \"../errors/AppResponseError\";\nimport {ResponseError} from \"../errors/ResponseError\";\n\nexport const BUY_START = 'BUY_START';\nexport const BUY_SUCCESS = 'BUY_SUCCESS';\nexport const BUY_FAIL = 'BUY_FAIL';\nexport const USING_CARD_FAIL = 'USING_CARD_FAIL';\n\ntype State = void;\ntype ThunkResult<R> = ThunkAction<R, State, undefined, AnyAction>\n\nexport function buyItemAction(itemId: number, cardNumber: string): ThunkResult<void> {\n    return (dispatch: ThunkDispatch<any, any, AnyAction>) => {\n        Promise.resolve(() => {\n            dispatch(buyStartAction());\n        })\n            .then(() => {\n                return PaymentClient.post('/card', {\n                    card_number: cardNumber,\n                    shop_id: '11', // TODO getting from /settings\n                } as CardReq);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new PaymentResponseError(\n                        'request to /card of payment service was failed', response\n                    );\n                }\n\n                return response.json();\n            })\n            .catch((err: Error) => {\n                // Wrapping to judge kinds of error\n                throw new PaymentResponseError(err.message);\n            })\n            .then((body: CardRes) => {\n                return AppClient.post('/buy', {\n                    item_id: itemId,\n                    token: body.token,\n                } as BuyReq);\n            })\n            .then((response: Response) => {\n                if (!response.ok) {\n                    throw new AppResponseError(\n                        'request to /buy of app was failed', response\n                    );\n                }\n\n                return response.json();\n            })\n            .then(() => {\n                dispatch(buySuccessAction());\n                dispatch(push(routes.buyComplete.path));\n            })\n            .catch((err: Error) => {\n                if (err instanceof ResponseError) {\n                    const res = err.getResponse();\n                    let action: Function;\n\n                    if (err instanceof PaymentResponseError) {\n                        action = usingCardFailAction;\n                    } else if (err instanceof AppResponseError) {\n                        action = buyFailAction;\n                    } else {\n                        action = buyFailAction;\n                    }\n\n                    if (res) {\n                        return res.json()\n                            .then((body: any) => {\n                                if (body && body.error) {\n                                    dispatch(action(body.error))\n                                    return;\n                                }\n\n                                dispatch(action(err.message));\n                            })\n                    }\n\n                    dispatch(action(err.message));\n                    return;\n                }\n\n                dispatch(buyFailAction(err.message));\n            });\n    };\n}\n\nexport interface BuyStartAction extends Action<typeof BUY_START> {}\n\nexport function buyStartAction(): BuyStartAction{\n    return {\n        type: BUY_START,\n    };\n}\n\nexport interface BuySuccessAction extends Action<typeof BUY_SUCCESS>{}\n\nexport function buySuccessAction(): BuySuccessAction {\n    return {\n        type: BUY_SUCCESS,\n    };\n}\n\nexport interface UsingCardFailAction extends Action<typeof USING_CARD_FAIL> {\n    payload: FormErrorState,\n}\n\nexport function usingCardFailAction(error: string): UsingCardFailAction{\n    return {\n        type: USING_CARD_FAIL,\n        payload: {\n            error: undefined,\n            buyFormError: {\n                cardError: error,\n            },\n        },\n    };\n}\nexport interface BuyFailAction extends Action<typeof BUY_FAIL>{\n    payload: FormErrorState,\n}\n\nexport function buyFailAction(error: string): BuyFailAction {\n    return {\n        type: BUY_FAIL,\n        payload: {\n            error: undefined,\n            buyFormError: {\n                buyError: error,\n            },\n        },\n    };\n}\n","import {connect} from \"react-redux\";\nimport ItemBuyFormComponent from \"../components/ItemBuyFormComponent\";\nimport {buyItemAction} from \"../actions/buyAction\";\n\nconst mapStateToProps = (state: any) => ({\n    item: state.viewingItem.item,\n    errors: state.formError.buyFormError,\n    loadingBuy: state.buyPage.loadingBuy,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onBuyAction: (itemId: number, cardNumber: string) => {\n        dispatch(buyItemAction(itemId, cardNumber))\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemBuyFormComponent);\n","import { combineReducers } from 'redux';\nimport authStatus from './authStatusReducer';\nimport formError from './formErrorReducer';\nimport viewingItem from './viewingItemReducer';\nimport error from './errorReducer';\nimport page from './pageReducuer';\nimport buyPage from './buyPageReducer';\nimport { connectRouter } from 'connected-react-router';\nimport { History } from 'history';\n\nexport default (history: History) => combineReducers({\n    router: connectRouter(history),\n    authStatus,\n    formError,\n    viewingItem,\n    error,\n    page,\n    buyPage,\n});\n","import React from 'react';\nimport ItemBuyFormContainer from \"../containers/ItemBuyFormContainer\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst ItemBuyPage: React.FC = () => {\n    return (\n        <BasePageContainer>\n            <ItemBuyFormContainer />\n        </BasePageContainer>\n    );\n};\n\nexport default ItemBuyPage;","import React from 'react';\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst UserSettingPage: React.FC = () => (\n    <BasePageContainer>User setting Page</BasePageContainer>\n);\n\nexport default UserSettingPage;","import React from 'react';\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst BuyCompletePage: React.FC = () => (\n    <BasePageContainer>\n        <div>Item buying Page</div>\n    </BasePageContainer>\n);\n\nexport default BuyCompletePage;","import React from 'react';\nimport { ItemData } from \"../dataObjects/item\";\nimport {createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport {Link as RouteLink, RouteComponentProps} from 'react-router-dom';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport {routes} from \"../routes/Route\";\nimport {StyleRules} from \"@material-ui/core/styles\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {ErrorProps, PageComponentWithError} from \"../hoc/withBaseComponent\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst styles = (theme: Theme): StyleRules => createStyles({\n    title: {\n        margin: theme.spacing(3),\n    },\n    itemImage: {\n        width: '100%',\n        maxWidth: '500px',\n        height: 'auto',\n    },\n    avatar: {\n        width: '50px',\n        height: '50px',\n    },\n    divider: {\n        margin: theme.spacing(1),\n    },\n    descSection: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    buyButton: {\n        margin: theme.spacing(1),\n    }\n});\n\ninterface ItemPageProps extends WithStyles<typeof styles> {\n    item: ItemData\n    load: (itemId: string) => void\n    onClickBuy: (itemId: number) => void\n}\n\ntype Props = ItemPageProps & RouteComponentProps<{ item_id: string }> & ErrorProps\n\nclass ItemPage extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n\n        this.props.load(this.props.match.params.item_id);\n\n        this._onClickBuyButton = this._onClickBuyButton.bind(this);\n    }\n\n    _onClickBuyButton(e: React.MouseEvent) {\n        e.preventDefault();\n        this.props.onClickBuy(this.props.item.id);\n    }\n\n    render() {\n        const { classes, item } = this.props;\n\n        return (\n            <BasePageContainer>\n                Item Page\n                <Typography className={classes.title} variant=\"h3\">{item.name}</Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <img className={classes.itemImage} alt={item.name} src={item.thumbnailUrl}/>\n                    </Grid>\n                    <Grid item xs={12} sm container>\n                        <Grid item xs container direction=\"column\" spacing={2}>\n                            <Grid item xs>\n                                <div className={classes.descSection}>\n                                    <Typography variant=\"h4\">商品説明</Typography>\n                                    <Divider className={classes.divider} variant=\"middle\"/>\n                                    <Typography variant=\"body1\">{item.description}</Typography>\n                                </div>\n\n                                <div className={classes.descSection}>\n                                    <Typography variant=\"h4\">出品者</Typography>\n                                    <Divider className={classes.divider} variant=\"middle\"/>\n                                    <Grid\n                                        container\n                                        direction=\"row\"\n                                        justify=\"center\"\n                                        alignItems=\"center\"\n                                        wrap=\"nowrap\"\n                                        spacing={2}\n                                    >\n                                        <Grid item>\n                                            <RouteLink className={classes.link}\n                                                       to={routes.user.getPath(item.sellerId)}>\n                                                <Avatar className={classes.avatar}>{item.seller.accountName.charAt(0)}</Avatar>\n                                            </RouteLink>\n                                        </Grid>\n                                        <Grid item xs>\n                                            <Typography variant=\"body1\">{item.seller.accountName}</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <AppBar color=\"primary\" position=\"fixed\" className={classes.appBar}>\n                    <Grid\n                        container\n                        spacing={2}\n                        direction=\"row\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item>\n                            <Typography variant=\"h5\">¥{item.price}</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                className={classes.buyButton}\n                                onClick={this._onClickBuyButton}\n                            >\n                                購入\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </AppBar>\n            </BasePageContainer>\n        );\n    }\n}\n\nexport default PageComponentWithError<any>()(withStyles(styles)(ItemPage));\n","import {connect} from \"react-redux\";\nimport ItemPage from \"../pages/ItemPage\";\nimport {fetchItemPageAction} from \"../actions/fetchItemPageAction\";\nimport {AppState} from \"../index\";\nimport {push} from \"connected-react-router\";\nimport {routes} from \"../routes/Route\";\n\nconst mapStateToProps = (state: AppState) => ({\n    item: state.viewingItem.item,\n    errorType: state.error.errorType,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    load: (itemId: string) => {\n        dispatch(fetchItemPageAction(itemId))\n    },\n    onClickBuy: (itemId: number) => {\n        dispatch(push(routes.buy.getPath(itemId)));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemPage);\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link as RouteLink } from 'react-router-dom'\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {routes} from \"../routes/Route\";\n\nconst useStyles = makeStyles(theme => ({\n    itemImage: {\n        height: '100%',\n    },\n}));\n\ninterface ItemComponentProps {\n    itemId: number\n    imageUrl: string\n    title: string\n    price: number\n}\n\nconst ItemComponent: React.FC<ItemComponentProps> = ({\n    itemId, imageUrl, title, price\n}) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <RouteLink to={routes.item.getPath(itemId)}>\n                <img className={classes.itemImage} src={imageUrl} alt={title}/>\n            </RouteLink>\n            <GridListTileBar\n                title={title}\n                subtitle={`¥${price}`}\n            />\n        </Card>\n    );\n};\n\nexport { ItemComponent }","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport { ItemComponent } from './ItemComponent';\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nconst useStyles = makeStyles(theme => ({\n    grid: {\n        width: '300px',\n        height: '300px',\n    },\n}));\n\ninterface ItemListPageProps {\n    items: ItemData[],\n}\n\nconst ItemListComponent: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    const itemComponents = [];\n\n    for (const item of items) {\n        itemComponents.push(\n            <GridListTile className={classes.grid} key={item.id}>\n                <ItemComponent itemId={item.id} imageUrl={item.thumbnailUrl} title={item.name} price={item.price}/>\n            </GridListTile>\n        )\n    }\n\n    return (\n        <GridList cols={3}>\n            {itemComponents}\n        </GridList>\n    );\n};\n\nexport { ItemListComponent }","import React from 'react';\nimport Fab from \"@material-ui/core/Fab/Fab\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Edit} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n        position: 'fixed',\n        top: 'auto',\n        bottom: '30px',\n        right: '30px',\n        width: '100px',\n        height: '100px',\n    },\n}));\n\ninterface SellingButtonComponentProps {\n    onClick: (e: React.MouseEvent) => void\n}\n\nconst SellingButonComponent: React.FC<SellingButtonComponentProps> = ({ onClick }) => {\n    const classes = useStyles();\n\n    return (\n        <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            onClick={onClick}\n        >\n            <Edit fontSize=\"large\" />\n        </Fab>\n    );\n};\n\nexport { SellingButonComponent }","import { push } from 'connected-react-router';\nimport {SellingButonComponent} from \"../components/SellingButtonComponent\";\nimport {connect} from \"react-redux\";\nimport {routes} from \"../routes/Route\";\nimport * as React from \"react\";\nimport {AppState} from \"../index\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\n\nconst mapStateToProps = (state: AppState) => ({});\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => ({\n    onClick: (e: React.MouseEvent) => {\n        e.preventDefault();\n        dispatch(push(routes.sell.path));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SellingButonComponent);","import React from 'react';\nimport {ItemData} from \"../dataObjects/item\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { ItemListComponent } from '../components/ItemListComponent';\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport {ErrorProps, PageComponentWithError} from \"../hoc/withBaseComponent\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(1),\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n    },\n}));\n\ntype ItemListPageProps = {\n    items: ItemData[],\n} & ErrorProps\n\nconst ItemListPage: React.FC<ItemListPageProps> = ({ items }: ItemListPageProps) => {\n    const classes = useStyles();\n\n    return (\n        <BasePageContainer>\n            <div className={classes.root}>\n                <ItemListComponent items={items}/>\n                <SellingButtonContainer/>\n            </div>\n        </BasePageContainer>\n    );\n};\n\nexport default PageComponentWithError<ItemListPageProps>()(ItemListPage);","import {ItemData} from \"./dataObjects/item\";\nimport {UserData} from \"./dataObjects/user\";\n\nexport const mockUser: UserData = {\n    id: 1235,\n    accountName: 'Kirin',\n    address: 'Tokyo',\n    numSellItems: 0,\n};\n\n\nexport const mockItems: ItemData[] = [\n    {\n        id: 1,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 2,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 3,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n    {\n        id: 4,\n        status: 'on_sale',\n        sellerId: 1111,\n        seller: {\n            id: 1111,\n            accountName: 'sota1235',\n            address: \"\",\n            numSellItems: 1,\n        },\n        buyerId: 2222,\n        name: 'いす',\n        price: 10000,\n        description: 'いすです',\n        thumbnailUrl: 'https://i.gyazo.com/c61ab08bca188410e81dbdcf7684e07e.png',\n    },\n];","import {connect} from \"react-redux\";\nimport {AppState} from \"../index\";\nimport ItemListPage from \"../pages/ItemListPage\";\nimport {mockItems} from \"../mocks\";\n\nconst mapStateToProps = (state: AppState) => ({\n    items: mockItems, // TODO\n    errorType: state.error.errorType,\n    loading: false,// TODO state.page.isLoading,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemListPage);\n","import React from 'react';\nimport BasePageContainer from \"../containers/BasePageContainer\";\nimport {ErrorProps, PageComponentWithError} from \"../hoc/withBaseComponent\";\n\ntype Props = {} & ErrorProps\n\nconst TransactionPage: React.FC<Props> = () => (\n    <BasePageContainer>\n        <div>Transaction Page</div>\n    </BasePageContainer>\n);\n\nexport default PageComponentWithError<Props>()(TransactionPage);","import {connect} from \"react-redux\";\nimport {AppState} from \"../index\";\nimport TransactionPage from \"../pages/TransactionPage\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\n\nconst mapStateToProps = (state: AppState) => ({\n    errorType: state.error.errorType,\n    loading: false,// TODO state.page.isLoading,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionPage);\n","import React from 'react';\nimport { ItemListComponent } from \"../components/ItemListComponent\";\nimport { ItemData } from \"../dataObjects/item\";\nimport { UserData } from \"../dataObjects/user\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {Grid} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport SellingButtonContainer from \"../containers/SellingButtonContainer\";\nimport BasePageContainer from \"../containers/BasePageContainer\";\nimport {ErrorProps, PageComponentWithError} from \"../hoc/withBaseComponent\";\n\nconst useStyles = makeStyles(theme => ({\n    avatar: {\n        margin: theme.spacing(3),\n        width: '100px',\n        height: '100px',\n    },\n    itemList: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\ntype Props = {\n    items: ItemData[]\n    user: UserData,\n} & ErrorProps\n\nconst UserPage: React.FC<Props> = ({ items, user }) => {\n    const classes = useStyles();\n\n    return (\n        <BasePageContainer>\n            <p>User Page</p>\n            <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                wrap=\"nowrap\"\n                spacing={2}\n            >\n                <Grid item>\n                    <Avatar className={classes.avatar}>{user.accountName.charAt(0)}</Avatar>\n                </Grid>\n                <Grid item xs>\n                    <Typography variant=\"h3\">{user.accountName}</Typography>\n                </Grid>\n            </Grid>\n            <Divider variant=\"middle\" />\n            <div className={classes.itemList}>\n                <ItemListComponent items={items}/>\n            </div>\n            <SellingButtonContainer />\n        </BasePageContainer>\n    );\n};\n\nexport default PageComponentWithError<Props>()(UserPage);","import {connect} from \"react-redux\";\nimport {AppState} from \"../index\";\nimport {mockItems, mockUser} from \"../mocks\";\nimport UserPage from \"../pages/UserPage\";\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {AnyAction} from \"redux\";\n\nconst mapStateToProps = (state: AppState) => ({\n    items: mockItems, // TODO\n    user: mockUser,\n    errorType: state.error.errorType,\n    loading: false,// TODO state.page.isLoading,\n});\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, undefined, AnyAction>) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPage);\n","import {AppState} from \"../index\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {AuthRoute} from \"../components/Route/AuthRoute\";\n\nconst mapStateToProps = (state: AppState) => ({\n    isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthRoute);\n","import React from 'react';\nimport {Redirect, Route, RouteProps} from \"react-router\";\nimport {routes} from \"../../routes/Route\";\n\ntype Props = {\n    isLoggedIn: boolean\n} & RouteProps\n\nconst AuthRoute: React.FC<Props> = ({ component: Component, isLoggedIn, ...rest}) => {\n    if (!Component) {\n        throw new Error('component attribute required for AuthRoute component');\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={routes.login.path}/>\n                )\n            }\n        />\n    );\n};\n\nexport { AuthRoute }","import {AppState} from \"../index\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {NonAuthRoute} from \"../components/Route/NonAuthRoute\";\n\nconst mapStateToProps = (state: AppState) => ({\n    isLoggedIn: !!state.authStatus.userId,\n});\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NonAuthRoute);\n","import React from 'react';\nimport {Redirect, Route, RouteProps} from \"react-router\";\nimport {routes} from \"../../routes/Route\";\n\ntype Props = {\n    isLoggedIn: boolean\n} & RouteProps\n\nconst NonAuthRoute: React.FC<Props> = ({ component: Component, isLoggedIn, ...rest}) => {\n    if (!Component) {\n        throw new Error('component attribute required for NonAuthRoute component');\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                !isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to={routes.timeline.path}/>\n                )\n            }\n        />\n    );\n};\n\nexport { NonAuthRoute }","import React from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport SignInPage from \"../pages/SignInPage\";\nimport SignUpPage from \"../pages/SignUpPage\";\nimport SellPage from \"../pages/SellPage\";\nimport ItemEditPage from \"../pages/ItemEditPage\";\nimport ItemBuyPage from \"../pages/ItemBuyPage\";\nimport UserSettingPage from \"../pages/UserSettingPage\";\nimport BuyCompletePage from \"../pages/BuyComplete\";\nimport ItemPageContainer from \"../containers/ItemPageContainer\";\nimport ItemListPageContainer from \"../containers/ItemListPageContainer\";\nimport TransactionPageContainer from \"../containers/TransactionPageContainer\";\nimport UserPageContainer from \"../containers/UserPageContainer\";\nimport AuthRoute from '../containers/AuthContainer';\nimport NonAuthRoute from '../containers/NonAuthContainer';\nimport NotFoundPage from \"../pages/error/NotFoundPage\";\n\ninterface route {\n    [name: string]: {\n        path: string,\n        getPath: (...params: any) => string, // TODO: optionalにしたい\n    }\n}\n\nexport const routes: route = {\n    top: {\n        path: '/',\n        getPath: () => '/',\n    },\n    login: {\n        path: '/login',\n        getPath: () => '/login',\n    },\n    register: {\n        path: '/register',\n        getPath: () => 'register',\n    },\n    timeline: {\n        path: '/timeline',\n        getPath: () => '/timeline',\n    },\n    sell: {\n        path: '/sell',\n        getPath: () => '/sell',\n    },\n    item: {\n        path: '/items/:item_id',\n        getPath: (itemId: number) => `/items/${itemId}`,\n    },\n    itemEdit: {\n        path: '/items/:item_id/edit',\n        getPath: (itemId: number) => `/items/${itemId}/edit`\n    },\n    buy: {\n        path: '/items/:item_id/buy',\n        getPath: (itemId: number) => `/items/${itemId}/buy`,\n    },\n    buyComplete: {\n        path: '/buy/complete',\n        getPath: () => '/buy/complete',\n    },\n    transaction: {\n        path: '/transactions/:transaction_id',\n        getPath: (transactionId: number) => `/transactions/${transactionId}`,\n    },\n    user: {\n        path: '/users/:user_id',\n        getPath: (userId: number) => `/users/${userId}`,\n    },\n    userSetting: {\n        path: '/users/setting',\n        getPath: () => '/users/setting',\n    },\n};\n\nexport const AppRoute: React.FC = () => {\n    return (\n        <Switch>\n            <NonAuthRoute exact path={routes.top.path}      component={() => (<div>'hoge'</div>)} />\n            <NonAuthRoute exact path={routes.login.path}    component={SignInPage} />\n            <NonAuthRoute exact path={routes.register.path} component={SignUpPage}/>\n            <AuthRoute exact path={routes.timeline.path}    component={ItemListPageContainer} />\n            <AuthRoute exact path={routes.sell.path}        component={SellPage} />\n            <AuthRoute exact path={routes.item.path}        component={ItemPageContainer} />\n            <AuthRoute exact path={routes.itemEdit.path}    component={ItemEditPage} />\n            <AuthRoute exact path={routes.buy.path}         component={ItemBuyPage} />\n            <AuthRoute exact path={routes.buyComplete.path} component={BuyCompletePage} />\n            <AuthRoute exact path={routes.transaction.path} component={TransactionPageContainer} />\n            <AuthRoute exact path={routes.user.path}        component={UserPageContainer} />\n            <AuthRoute exact path={routes.userSetting.path} component={UserSettingPage} />\n            <Route component={NotFoundPage} />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './App.css';\nimport {AppRoute} from \"./routes/Route\";\n\nconst routes: Array<{\n    path: string,\n    pageName: string,\n}> = [\n    {\n        path: '/',\n        pageName: 'Top page'\n    },\n    {\n        path: '/login',\n        pageName: 'Sign in page',\n    },\n    {\n        path: '/register',\n        pageName: 'Sign up page',\n    },\n    {\n        path: '/timeline',\n        pageName: 'Timeline page'\n    },\n    {\n        path: '/items/:item_id',\n        pageName: 'Item page',\n    },\n    {\n        path: '/items/:item_id/edit',\n        pageName: 'Item edit page',\n    },\n    {\n        path: '/items/:item_id/buy',\n        pageName: 'Item buy page',\n    },\n    {\n        path: '/buy/complete',\n        pageName: 'Buying complete page',\n    },\n    {\n        path: '/sell',\n        pageName: 'Sell page',\n    },\n    {\n        path: '/transactions/:transaction_id',\n        pageName: 'Transaction page',\n    },\n    {\n        path: '/users/:user_id',\n        pageName: 'User page',\n    },\n    {\n        path: '/users/setting',\n        pageName: 'User setting page',\n    },\n];\n\nconst getLinks: () => any[] = () => {\n    const routeComponents: React.ReactNode[] = []; // TODO\n\n    for (const route of routes) {\n        routeComponents.push(\n            <li key={route.pageName}>\n                <Link to={route.path}>{route.pageName}</Link>\n            </li>\n        );\n    }\n\n    return routeComponents;\n};\n\nconst App: React.FC = () => {\n    return (\n        <React.Fragment>\n            <div>\n                <ul>\n                    {getLinks()}\n                </ul>\n            </div>\n            <hr />\n            <AppRoute/>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import logger from './logger';\nimport {Middleware} from \"redux\";\n\nconst middlewares: Middleware[] = [logger];\n\nexport default middlewares;","import {AnyAction, Dispatch, Middleware, MiddlewareAPI} from \"redux\";\nimport {AppState} from \"../index\";\n\nconst logger: Middleware =\n    <S extends AppState>({ getState }: MiddlewareAPI<Dispatch, S>) =>\n        (next: Dispatch<AnyAction>) =>\n            (action: any): any => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    const result = next(action);\n    console.log('next state', getState());\n    console.groupEnd();\n    return result;\n};\n\nexport default logger;","import {LOGIN_SUCCESS} from \"../actions/authenticationActions\";\nimport {REGISTER_SUCCESS} from \"../actions/registerAction\";\nimport {AnyAction} from \"redux\";\n\n\nexport interface AuthStatusState {\n    userId?: number\n    accountName?: string\n    address?: string,\n}\n\nconst authStatus = (state: AuthStatusState = {}, action: AnyAction): AuthStatusState => {\n    switch (action.type) {\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS: {\n            return {\n                ...state,\n                ...action.payload,\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default authStatus;","import {LOGIN_FAIL} from \"../actions/authenticationActions\";\nimport { AnyAction } from \"redux\";\nimport {REGISTER_FAIL} from \"../actions/registerAction\";\nimport {SELLING_ITEM_FAIL} from \"../actions/sellingItemAction\";\nimport {BUY_FAIL, USING_CARD_FAIL} from \"../actions/buyAction\";\n\nexport interface FormErrorState {\n    error?: string,\n    buyFormError?: BuyFormErrorState,\n}\n\nexport interface BuyFormErrorState {\n    cardError?: string, // Error from payment service\n    buyError?: string,  // Error from app\n}\n\nconst initialState: FormErrorState = {\n    error: undefined,\n    buyFormError: {},\n};\n\nconst formError = (state: FormErrorState = initialState, action: AnyAction): FormErrorState => {\n    switch (action.type) {\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case USING_CARD_FAIL:\n        case BUY_FAIL:\n        case SELLING_ITEM_FAIL: {\n            return {\n                ...action.payload,\n            }\n        }\n        default:\n            return initialState;\n    }\n};\n\nexport default formError;","import { AnyAction } from \"redux\";\nimport {ItemData} from \"../dataObjects/item\";\nimport {FETCH_ITEM_PAGE_SUCCESS, FetchItemPageSuccessAction} from \"../actions/fetchItemPageAction\";\n\nexport interface ViewingItemState {\n    item?: ItemData\n}\n\nconst initialState: ViewingItemState = {\n};\n\ntype actions = AnyAction | FetchItemPageSuccessAction;\n\nconst viewingItem = (state: ViewingItemState = initialState, action: actions): ViewingItemState => {\n    switch (action.type) {\n        case FETCH_ITEM_PAGE_SUCCESS:\n            return {...state, item: action.payload.item };\n        default:\n            return state;\n    }\n};\n\nexport default viewingItem;","import {AnyAction} from \"redux\";\nimport {FETCH_ITEM_PAGE_FAIL, FETCH_ITEM_PAGE_START, FETCH_ITEM_PAGE_SUCCESS} from \"../actions/fetchItemPageAction\";\nimport {FETCH_SETTINGS_FAIL, FETCH_SETTINGS_START, FETCH_SETTINGS_SUCCESS} from \"../actions/settingsAction\";\n\nexport interface PageState {\n    isLoading: boolean\n}\n\nconst initialState: PageState = {\n    isLoading: true,\n};\n\nconst page = (state: PageState = initialState, action: AnyAction): PageState => {\n    switch (action.type) {\n        case FETCH_ITEM_PAGE_START:\n        case FETCH_SETTINGS_START:\n            return { ...state, isLoading: true };\n        case FETCH_ITEM_PAGE_SUCCESS:\n        case FETCH_ITEM_PAGE_FAIL:\n        case FETCH_SETTINGS_SUCCESS:\n        case FETCH_SETTINGS_FAIL:\n            return { ...state, isLoading: false };\n        default:\n            return {...state};\n    }\n};\n\nexport default page;","import {AnyAction} from \"redux\";\nimport {BUY_FAIL, BUY_START, BUY_SUCCESS, USING_CARD_FAIL} from \"../actions/buyAction\";\n\nexport interface BuyPageState {\n    loadingBuy: boolean\n}\n\nconst initialState: BuyPageState = {\n    loadingBuy: false,\n};\n\nconst buyPage = (state: BuyPageState = initialState, action: AnyAction): BuyPageState => {\n    switch (action.type) {\n        case BUY_START:\n            return { ...state, loadingBuy: true };\n        case BUY_SUCCESS:\n        case BUY_FAIL:\n        case USING_CARD_FAIL:\n            return { ...state, loadingBuy: false};\n        default:\n            return {...state};\n    }\n};\n\nexport default buyPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createBrowserHistory } from 'history';\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { getStore } from \"./configureStore\";\nimport createRootReducer from './reducers/index';\n\nconst history = createBrowserHistory();\nconst rootReducers = createRootReducer(history);\nconst store = getStore(rootReducers, history);\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <App />\n        </ConnectedRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n","import {applyMiddleware, createStore, Reducer, Store} from 'redux';\nimport { History } from 'history';\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport middlewares from './middlewares';\n\nexport const getStore = (reducer: Reducer, history: History): Store => {\n    return createStore(\n        reducer,\n        composeWithDevTools(\n            applyMiddleware(\n                thunk,\n                routerMiddleware(history),\n                ...middlewares,\n            ),\n        ),\n    );\n};\n"],"sourceRoot":""}